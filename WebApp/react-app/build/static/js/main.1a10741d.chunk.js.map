{"version":3,"sources":["pages/signup/components/GoogleButton.js","utils/ServerConnection.js","pages/signup/SignUpForm.js","utils/UserContext.js","reusable_components/buttons/ContributeButton.js","reusable_components/gift-related/GiftSM.js","assets/well.png","reusable_components/gift-related/GiftButton.js","reusable_components/misc/CarouselComp.js","pages/home/Home.js","pages/login/Login.js","utils/PrivateRoute.js","pages/account/components/friend-snippet/FriendSnippet.js","pages/account/components/gift-profile/GiftPro.js","reusable_components/event-related/EditEvent.js","reusable_components/event-related/EventSM.js","assets/upload.png","reusable_components/buttons/FriendButton.js","pages/account/components/AccountComp.js","pages/account/Account.js","pages/gift/components/Comment.js","reusable_components/gift-related/EditGift.js","pages/gift/Gift.js","pages/event-large/components/EventGift.js","pages/event-large/Event.js","pages/all-events/Events.js","utils/ScrollToTop.js","reusable_components/loading/Loading.js","pages/create-gift/AddGift.js","pages/settings/Settings.js","pages/signup/TermsAndConditions.js","pages/about/About.js","pages/create-event/AddEvent.js","pages/search-results/components/UserCard.js","pages/search-results/SearchResults.js","assets/wish.png","reusable_components/event-related/EventButton.js","header/components/notification-dropdown/components/Notification.js","header/components/notification-dropdown/NotificationDropDown.js","header/Header.js","App.js","utils/ReportWebVitals.js","index.js"],"names":["GoogleLogIn","clientId","buttenText","scope","onSuccess","res","console","log","onFailure","cookiePolicy","isSignedIn","feathers","require","socket","io","app","configure","socketio","timeout","authentication","storage","window","localStorage","usersService","service","eventsService","giftsService","userRelationshipsService","stripeService","activityService","notifyService","SignUpForm","useState","termsChecked","setTermCheck","privChecked","setPrivCheck","name","email","guardianEmail","dob","password","confirmPassword","isGuardianDisabled","errors","state","setState","handleChange","e","target","value","prevState","match","split","Date","getFullYear","today","birthDate","age","m","getMonth","getDate","handleSubmitClick","a","preventDefault","validForm","privateAccount","payload","private","create","location","href","terms","className","Container","id","Card","Header","Body","Form","Group","controlId","size","Label","Control","type","placeholder","onChange","required","disabled","Row","Col","Check","label","title","Button","variant","onClick","to","ListGroup","Item","GoogleButton","UserContext","createContext","useUser","useContext","UsersProvider","children","user","setUser","useEffect","reAuthenticate","then","catch","Provider","ContributeButton","props","show","setShow","amount","error","contributionInput","setContributionInput","gift","block","Modal","onHide","closeButton","Title","src","thumbnail","alt","htmlFor","InputGroup","Prepend","Text","FormControl","validAmount","test","parseFloat","price","progress","donationAmount","parseInt","get","giftData","productData","unitAmount","successURL","GiftSM","pathname","Img","ProgressBar","striped","animated","now","Footer","GiftButton","CarouselComp","responsive","largeDesktop","breakpoint","max","min","items","slidesToSlide","desktop","tablet","mobile","renderButtonGroupOutside","swipeable","draggable","showDots","ssr","infinite","containerClass","map","Home","FooterContent","find","query","userId","data","err","GiftHome","Login","strategy","document","getElementById","authenticate","innerHtml","innerHTML","onKeyPress","event","key","style","display","justifyContent","alignItems","gap","PrivateRoute","Component","component","rest","render","FriendSnippet","margin","height","marginRight","borderRadius","width","border","flexGrow","profile_pic","GiftPro","userData","useParams","overlayTarget","useRef","showOverlay","setShowOverlay","giftInfo","eventState","setEventState","events","toggleOverlay","handleGiftDelete","remove","toast","AddGiftToEventModal","handleClose","selectedEvent","setEvent","options","patch","eventId","Image","ref","icon","faTrash","Overlay","current","placement","rootClose","transition","Popover","as","Content","color","textDecoration","concat","description","EditEvent","eventInfo","setOpen","eventUpdate","setUpdate","nameError","descriptionError","privateCheckedError","setErrors","toISOString","open","rows","end_date","EventSM","history","useHistory","showViewGifts","setShowViewGifts","showEditModal","setShowEditModal","setEventInfo","pic","bio","friend","requested","priv","giftState","setGiftState","handleEventDelete","milliseconds","Promise","resolve","setTimeout","push","grabGifts","$eq","gifts","grabProfileInfo","resp","privacy","length","FriendButton","otherUser","outgoing_requested","incoming_requested","statusState","setStatusState","outgoing","incoming","friendType","includes","$or","otherUserId","relationship","handleFriendRequest","notification","sender","receiver","addFriend","reload","removeFriend","background","withRouter","friends","activityState","setActivityState","friendState","setFriendState","characterCountState","setCharacterCountState","ActivityCard","activityUserData","setActivityUserData","activityOtherUserData","setActivityOtherUserData","activityGiftData","setActivityGiftData","activity","giftId","contributionAmount","createdAt","userProfile","grabBio","grabFriends","friendData","$gt","$sort","onImageChange","files","reader","FileReader","onload","result","readAsDataURL","md","upload","onMouseOver","currentTarget","input","createElement","accept","onchange","click","editable","handleBio","maxLength","item","i","class","Comment","timeAgo","setTimeAgo","convertToTimeSince","date","seconds","Math","floor","interval","years","months","days","hours","minutes","rounded","comment","EditGift","giftUpdate","priceError","linkError","thumbnailError","round","deadline","setGift","Gift","setGiftInfo","creatorInfo","setCreatorInfo","giftComments","commentInput","setCommentInput","handleShow","isInvalidComment","xs","renderGift","faClockRotateLeft","updatedAt","toLocaleDateString","timeZone","handleCommentChange","handleAddComment","EventGift","Event","setOtherUser","GiftRender","renderEdit","Events","grabEvents","ScrollToTop","useLocation","scrollTo","Loading","AddGift","link","amazonUrl","addGift","setAddGift","deadlineError","handlePriceChange","hasAmazonProductData","setHasAmazonProductData","isLoading","setLoading","sleep","checkHasFormErrors","hasError","handleAddGift","message","getAmazonProductData","url","productTitle","image","productDescription","RenderAmazonProductInfo","fluid","emailError","Tabs","fill","defaultActiveKey","Tab","eventKey","Settings","checked","setCheck","compName","handlePrivate","model","mode","saveButton","content","cssClass","cancelButton","actionBegin","submitClick","TermsAndConditions","About","AddEvent","addEvent","setAddEvent","hasNameError","hasDescriptionError","handleAddEvent","createdEvent","UserCard","userID","userRelations","SearchResults","search","results","setResults","outgoingList","setOutgoingList","incomingList","setIncomingList","searchInput","trim","$select","forEach","entry","$ne","$like","users","sort","setSort","faSortAlphaUp","searchIcon","setIcon","b","faSortAlphaDown","EventButton","Notification","handleAdd","itemNum","senderData","notificationData","removeNotification","notificationId","leftHalf","notifications","slice","rightHalf","removeNotificationsRef","setNotifications","Dropdown","ItemText","index","objectFit","notifyMessage","backgroundColor","NotificationDropDown","DropdownToggle","faCircle","transform","faBell","DropdownMenu","dataList","setSearchInput","setNotification","prevNotification","$in","handleClickRedirect","path","logo","Toggle","faUser","Menu","logout","clear","onSubmit","App","exact","Account","AllEvents","position","autoClose","hideProgressBar","newestOnTop","closeOnClick","rtl","pauseOnFocusLoss","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode"],"mappings":"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","file":"static/js/main.1a10741d.chunk.js","sourcesContent":["import React from 'react';\r\nimport {GoogleLogin} from \"react-google-login\";\r\n\r\nconst clientID = \"226396248276-hg5hj7tr2fbhsiu55o5v75unhtl8ipo7.apps.googleusercontent.com\";\r\n\r\n/**\r\n * Google login\r\n * \r\n * Implemented by 2020 group\r\n */\r\nfunction GoogleLogIn() {\r\n    const onSuccess = (res) => {\r\n        console.log(res);\r\n        // axios.get(`https://people.googleapis.com/v1/${res.googleId}`)\r\n        //     .then(function(res){\r\n        //         console.log(res);\r\n        //     })\r\n    }\r\n    const onFailure = (res) =>{\r\n        console.log(\"[Login failed] res: \", res)\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <GoogleLogin\r\n            clientId={clientID}\r\n            buttenText={\"Login\"}\r\n            scope = 'https://www.googleapis.com/auth/user.birthday.read'\r\n            onSuccess={onSuccess}\r\n            onFailure={onFailure}\r\n            cookiePolicy={'single_host_origin'}\r\n            isSignedIn={true}/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default GoogleLogIn;","import io from 'socket.io-client';\r\n\r\nconst feathers = require('@feathersjs/client');\r\n\r\n// Socket.io is exposed as the `io` global.\r\nconst socket = io('http://sdlstudentvm06.msoe.edu:3001');\r\n// @feathersjs/client is exposed as the `feathers` global.\r\n\r\nexport const app = feathers()\r\n    .configure(feathers.socketio(socket, {timeout: 15000}))\r\n    .configure(feathers.authentication({\r\n        storage: window.localStorage\r\n    }));\r\n\r\nexport const usersService = app.service('users');\r\nexport const eventsService = app.service('events');\r\nexport const giftsService = app.service('gifts');\r\nexport const userRelationshipsService = app.service('user-relationships');\r\nexport const stripeService = app.service('stripe');\r\nexport const activityService = app.service('user-activity');\r\nexport const notifyService = app.service('notifications');","import React, {useState} from 'react';\r\nimport \"./SignUpForm.css\";\r\nimport GoogleButton from \"./components/GoogleButton\"\r\n\r\nimport {Button, Form, Container, Col, Card, ListGroup} from 'react-bootstrap';\r\n\r\nimport { usersService } from '../../utils/ServerConnection'\r\nimport {Link} from \"react-router-dom\";\r\n\r\n/**\r\n * Renders the sign-up page\r\n * \r\n */\r\nfunction SignUpForm() {\r\n    const [termsChecked, setTermCheck] = useState(false);\r\n    const [privChecked, setPrivCheck] = useState(false);\r\n\r\n    const handleTermCheck = () => {\r\n        state.errors.terms = !termsChecked ? \"\" : \"Please confirm terms and conditions have been read\";\r\n        setTermCheck(!termsChecked);\r\n    };\r\n    const handlePrivCheck = () => {\r\n        setPrivCheck(!privChecked);\r\n    };\r\n\r\n    const [state, setState] = useState({\r\n        name: \"\",\r\n        email: \"\",\r\n        guardianEmail: \"\",\r\n        dob: \"\",\r\n        password: \"\",\r\n        confirmPassword: \"\",\r\n        isGuardianDisabled: true,\r\n        errors: []\r\n    });\r\n\r\n    /**\r\n     * Handles when various parts of the signup form are modified and sets error states for alerts\r\n     * @param e Source of change\r\n     */\r\n    const handleChange = (e) => {\r\n        const {name, value} = e.target\r\n        setState(prevState => ({\r\n            ...prevState,\r\n            [name]: value\r\n        }));\r\n        switch (e.target.name){\r\n            case \"confirmPassword\":\r\n                state.errors.confirmPassword = state.password === e.target.value ? \"\" : \"Passwords do not match\";\r\n                break;\r\n            case \"password\":\r\n                state.errors.confirmPassword = state.confirmPassword === e.target.value ? \"\" : \"Passwords do not match\";\r\n                break;\r\n            case \"dob\":\r\n                if(!e.target.value.match(/\\d{4}-\\d{1,2}-\\d{1,2}/) && e.target.value.split(\"-\")[0] < new Date().getFullYear()){\r\n                    state.errors.dob = \"Invalid date of birth\";\r\n                } else{\r\n                    let today = new Date();\r\n                    let birthDate = new Date(e.target.value);\r\n                    let age = today.getFullYear() - birthDate.getFullYear();\r\n                    let m = today.getMonth() - birthDate.getMonth();\r\n                    if (m < 0 || (m === 0 && today.getDate() <= birthDate.getDate())) {\r\n                        age--;\r\n                    }\r\n                    if( age < 13){\r\n                        state.errors.dob = \"Must be at least 13 years old to sign up\";\r\n                    }else if (age > 130){\r\n                        state.errors.dob = \"Must not be over 130 years old to sign up\";\r\n                    }else if (age < 18) {\r\n                        state.isGuardianDisabled = false;\r\n                        state.errors.dob = \"\";\r\n                    }else{\r\n                        state.isGuardianDisabled = true;\r\n                        state.errors.dob = \"\";\r\n                        state.errors.guardianEmail = \"\";\r\n                        state.guardianEmail = \"\";\r\n\r\n                    }\r\n                }\r\n                break;\r\n            case \"email\":\r\n                state.errors.email = e.target.value\r\n                    .match(/^[a-zA-Z0-9.!#$%&'*+/=?^_`{|}~-]+@[a-zA-Z0-9-]+(?:\\.[a-zA-Z0-9-]+)*$/) ? \"\" : \"Please enter valid email\";\r\n                break;\r\n            case \"guardianEmail\":\r\n                state.errors.guardianEmail = e.target.value\r\n                    .match(/^[a-zA-Z0-9.!#$%&'*+/=?^_`{|}~-]+@[a-zA-Z0-9-]+(?:\\.[a-zA-Z0-9-]+)*$/) ? \"\" : \"Please enter valid email\";\r\n                break;\r\n            default:\r\n                //terms validation is handled in separate function\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Handles creating an account\r\n     * Function will call the server extension /signup with user data kept in useState\r\n     * @param e\r\n     */\r\n    const handleSubmitClick = async (e) => {\r\n        e.preventDefault();\r\n        if (validForm()) {\r\n            let privateAccount = 0;\r\n            if (privChecked) {\r\n                privateAccount = 1;\r\n            }\r\n            const payload = {\r\n                name: state.name,\r\n                email: state.email,\r\n                password: state.password,\r\n                dob: state.dob,\r\n                private: privateAccount\r\n            }\r\n            //THIS IS NEW SERVER CODE\r\n            try {\r\n                await usersService.create(payload);\r\n                window.location.href = '/login';\r\n            } catch (err) {\r\n                console.log(payload);\r\n                console.log(err);\r\n            }\r\n            console.log('Submitted!');\r\n\r\n            //THIS IS OLD SERVER CODE (dont delete for the front end peeps using the old server)\r\n            // axios.post(process.env.REACT_APP_HOSTNAME + '/signup', payload)\r\n            //     .then(function (response) {\r\n            //         console.log(response);\r\n            //         window.location.href = 'http://localhost:3000/login'\r\n            //\r\n            //     }).catch(function (err) {\r\n            //     console.log(err);\r\n            // });\r\n        }\r\n    }\r\n\r\n    const validForm = () => {\r\n\r\n        return state.errors.confirmPassword === \"\"\r\n            && state.errors.terms === \"\"\r\n            && state.errors.dob === \"\"\r\n            && state.errors.email === \"\"\r\n            && state.errors.guardianEmail === \"\"\r\n            && state.name !== \"\"\r\n            && ((!state.isGuardianDisabled && state.guardianEmail !== \"\") || state.isGuardianDisabled)\r\n    }\r\n\r\n    return (\r\n        <div className={'textFont'}>\r\n            <Container className={\"my-3 d-flex justify-content-center\"} id={\"signupContainer\"}>\r\n                <Card className={\"w-50\"}>\r\n                    <Card.Header className={'text-center cardHeader'}><h3>Sign Up For Free</h3></Card.Header>\r\n                    <Card.Body>\r\n                        <Form>\r\n                            <Form.Group controlId={\"formBasicName\"} size={'sm'}>\r\n                                <p>* indicates a required field</p>\r\n                                <Form.Label>Name*</Form.Label>\r\n                                <Form.Control type={'name'} placeholder={'First and Last name'} name={'name'}\r\n                                              value={state.value}\r\n                                              onChange={handleChange} required/>\r\n                            </Form.Group>\r\n                            <Form.Group controlId={\"formBasicEmail\"}>\r\n                                <Form.Label>Email Address*</Form.Label>\r\n                                <Form.Control type={'email'} placeholder={'Email address'} name={'email'}\r\n                                              value={state.value}\r\n                                              onChange={handleChange} required/>\r\n                            </Form.Group>\r\n                            <span className={\"errors\"}>{state.errors[\"email\"]}</span>\r\n\r\n                            <Form.Group controlId={\"formBasicDOB\"}>\r\n                                <Form.Label>Date of Birth*</Form.Label>\r\n                                <Form.Control type={'date'} placeholder={'yyyy-dd-mm'} name={'dob'}\r\n                                              value={state.value}\r\n                                              onChange={handleChange} required/>\r\n                            </Form.Group>\r\n                            <span className={\"errors\"}>{state.errors[\"dob\"]}</span>\r\n                            <Form.Group controlId={\"formGuardianEmail\"}>\r\n                                <Form.Label>Guardian Email Address (if under 18 years old)</Form.Label>\r\n                                <Form.Control type={'email'} placeholder={'Guardian email address'} name={'guardianEmail'}\r\n                                              onChange={handleChange} required disabled={state.isGuardianDisabled}/>\r\n                            </Form.Group>\r\n                            <span className={\"errors\"}>{state.errors[\"guardianEmail\"]}</span>\r\n                            <Form.Row>\r\n                                <Col>\r\n                                    <Form.Group controlId={\"formBasicPassword\"}>\r\n                                        <Form.Label>Password*</Form.Label>\r\n                                        <Form.Control type={'password'} placeholder={'Password'} name={'password'}\r\n                                                      value={state.value} onChange={handleChange} required/>\r\n                                    </Form.Group>\r\n                                </Col>\r\n                                <Col>\r\n                                    <Form.Group controlId={\"formBasicConfirmPassword\"}>\r\n                                        <Form.Label>Confirm Password*</Form.Label>\r\n                                        <Form.Control type={'password'} placeholder={'Confirm Password'}\r\n                                                      name={'confirmPassword'}\r\n                                                      value={state.value} onChange={handleChange} required/>\r\n                                    </Form.Group>\r\n                                    <span className={\"errors\"}>{state.errors[\"confirmPassword\"]}</span>\r\n                                </Col>\r\n                            </Form.Row>\r\n                            <Form.Group controlId={\"formBasicPrivCheck\"}>\r\n                                <span className={\"formatLine\"}>\r\n                                <Form.Check type={'checkbox'} label={\"Private Account\"} onChange={handlePrivCheck}/>\r\n                                <i id=\"privateinfo\" title={\"A private account ensures that only your friends are able to access your account and gift-related.\"} className=\"fas fa-info-circle\"/>\r\n                                    </span>\r\n                            </Form.Group>\r\n                            <span className={\"errors\"}>{state.errors[\"terms\"]}</span>\r\n                            <Form.Group controlId={\"formBasicTermCheck\"}>\r\n                                <span className={\"formatLine\"}><Form.Check type={'checkbox'} onChange={handleTermCheck}/><a href={'/terms'}>Terms And Conditions*</a> </span>\r\n                            </Form.Group>\r\n                            <Button variant='primary' type={'submit'} disabled={!validForm()} onClick={handleSubmitClick}>Sign up</Button>\r\n                            <p className={'mt-3'}> Already a member? <Link to={\"/login\"}>Log in</Link></p>\r\n                        </Form>\r\n                    </Card.Body>\r\n                    <ListGroup variant=\"flush\" className={'py-3'}>\r\n                        <ListGroup.Item className={'d-flex justify-content-center'}>\r\n                            <GoogleButton/>\r\n                        </ListGroup.Item>\r\n                    </ListGroup>\r\n                </Card>\r\n            </Container>\r\n        </div>\r\n    )\r\n\r\n}\r\n\r\nexport default SignUpForm;\r\n","//This is used to store the user data when they log in (react hook: useContext) - Jon\r\nimport {createContext, useContext, useState, useEffect} from 'react';\r\nimport {app} from './ServerConnection'\r\n\r\n\r\nconst UserContext = createContext(null);\r\n/**\r\n * gets the currently logged in user\r\n * @returns {null}\r\n */\r\nexport const useUser = () => {\r\n    return useContext(UserContext);\r\n}\r\n\r\n/**\r\n * provides the logged in users to all the pages that it wraps\r\n * @param children the pages it wraps\r\n */\r\nexport const UsersProvider = ({ children }) => {\r\n    const [user, setUser] = useState(null);\r\n\r\n    useEffect(() => {\r\n        app.reAuthenticate()\r\n            .then(({user}) => {\r\n                setUser(user);\r\n            })\r\n            .catch(() => {\r\n                //Do nothing, user was not logged in previously\r\n            });\r\n    }, [user]);\r\n\r\n    return (\r\n        <UserContext.Provider\r\n            value={{\r\n                user\r\n            }}\r\n        >\r\n            {children}\r\n        </UserContext.Provider>\r\n    )\r\n}","import React, { useState } from 'react';\r\nimport '../event-related/EventButton.css'\r\nimport {Button, Modal, InputGroup, FormControl} from \"react-bootstrap\";\r\nimport {stripeService} from \"../../utils/ServerConnection\";\r\n\r\n\r\n/**\r\n * This is a functional component that allows the user to contribute to a gift\r\n */\r\nfunction ContributeButton(props){\r\n\r\n    // states for the modal\r\n    const [show, setShow] = useState(false);\r\n    const handleShow = () => setShow(true);\r\n    const handleClose = () => setShow(false);\r\n\r\n    const [contributionInput, setContributionInput] = useState({\r\n        amount: '',\r\n        error: ''\r\n    });\r\n\r\n    const isInvalidForm = () => {\r\n        return contributionInput.error !== '';\r\n    };\r\n\r\n    // Updates contribution state\r\n    const handleAmountChange = (e) => {\r\n        setContributionInput(prevState => ({...prevState, error: ''}));\r\n        setContributionInput(prevState => ({...prevState, amount: e.target.value}))\r\n    };\r\n\r\n    /** Form Validation and Handlers for contributing to a gift\r\n     * @param e Button event\r\n     */\r\n     const handleContribute = (e) => {\r\n        console.log(\"You clicked me!\");\r\n        e.preventDefault();\r\n\r\n        //Invalid price (entering letters, more than 2 digits for cents)\r\n        const expression = /^\\d+(.\\d{1,2})?$/;\r\n        let validAmount = expression.test(contributionInput.amount);\r\n\r\n        // Validate form\r\n        if (contributionInput.amount === '') {\r\n            console.log(\"nothing\");\r\n            setContributionInput(prevState => ({...prevState, error: 'Must enter a contribution amount'}))\r\n        } else if (!validAmount) {\r\n            console.log(\"Invalid\");\r\n            setContributionInput(prevState => ({...prevState, error: 'Must enter a valid price'}))\r\n        } else if (parseFloat(contributionInput.amount) > (props.gift.price - props.gift.progress)) {\r\n            console.log(\"too much\");\r\n            setContributionInput(prevState => ({\r\n                ...prevState,\r\n                error: 'Cannot add more funds than needed'\r\n            }))\r\n        } else {\r\n            //Stripe takes price in cents so multiply by 100\r\n            console.log(\"I got here!\");\r\n            const donationAmount = parseInt(parseFloat(contributionInput.amount) * 100);\r\n            stripeService.get({\r\n                giftData: props.gift,\r\n                productData: {\r\n                    name: \"Wishwell donation to \" + props.gift.name\r\n                },\r\n                unitAmount: donationAmount\r\n            })\r\n                .then(( successURL) => {\r\n                    //Success (even if they cancel)\r\n                    console.log(\"I got here\");\r\n                    window.location = successURL\r\n                })\r\n                .catch( (error) => {\r\n                    //Error with request occurred\r\n                    console.log(\"ERROR: \", error);\r\n                });\r\n        }\r\n    };\r\n\r\n\r\n    return (\r\n        <div>\r\n            <Button className=\"mr-1\" value={props.gift.id} onClick={handleShow} id={\"CardFooterButton\"} size=\"lg\" block>\r\n                Contribute\r\n            </Button>\r\n            <Modal show={show} onHide={handleClose}>\r\n                <Modal.Header closeButton>\r\n                    <Modal.Title><a className={'black-link'} href={`/gifts/${props.gift.id}`}>{props.gift.name}</a></Modal.Title>\r\n                </Modal.Header>\r\n                <Modal.Body>\r\n                    <div className={'modal-body'}>\r\n                        <div className={'modal-gift-thumbnail-container'}>\r\n                            <img className={'modal-gift-thumbnail'} src={props.gift.thumbnail} alt={''}/>\r\n                        </div>\r\n                        <div>\r\n                            <label htmlFor=\"amount\">Contribution Amount</label><br/>\r\n                            <InputGroup>\r\n                                <InputGroup.Prepend>\r\n                                    <InputGroup.Text>$</InputGroup.Text>\r\n                                </InputGroup.Prepend>\r\n                                <FormControl id={'amount'} onChange={handleAmountChange}/>\r\n                            </InputGroup>\r\n                            <div className={isInvalidForm() ? 'form-error-message' : 'hidden'}>{contributionInput.error}</div>\r\n                            <br/>\r\n                            <Button id={\"contributeButton\"} onClick={handleContribute} block>\r\n                                Contribute\r\n                            </Button>\r\n                        </div>\r\n                    </div>\r\n                </Modal.Body>\r\n            </Modal>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ContributeButton;","import React from 'react';\r\nimport {Link} from 'react-router-dom';\r\nimport \"../../pages/gift/Gifts.css\";\r\nimport \"../../pages/home/Home.css\";\r\nimport {Card, ProgressBar} from 'react-bootstrap';\r\nimport ContributeButton from '../buttons/ContributeButton';\r\n\r\n\r\n/**\r\n * This is the gift small component. It is rendered on the homepage to display the user's\r\n * gifts in a carousel\r\n *\r\n * @param props {Object} {id, deadline(needs to be implemented), funds (needs to be implemented), receiverId,\r\n * receiverName, name, thumbnail, price, description, progress, userId}\r\n * \r\n */\r\nfunction GiftSM(props) {\r\n\r\n    return (\r\n        <div className={'gift-container'}>\r\n            <Card>\r\n                <Link to={{\r\n                    pathname: `/gifts/${props.gift.id}`\r\n                }}>\r\n                    <div className={'gift-thumbnail-container'}>\r\n                        <Card.Img className={'gift-thumbnail'} variant={'top'} src={props.gift.thumbnail}/>\r\n                    </div>\r\n                </Link>\r\n                <Card.Body className={'gift-card-body'}>\r\n                    <Card.Title className={'giftSM-title'} data-testid='giftSM-Header' id='giftSM-Header'><Link className={'black-link'} to={`/gifts/${props.gift.id}`}>{props.gift.name}</Link></Card.Title>\r\n                    <div className={'giftSM-desc'}>\r\n                        <span className={'gift-sm-funds'}>${props.gift.progress}</span><br/>\r\n                        <span className={'gift-sm-price'}>of ${props.gift.price} funded</span>\r\n                        <ProgressBar striped={'true'} animated={'true'} className={'gift-sm-progressbar'} now={(props.gift.progress / props.gift.price) * 100}/>\r\n                        <br/>\r\n                    </div>\r\n                </Card.Body>\r\n                <Card.Footer>\r\n                    <ContributeButton gift={props.gift} />\r\n                </Card.Footer>\r\n            </Card>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default GiftSM\r\n","export default __webpack_public_path__ + \"static/media/well.21920098.png\";","import React from 'react';\r\nimport { useUser } from \"../../utils/UserContext\";\r\nimport { Link } from 'react-router-dom';\r\nimport {Button} from \"react-bootstrap\";\r\n\r\n/**\r\n * This is a functional component that allows the user to add a gift.\r\n * We use this in header and other pages.\r\n * @returns {JSX.Element}\r\n * @constructor\r\n */\r\nfunction GiftButton(){\r\n    const {user} = useUser();\r\n\r\n    /**\r\n     * This is part of the constructor of the gift button\r\n     */\r\n    if(user){\r\n        //If the user is logged in have a button that allows you to add a button\r\n        return(\r\n            //Sends you to the /AddGift link of the web page\r\n                <Link to={'/AddGift'}>\r\n                  <Button id={'addAGiftId'}>Add a Gift</Button>\r\n                </Link>\r\n        )\r\n    } else {\r\n        //If the user is not logged in have a button that will send them to the\r\n        // sign up page to allow them to get started.\r\n        return (\r\n            <Link to={'/signup'}>\r\n                <Button id={'getStartedId'}>Get Started</Button>\r\n            </Link>\r\n        )\r\n    }\r\n\r\n}\r\n\r\nexport default GiftButton;\r\n","import React from 'react';\r\nimport Carousel from 'react-multi-carousel';\r\nimport 'react-multi-carousel/lib/styles.css';\r\nimport '../../pages/home/Home.css'\r\n\r\n/**\r\n * This component renders a carousel\r\n * It is used on the home page for gifts and on the account page for all-events\r\n *\r\n * As of 4/20/22\r\n *\r\n * @param {*} props a map of the gift or event components to be rendered in the carousel\r\n */\r\nfunction CarouselComp(props){\r\n\r\n    // TODO : find a happy ground for breakpoints so we dont have two different ones\r\n\r\n    // Breakpoints for gifts\r\n    const responsiveGift = {\r\n        largeDesktop: {\r\n            breakpoint: {max: 5000, min: 3000},\r\n            items: 4,\r\n            slidesToSlide: 4 // optional, default to 1.\r\n        },\r\n        desktop: {\r\n            breakpoint: {max: 3000, min: 1200},\r\n            items: 3,\r\n            slidesToSlide: 3 // optional, default to 1.\r\n        },\r\n        tablet: {\r\n            breakpoint: {max: 1200, min: 525},\r\n            items: 2,\r\n            slidesToSlide: 2 // optional, default to 1.\r\n        },\r\n        mobile: {\r\n            breakpoint: {max: 525, min: 0},\r\n            items: 1,\r\n            slidesToSlide: 1 // optional, default to 1.\r\n        }\r\n    };\r\n\r\n    // Breakpoints for all-events\r\n    const responsiveEvent = {\r\n        largeDesktop: {\r\n            breakpoint: {max: 5000, min: 2400},\r\n            items: 4,\r\n            slidesToSlide: 4\r\n        },\r\n        desktop: {\r\n            breakpoint: {max: 2400, min: 1024},\r\n            items: 3,\r\n            slidesToSlide: 3\r\n        },\r\n        tablet: {\r\n            breakpoint: {max: 1024, min: 464},\r\n            items: 2,\r\n            slidesToSlide: 2\r\n        },\r\n        mobile: {\r\n            breakpoint: {max: 464, min: 0},\r\n            items: 1,\r\n            slidesToSlide: 1\r\n        }\r\n    };\r\n\r\n    return (\r\n        <Carousel\r\n            responsive={props.id === 'gift' ? responsiveGift : responsiveEvent}\r\n            renderButtonGroupOutside={true}\r\n            swipeable={false}\r\n            draggable={false}\r\n            showDots={true}\r\n            ssr={true} // means to render carousel on server-side.\r\n            infinite={false}\r\n            containerClass=\"pop-gift-container\"\r\n        >\r\n            {props.map}\r\n        </Carousel>\r\n    )\r\n}\r\n\r\nexport default CarouselComp;","import React, {useEffect, useState} from 'react';\r\nimport './Home.css';\r\nimport {useUser} from \"../../utils/UserContext\";\r\nimport GiftSM from \"../../reusable_components/gift-related/GiftSM\";\r\nimport 'react-multi-carousel/lib/styles.css';\r\nimport GiftHome from \"../../assets/well.png\";\r\nimport GiftButton from \"../../reusable_components/gift-related/GiftButton\";\r\nimport {giftsService} from \"../../utils/ServerConnection\";\r\nimport CarouselComp from '../../reusable_components/misc/CarouselComp';\r\n\r\n/**\r\n * this is the html of the Home page which includes rendering the home page\r\n * for both logged out and logged in users.\r\n * \r\n * As of 04/05/22\r\n */\r\nfunction Home() {\r\n    // this is an object of the logged in user which holds all\r\n    // the data about the current logged in user\r\n    const {user} = useUser();\r\n\r\n    // holds the current state of gift-related as it pertains to the Home page\r\n    const [state, setState] = useState({\r\n        giftData: []\r\n    });\r\n\r\n    /**\r\n     * On page load\r\n     */\r\n    useEffect(() => {\r\n        if (user) {\r\n            //TODO: do we want to change this to be friend's gift-related? If so what are the criteria?\r\n            giftsService.find({\r\n                query:\r\n                    {userId: user.id}\r\n            }).then(({data}) => {\r\n                setState({giftData: data})\r\n            }).catch((err) => {\r\n                console.log(\"Issue loading gift-related on Homepage\", err);\r\n            })\r\n        }\r\n    }, [user]);\r\n\r\n\r\n    /**\r\n     * used in the return statement at the bottom, returns a different footer based on whether or not\r\n     * the user is logged in\r\n     * as of: 04/05/22\r\n     */\r\n    function FooterContent() {\r\n        if (user) {\r\n            return (\r\n                <div className={'content-container'}>\r\n                    <p className={'section-title'}>My Gifts</p>\r\n                    <div className={'pop-gift-container'}>\r\n                        <CarouselComp map={\r\n                            state.giftData.map(function (gift) {\r\n                                return <GiftSM gift={gift} key={gift.id}/>\r\n                            })\r\n                        } id=\"gift\"/>\r\n                    </div>\r\n                </div>\r\n            )\r\n        } else {\r\n            return (\r\n                <div className={'content-container'}>\r\n                    <p className={'section-title'}>About Us</p>\r\n                    <p className={'about-us-text'}>Wishwell is a gift giving platform that combines the elements of a gift\r\n                        registry and a social media sharing platform. Use Wishwell to see and keep track of what gifts\r\n                        you and your friends want, see what upcoming events your friends are planning and create your\r\n                        own events, and donate to the gifts of your choosing!</p>\r\n                </div>\r\n            )\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <div className={'content-container'}>\r\n                <div className={'home-about-container'}>\r\n                    <div className={'giftly-info-container'}>\r\n                        <div>\r\n                            <p className={'section-title'}>Give Them the Right Gift.</p>\r\n                            <p className={'section-description'}>Easily create a gift for you or a loved one</p>\r\n                            {/*TODO I don't like that our gift button is also the get started button. They should be separate IMO - jon*/}\r\n                            <GiftButton/>\r\n                        </div>\r\n                    </div>\r\n                    <div className={'home-image'}>\r\n                        <img className={'home-image'} src={GiftHome} alt={\"WishWell\"}/>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div className={'grey-background'}>\r\n                <FooterContent/>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Home;\r\n","import React, {useState} from 'react';\r\nimport {Button, Form, Container, Card} from 'react-bootstrap';\r\nimport {app} from '../../utils/ServerConnection'\r\nimport {Link} from \"react-router-dom\";\r\n\r\n/**\r\n * Renders the login page\r\n */\r\nfunction Login() {\r\n\r\n    const [state, setState] = useState({\r\n        email: \"\",\r\n        password: \"\",\r\n    });\r\n\r\n    /**\r\n     * handles every change to the state\r\n     */\r\n    const handleChange = (e) => {\r\n        const {name, value} = e.target;\r\n        setState(prevState => ({\r\n            ...prevState,\r\n            [name]: value\r\n        }));\r\n    };\r\n\r\n    /**\r\n     * Logs in a user, after success it will direct to the home page again.\r\n     */\r\n    const handleSubmitClick = async (e) => {\r\n        e.preventDefault();\r\n        const payload = {\r\n            strategy: 'local',\r\n            email: state.email,\r\n            password: state.password,\r\n        };\r\n\r\n        const error = document.getElementById('error');\r\n\r\n        try {\r\n            await app.authenticate(payload);\r\n            error.innerHtml = '';\r\n            window.location.href = '/';\r\n        } catch (err) {\r\n            console.log(\"Incorrect email or password\", err);\r\n            error.innerHTML = \"<div role='alert' class='fade alert alert-danger show'> Incorrect email or password! </div>\"\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div className={'textFont'}>\r\n            <Container className={'my-3 d-flex justify-content-center'}>\r\n                <Card className={\"w-50\"}>\r\n                    <Card.Header className={'text-center cardHeader'}><h3>Log in</h3></Card.Header>\r\n                    <Card.Body>\r\n                        <Form>\r\n                            <Form.Group controlId={\"formBasicEmail\"}>\r\n                                <Form.Label>Email address</Form.Label>\r\n                                <Form.Control type={'email'} placeholder={'Enter email'} name={'email'}\r\n                                              value={state.value}\r\n                                              onChange={handleChange} required/>\r\n                            </Form.Group>\r\n                            <Form.Group controlId={\"formBasicPassword\"}>\r\n                                <Form.Label>Password</Form.Label>\r\n                                <Form.Control type={'password'} placeholder={'Enter password'} name={'password'}\r\n                                              value={state.value} onChange={handleChange}\r\n                                              onKeyPress={event => {\r\n                                                if (event.key === \"Enter\") {\r\n                                                  handleSubmitClick(event)\r\n                                                }\r\n                                              }}\r\n                                              required/>\r\n                            </Form.Group>\r\n                        </Form>\r\n                        <div id='error'/>\r\n                        <Button variant='primary' type={'submit'} onClick={handleSubmitClick}>Log in</Button>\r\n                        <div style={{display:'flex', justifyContent:'left', alignItems:'center', gap:'1ch'}}>\r\n                            <p className={'mt-3'}> Not a member? </p>\r\n                            <Link to={\"/signup\"}>Sign up</Link>\r\n                        </div>\r\n                    </Card.Body>\r\n                </Card>\r\n            </Container>\r\n        </div>\r\n\r\n    )\r\n}\r\n\r\nexport default Login;\r\n","import React from \"react\";\r\nimport {Route, Link} from \"react-router-dom\";\r\nimport { useUser } from \"./UserContext\";\r\n\r\n/**\r\n * Creates a route to specified component\r\n * \r\n */\r\nfunction PrivateRoute({ component: Component, ...rest }) {\r\n    const {user} = useUser();\r\n    return (\r\n        <Route\r\n            {...rest}\r\n            render={props =>\r\n                user ? (\r\n                    <Component {...props} />\r\n                ) : (\r\n                  <div><Link to={'/login'}>Log In</Link> to view</div>\r\n                )\r\n            }\r\n        />\r\n    );\r\n}\r\n\r\nexport default PrivateRoute;","import React from \"react\";\r\nimport Card from \"react-bootstrap/Card\";\r\nimport \"./FriendsSnippet.css\"\r\nimport {Link} from \"react-router-dom\";\r\n\r\n/**\r\n * This is the profile picture and name displayed for each friend on the\r\n * account page\r\n * \r\n */\r\nfunction FriendSnippet(props) {\r\n    return (\r\n        <Link to={'/account/' + props.data.id}>\r\n            <Card style={{alignItems: 'center', margin: 0, height: '100px', marginRight: '10px'}}\r\n                  className={'border-0'}>\r\n                <Card.Title className={'friends-name-link'}>{props.data.name}</Card.Title>\r\n                <Card.Img style={{\r\n                    borderRadius: '50%',\r\n                    width: '60px',\r\n                    height: '60px',\r\n                    border: '1px solid lightgray',\r\n                    // background: 'rgba(143, 186, 243, .2)',\r\n                    flexGrow: '1'\r\n                }} className='friendPic' src={props.data.profile_pic}/>\r\n            </Card>\r\n        </Link>\r\n    )\r\n}\r\n\r\nexport default FriendSnippet;\r\n","import { Popover, Image, Button, Modal, Overlay } from \"react-bootstrap\";\r\nimport React, {useState, useEffect, useRef} from \"react\";\r\nimport {Link} from 'react-router-dom';\r\nimport \"./gift-pro.css\"\r\nimport {FontAwesomeIcon} from \"@fortawesome/react-fontawesome\";\r\nimport { faTrash } from \"@fortawesome/free-solid-svg-icons\";\r\nimport {useUser} from \"../../../../utils/UserContext\";\r\nimport {giftsService, eventsService} from \"../../../../utils/ServerConnection\";\r\nimport {toast} from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\nimport Select from 'react-select'\r\nimport {useParams} from 'react-router-dom';\r\nimport ContributeButton from \"../../../../reusable_components/buttons/ContributeButton\";\r\n\r\n\r\n/**\r\n * This is the Gift Profile component. It is used to display a gift on a user's profile\r\n * page\r\n *\r\n * @param {*} props\r\n */\r\nfunction GiftPro(props) {\r\n    // User data\r\n    const {user} = useUser();\r\n    const userData = useParams();\r\n    const overlayTarget = useRef(null);\r\n\r\n    const [showOverlay, setShowOverlay] = useState(false);\r\n\r\n    const [show, setShow] = useState(false);\r\n\r\n    // Open and close states for modals\r\n    const handleShow = () => setShow(true);\r\n\r\n    const giftInfo = props.gift;\r\n\r\n    const [eventState, setEventState] = useState([]);\r\n\r\n    /**\r\n     * UseEffect ran to retrieve the event's in a user's profile. This is used to populate the \"add to event\" dropdown\r\n     */\r\n    useEffect(() => {\r\n        eventsService.find({\r\n            query: {\r\n                userId: userData.id\r\n            }\r\n        }).then((events) => {\r\n            setEventState(events.data);\r\n        }).catch((err) => {\r\n            console.log(err);\r\n        });\r\n    }, [userData.id]);\r\n\r\n    const removeGiftAlert = () => toast(\"This gift has been removed from your Wish List.\");\r\n\r\n    const toggleOverlay = () => {\r\n        setShowOverlay(!showOverlay)\r\n    }\r\n\r\n    /**\r\n     * Removes gift from database and front end\r\n     */\r\n    const handleGiftDelete = () => {\r\n        giftsService.remove(props.gift.id);\r\n        removeGiftAlert();\r\n        console.log(\"gift has been removed\");\r\n        toggleOverlay();\r\n    }\r\n\r\n    /**\r\n     * Modal for adding gifts to an event\r\n     *\r\n     * @returns {JSX.Element}\r\n     * @constructor\r\n     */\r\n    function AddGiftToEventModal(props) {\r\n        // functions to handle opening and closing of modals\r\n        const handleClose = () => props.setShow(false);\r\n\r\n        const [selectedEvent, setEvent] = useState([]);\r\n\r\n\r\n        /**\r\n         * Adds gift stored in the props to an event in the database\r\n         */\r\n        const addToEvent = () => {\r\n            giftsService.patch(props.gift.id, {eventId: selectedEvent.value})\r\n                .then(() => {\r\n                    handleClose()\r\n                    toast(\"Gift added to event: \" + selectedEvent.label);\r\n                })\r\n                .catch((err) => {\r\n                    toast.error(\"Failed to add gift to event\");\r\n                    console.log(\"did not add gift to event\", err);\r\n                });\r\n        }\r\n\r\n        /**\r\n         * Method maps the all-events made by the user into a dropdown friendly format\r\n         *\r\n         * @returns Events made by the user\r\n         */\r\n        const mapEvents = () => {\r\n            return eventState.map((event) => {\r\n                return {value: event.id, label: event.name}\r\n            });\r\n        }\r\n\r\n        return (\r\n            <Modal show={show} onHide={handleClose} className='h-100'>\r\n                <Modal.Header closeButton>\r\n                    <Modal.Title>Event Selector</Modal.Title>\r\n                </Modal.Header>\r\n                <Modal.Body className=\"\">\r\n                    <div className='d-flex flex-column w-100'>\r\n                        <Select\r\n                            options={mapEvents()}\r\n                            className='w-100'\r\n                            onChange={(e) => {setEvent(e)}}\r\n                            value={selectedEvent.Label}\r\n                        />\r\n                    </div>\r\n                </Modal.Body>\r\n                <Modal.Footer>\r\n                    <Button id={\"submitButton\"} onClick={addToEvent}>\r\n                        Submit\r\n                    </Button>\r\n                </Modal.Footer>\r\n            </Modal>\r\n        )\r\n    }\r\n\r\n\r\n    return (\r\n        <>\r\n            <div className={'gift-pro-container'}>\r\n                <div className={'gift-pro-thumbnail-container'}>\r\n                    <Link to={`/gifts/${props.gift.id}`}>\r\n                        <Image className={'gift-image'} src={props.gift.thumbnail} alt={''}/>\r\n                    </Link>\r\n                </div>\r\n                <div className={\"gift-pro-information-container\"}>\r\n                    <div className={'gift-pro-header'}>\r\n                        <h3>\r\n                            <Link className={'black-link'} to={`/gifts/${props.gift.id}`}>{giftInfo.name}</Link>\r\n                        </h3>\r\n                        {props.gift.userId === user.id &&\r\n                            <div ref={overlayTarget}>\r\n                                <FontAwesomeIcon className={'delete-gift'} icon={faTrash} onClick={toggleOverlay}/>\r\n                            </div>\r\n                        }\r\n                        <Overlay target={overlayTarget.current} show={showOverlay} placement={'left'} rootClose={true}\r\n                                 onHide={toggleOverlay} transition={false}>\r\n                            {({show: _show, ...props}) => (\r\n                                <Popover {...props} id={`popover-positioned-left`}>\r\n                                    <Popover.Title as=\"h3\">Delete Gift?</Popover.Title>\r\n                                    <Popover.Content>\r\n                                        <Button className=\"mr-3 btn btn-danger\" onClick={toggleOverlay}>No</Button>\r\n                                        <Button className=\"btn btn-secondary\" onClick={handleGiftDelete}>\r\n                                            <Link style={{color: 'inherit', textDecoration: 'none'}}\r\n                                                  to={'/account/'.concat(user.id)}>Yes</Link>\r\n                                        </Button>\r\n                                    </Popover.Content>\r\n                                </Popover>)}\r\n                        </Overlay>\r\n                    </div>\r\n                    <p> Description: {giftInfo.description}</p>\r\n                    <p>Price: ${giftInfo.price}</p>\r\n                    <p>Progress: ${giftInfo.progress} / ${giftInfo.price}</p>\r\n                    <div className={'gift-pro-buttons'}>\r\n                        <ContributeButton gift={props.gift}/>\r\n                        {parseInt(userData.id) === user.id &&\r\n                        <Button name=\"addGiftToEventButton\" value={props.gift.id} onClick={handleShow}>Add To Event</Button>}\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <AddGiftToEventModal setShow={setShow} gift={giftInfo}/>\r\n        </>\r\n    )\r\n}\r\n\r\n\r\nexport default GiftPro;","import React, {useState, useEffect} from 'react';\r\nimport \"../../pages/gift/Gifts.css\";\r\nimport {Button,Form, Modal, Col} from 'react-bootstrap';\r\nimport {eventsService} from '../../utils/ServerConnection'\r\nimport {toast} from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\n\r\n/**\r\n * The form component that pops up when you click \"Update Event\" where you can update\r\n * any aspect of the given event if you are the creator.\r\n * @param props\r\n */\r\nfunction EditEvent(props) {\r\n\r\n    //info of the given event\r\n    const eventInfo = props.event;\r\n\r\n    // used for editing modal\r\n    const handleClose = () => props.setOpen(false);\r\n\r\n    const [eventUpdate, setUpdate] = useState({});\r\n\r\n    // Will be changed to a string if there is an error\r\n    //TODO: edit errors because they are not needed in this current state\r\n    // except for name character limit, description character limit and unfinished date\r\n    const [errors, setErrors] = useState({\r\n        nameError: null,\r\n        descriptionError: null,\r\n        privateCheckedError: null\r\n    });\r\n\r\n    /**\r\n     * Method will store and update values entered by user\r\n     * \r\n     */\r\n    const handleChange = (e) => {\r\n        const {name, value} = e.target;\r\n        setUpdate(prevState => ({\r\n            ...prevState,\r\n            [name]: value,\r\n            updatedAt: new Date().toISOString()\r\n        }));\r\n        setErrors(prevState => ({\r\n            ...prevState,\r\n            [name + 'Error']: ''\r\n        }));\r\n    };\r\n\r\n\r\n    /**\r\n     * Method to send a patch request updating the event\r\n     * \r\n     */\r\n    const updateEvent = (e) => {\r\n        e.preventDefault();\r\n        // update event-large info\r\n        eventsService.patch(eventInfo.id,\r\n            {\r\n                name: eventUpdate.name,\r\n                description: eventUpdate.description,\r\n                end_date: eventUpdate.end_date,\r\n            })\r\n            .then(() => {\r\n                console.log(\"Event updated successfully\");\r\n                toast(\"Event updated!\");\r\n\r\n            }).catch(()=>{\r\n                console.log(\"Error updating event\")\r\n                toast.error(\"Failed to update event!\");\r\n            });\r\n\r\n\r\n        // Update the parent event-large component\r\n        props.setEvent(eventUpdate);\r\n\r\n        // Set modal visibility\r\n        props.setOpen(false);\r\n\r\n    }\r\n\r\n    useEffect(() => {\r\n        setUpdate(props.event);\r\n    }, [props.event, props.open])\r\n\r\n\r\n    return (\r\n        <div>\r\n        <Modal className='modal fade bd-example-modal-lg' size='lg' show={props.open} onHide={handleClose}>\r\n            <Modal.Header closeButton>\r\n                <Modal.Title>\r\n                    Update Event\r\n                </Modal.Title>\r\n            </Modal.Header>\r\n            <Modal.Body>\r\n                <div className={'modal-body'}>\r\n                    <Form className={'gift-form'}>\r\n                        <Form.Group className={'form-group'}>\r\n                            <Form.Label>Name</Form.Label>\r\n                            <Form.Control className={errors.nameError ? 'is-invalid' : ''}\r\n                                          as=\"textarea\" rows={1}\r\n                                          placeholder={eventInfo.name}\r\n                                          value={eventUpdate.name}\r\n                                          onChange={handleChange}\r\n                                          name={'name'}/>\r\n                            <div className={errors.nameError ? 'form-error-message' : 'hidden'}>{errors.nameError}</div>\r\n                        </Form.Group>\r\n\r\n                        <Form.Group className={'form-group'}>\r\n                            <Form.Label>Description</Form.Label>\r\n                            <Form.Control className={errors.descriptionError ? 'is-invalid' : ''}\r\n                                          as=\"textarea\" rows={3}\r\n                                          placeholder={eventInfo.description}\r\n                                          value={eventUpdate.description}\r\n                                          name={'description'}\r\n                                          onChange={handleChange}>\r\n                            </Form.Control>\r\n                            <div className={errors.descriptionError ? 'form-error-message' : 'hidden'}>{errors.descriptionError}</div>\r\n\r\n                        </Form.Group>\r\n\r\n                        <Form.Row>\r\n                            <Form.Group as={Col} className={'form-group'}>\r\n                                <Form.Label>Date</Form.Label>\r\n                                <Form.Control \r\n                                              placeholder={eventInfo.end_date}\r\n                                              value={eventUpdate.end_date}\r\n                                              name={'end_date'}\r\n                                              type={'date'}\r\n                                              onChange={handleChange}>\r\n                                </Form.Control>\r\n                            </Form.Group>\r\n                        </Form.Row>\r\n                    </Form>\r\n                </div>\r\n            </Modal.Body>\r\n            <Modal.Footer>\r\n                <Button id={\"closeButton\"} className='btn-danger' onClick={handleClose}>\r\n                    Cancel\r\n                </Button>\r\n                <Button id={\"submitButton\"} onClick={updateEvent}>\r\n                    Update\r\n                </Button>\r\n            </Modal.Footer>\r\n        </Modal>\r\n        </div>\r\n    )\r\n\r\n}\r\n\r\nexport default EditEvent;","import React, {useEffect, useRef, useState} from 'react';\r\nimport {Link, useParams, useHistory} from 'react-router-dom';\r\nimport \"../../pages/gift/Gifts.css\";\r\nimport \"../../pages/home/Home.css\";\r\nimport \"../../pages/account/components/AccountComp.js\";\r\nimport {Card, Modal, Button, Container, Popover, Overlay} from 'react-bootstrap';\r\nimport {useUser} from \"../../utils/UserContext\";\r\nimport {eventsService, giftsService} from \"../../utils/ServerConnection\";\r\nimport {usersService} from \"../../utils/ServerConnection\";\r\nimport GiftSM from \"../gift-related/GiftSM\";\r\nimport {toast} from \"react-toastify\";\r\nimport {FontAwesomeIcon} from \"@fortawesome/react-fontawesome\";\r\nimport {faTrash} from \"@fortawesome/free-solid-svg-icons\";\r\nimport EditEvent from \"./EditEvent\";\r\n\r\n/**\r\n * @param props {Object} {id, deadline(needs to be implemented), funds (needs to be implemented), receiverId,\r\n * receiverName, name, thumbnail, price, description, progress, userId}\r\n * @returns {*}\r\n * @constructor\r\n */\r\nfunction EventSM(props) {\r\n    const {user} = useUser();\r\n    const overlayTarget = useRef(null);\r\n    const history = useHistory();\r\n\r\n    // Used to show 'View Gifts' modal\r\n    const [showViewGifts, setShowViewGifts] = useState(false);\r\n\r\n\r\n    const [showOverlay, setShowOverlay] = useState(false);\r\n    const [showEditModal, setShowEditModal] = useState(false);\r\n    const [eventInfo, setEventInfo] = useState(props.event);\r\n\r\n    const userData = useParams();\r\n\r\n    //All the states being used in this component\r\n    const [state, setState] = useState({\r\n        name: '',\r\n        dob: '',\r\n        pic: '',\r\n        bio: '',\r\n        friend: false,\r\n        requested: false,\r\n        priv: false\r\n    });\r\n    const [giftState, setGiftState] = useState([]);\r\n\r\n    const handleClose = () => {\r\n        setShowViewGifts(false);\r\n    }\r\n\r\n    const handleShow = () => {\r\n        setShowViewGifts(true);\r\n    }\r\n\r\n    const toggleOverlay = () => {\r\n        setShowOverlay(!showOverlay);\r\n    }\r\n\r\n    /*\r\n    Rendering in gifts\r\n     */\r\n    function giftRender() {\r\n        if (giftState.length === 0) {\r\n            return (<Card.Body className={\"giftDiv cardBody\"} style={{color: 'grey'}}>\r\n                There are no gifts to show!\r\n            </Card.Body>)\r\n        } else {\r\n            return (<Card.Body id={\"giftDiv cardBody d-flex flex-column w-100 align-items-center\"}>\r\n                    {giftState.map(function (gift) {\r\n                        return <Container className={'d-flex flex-row mb-3 border'} key={gift.id}>\r\n                            <GiftSM gift={gift} key={gift.id} email={state.email}/>\r\n                        </Container>\r\n                    })}\r\n                </Card.Body>\r\n            )\r\n        }\r\n    }\r\n\r\n    const removeEventAlert = () => toast(\"This event-large has been removed from your event-related.\");\r\n\r\n    const sleep = (milliseconds) => {\r\n        return new Promise(resolve => setTimeout(resolve, milliseconds))\r\n    }\r\n\r\n    /**\r\n     * Method removes the event from the database\r\n     */\r\n    const handleEventDelete = () => {\r\n        eventsService.remove(props.event.id);\r\n        removeEventAlert();\r\n        console.log(\"event has been removed\");\r\n        sleep(1000).then(() => {\r\n            history.push(`/account/${user.id}`);\r\n        })\r\n        toggleOverlay();\r\n    }\r\n\r\n    /**\r\n     * Re-renders eventSM whenever props.event.id, state.priv, or userData.id is updated\r\n     */\r\n    useEffect(() => {\r\n        const grabGifts = async () => {\r\n            try {\r\n                const gifts = await giftsService.find({query: {eventId: {$eq: props.event.id}}});\r\n                setGiftState(gifts.data);\r\n            } catch (err) {\r\n                console.error(err);\r\n            }\r\n        };\r\n\r\n        const grabProfileInfo = async () => {\r\n            try {\r\n\r\n                await usersService.get(userData.id).then((resp) => {\r\n                    setState(prevState => (\r\n                        {\r\n                            ...prevState,\r\n                            name: resp.name,\r\n                            bio: resp.bio,\r\n                            dob: resp.bio,\r\n                            pic: resp.pic\r\n                        }))\r\n                })\r\n            } catch (err) {\r\n                console.error(err);\r\n            }\r\n        };\r\n        //Grab profile info\r\n        grabProfileInfo().then(function () {\r\n                if (!state.priv) {\r\n                    grabGifts().catch(err => console.log(err));\r\n                }\r\n            }\r\n        );\r\n    }, [props.event.id, state.priv, userData.id]);\r\n\r\n    \r\n    return (\r\n        <div className={'event-large-container'}>\r\n            <Card>\r\n                <Card.Header className={'cardHeader'}>\r\n                    <div className='d-flex flex-row justify-content-center w-100'>\r\n                        <Link className={'black-link d-flex flex-grow-1 justify-content-center'}\r\n                              to={`/event/${props.event.id}`} data-testid='eventSM-Header'>{props.event.name}</Link>\r\n                        {\r\n                            parseInt(userData.id) === user.id &&\r\n                            <div ref={overlayTarget}>\r\n                                <FontAwesomeIcon className={'delete-gift'} icon={faTrash} onClick={toggleOverlay}/>\r\n                            </div>\r\n                        }\r\n                        <Overlay target={overlayTarget} show={showOverlay} placement={'left'} rootClose={true}\r\n                                 onHide={toggleOverlay} transition={false}>\r\n                            {({show: _show, ...props}) => (\r\n                                <Popover {...props} id={`popover-positioned-left`}>\r\n                                    <Popover.Title as=\"h3\">Delete Event?</Popover.Title>\r\n                                    <Popover.Content>\r\n                                        <Button className=\"mr-3 btn btn-danger\" onClick={toggleOverlay}>No</Button>\r\n                                        <Button className=\"btn btn-secondary\" onClick={handleEventDelete}>\r\n                                            <Link style={{color: 'inherit', textDecoration: 'none'}}\r\n                                                  to={'/account/'.concat(user.id)}>Yes</Link>\r\n                                        </Button>\r\n                                    </Popover.Content>\r\n                                </Popover>)}\r\n                        </Overlay>\r\n                    </div>\r\n                </Card.Header>\r\n                <Card.Body className={'event-large-card-body'}>\r\n                    <Card.Text className={'eventSM-privacy'}>\r\n                        <span> {props.event.privacy ? \"Private\" : \"Not Private\"}</span>\r\n                    </Card.Text>\r\n                    <Card.Text className={'eventSM-date'}>\r\n                        <span>Date: {props.event.end_date}</span>\r\n                    </Card.Text>\r\n                </Card.Body>\r\n                <Card.Footer>\r\n                    <Button onClick={handleShow} id={\"CardFooterButton\"} block>\r\n                        View Gifts\r\n                    </Button>\r\n                </Card.Footer>\r\n            </Card>\r\n            <Modal show={showViewGifts} onHide={handleClose}>\r\n                <Modal.Header closeButton>\r\n                    <Modal.Title><Link className={'black-link'}\r\n                                       to={`/event/${props.event.id}`}>{props.event.name}</Link></Modal.Title>\r\n                </Modal.Header>\r\n                <Modal.Body>\r\n                    <div className={'modal-body'}>\r\n                        <div className='w-100'>\r\n                            {giftRender()}\r\n                        </div>\r\n                    </div>\r\n                </Modal.Body>\r\n            </Modal>\r\n            <EditEvent event={eventInfo} open={showEditModal} setOpen={setShowEditModal} setEvent={setEventInfo}/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default EventSM;","export default __webpack_public_path__ + \"static/media/upload.fc656fa5.png\";","import React, {useEffect, useState} from 'react';\r\nimport {useUser} from \"../../utils/UserContext\";\r\nimport {Button} from \"react-bootstrap\";\r\nimport {notifyService, userRelationshipsService} from \"../../utils/ServerConnection\";\r\n\r\n/**\r\n * Component for displaying a friends button that updates according to user status with assigned user.\r\n * Takes: otherUser, status\r\n * @returns {JSX.Element}\r\n * @constructor\r\n */\r\nfunction FriendButton(props) {\r\n    let {otherUser} = props\r\n\r\n    const {user} = useUser();\r\n\r\n    const [statusState, setStatusState] = useState({\r\n        friend: false,\r\n        outgoing_requested: false,\r\n        incoming_requested: false\r\n    });\r\n\r\n    useEffect(() => {\r\n        if (props.outgoing && props.incoming) {\r\n            // for the search page\r\n            if (props.incoming[otherUser.id]) {\r\n                let friendType = props.incoming[otherUser.id]\r\n                setStatusState({\r\n                    'incoming_requested': friendType === 'friend-request',\r\n                    'friend': friendType === 'friends'\r\n                });\r\n            } else if (props.outgoing[otherUser.id]) {\r\n                let friendType = props.outgoing[otherUser.id]\r\n                setStatusState({\r\n                    'outgoing_requested': friendType === 'friend-request',\r\n                    'friend': friendType === 'friends'\r\n                });\r\n            }\r\n        } else if(window.location.href.includes(\"account\")) {\r\n            // for profile page\r\n            userRelationshipsService.find({\r\n                query: {\r\n                    //sender ID\r\n                    $or: [\r\n                        {userId: user.id, otherUserId: parseInt(otherUser.id)},\r\n                        {userId: parseInt(otherUser.id), otherUserId: user.id}\r\n                    ]\r\n                }\r\n            }).then((relationship) => {\r\n                //checks if there is no relationship, one way relationship (1 friend request sent)\r\n                // or two way relationship (friends)\r\n                console.log(relationship)\r\n                if (relationship.data.length >= 0 && relationship.data.length <= 2) {\r\n                    if (relationship.data[0].otherUserId === user.id) {\r\n                        setStatusState({\r\n                            'incoming_requested': relationship.data[0].type === 'friend-request',\r\n                            'friend': relationship.data[0].type === 'friends'\r\n                        });\r\n                    } else if (relationship.data[0].userId === user.id) {\r\n                        setStatusState({\r\n                            'outgoing_requested': relationship.data[0].type === 'friend-request',\r\n                            'friend': relationship.data[0].type === 'friends'\r\n                        });\r\n                    }\r\n                }\r\n                console.log(\"FriendButton UseEffect ran\")\r\n            }).catch((e) => {\r\n                console.log(\"error finding relationship\", e)\r\n            })\r\n        }\r\n    }, [otherUser, props, user.id])\r\n\r\n    /**\r\n     * For rendering friends button depending on if they're your friend or not\r\n     * @returns {JSX.Element}\r\n     */\r\n    function friendsButton() {\r\n        if (statusState.outgoing_requested) {\r\n            return <Button style={{background: 'grey', border: 'grey'}} disabled={true}>Friend Request Sent</Button>\r\n        } else if (statusState.incoming_requested) {\r\n            //TODO: add a deny button?\r\n            return <Button onClick={addFriend}>Add Back</Button>\r\n        } else if (!statusState.friend && otherUser.id !== user.id) {\r\n            return <Button onClick={handleFriendRequest}>Add Friend</Button>\r\n        } else {\r\n            return <Button onClick={removeFriend}>Friends :D</Button>\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Method for sending a friend request when button is pressed\r\n     * @returns {Promise<void>}\r\n     */\r\n    const handleFriendRequest = () => {\r\n        let payload = {\r\n            relationship: {\r\n                userId: user.id,\r\n                otherUserId: otherUser.id,\r\n                type: 'friend-request'\r\n            },\r\n            notification: {\r\n                sender: user.id,\r\n                receiver: otherUser.id,\r\n                type: 'friend-request'\r\n            }\r\n        };\r\n        userRelationshipsService.create(payload.relationship)\r\n            .then(() => {\r\n                setStatusState(prevState => ({...prevState, 'outgoing_requested': true}))\r\n                notifyService.create(payload.notification)\r\n                    .then(() => {\r\n                        console.log(\"Friend-request processed in FriendButton component\")\r\n                    })\r\n                    .catch((err) => {\r\n                        console.log(\"Issue sending notification\", err);\r\n                    });\r\n            }).catch((err) => {\r\n            console.log(\"Issue creating friend-request\", err)\r\n        });\r\n    };\r\n\r\n    /**\r\n     * Method for handling accepting a friend request\r\n     *\r\n     * @param itemNum the index of the notification in the notification state\r\n     * @param item the notification from the notification state in header\r\n     */\r\n    const addFriend = async () => {\r\n        try {\r\n            await userRelationshipsService.patch(null, {type: 'friends'}, {\r\n                query: {\r\n                    userId: otherUser.id,\r\n                    //receiver Id\r\n                    otherUserId: user.id,\r\n                    type: 'friend-request'\r\n                }\r\n            })\r\n            await userRelationshipsService.create({\r\n                userId: user.id,\r\n                otherUserId: otherUser.id,\r\n                type: 'friends'\r\n            })\r\n            await notifyService.create({\r\n                sender: user.id,\r\n                receiver: otherUser.id,\r\n                type: 'accepted-friend-request'\r\n            }).then(() => {\r\n                console.log(\"successfully created MEEEEEEEEEEEE\");\r\n                setStatusState({'outgoing_requested': false, 'incoming_requested': false, 'friend': true})\r\n            })\r\n            await notifyService.remove(null, {\r\n                query: {\r\n                    sender: otherUser.id,\r\n                    receiver: user.id,\r\n                    type: 'friend-request'\r\n                }\r\n            })\r\n\r\n            window.location.reload(false)\r\n        } catch (err) {\r\n            console.log('Issue accepting friend request (profile)', err)\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Handles removing friend when pressing the friend request button again (might change to look better)\r\n     */\r\n    function removeFriend() {\r\n        userRelationshipsService.remove(null, {\r\n            query: {\r\n                $or: [\r\n                    {userId: user.id, otherUserId: otherUser.id},\r\n                    {userId: otherUser.id, otherUserId: user.id},\r\n                ]\r\n            }\r\n        }).then(() => {\r\n            //TODO: Might need to get rid of notification as well\r\n            setStatusState(prevState => ({...prevState, 'requested': false, friend: false}))\r\n        }).catch((e) => {\r\n            console.log(e)\r\n        })\r\n    }\r\n\r\n\r\n    return (friendsButton())\r\n}\r\n\r\nexport default FriendButton;\r\n","import React, {useEffect, useState} from \"react\";\r\nimport \"../AccountPage.css\"\r\nimport {Card, Col, Container, Row} from 'react-bootstrap';\r\nimport {Typography} from 'antd';\r\nimport \"../../../App.css\";\r\nimport FriendSnippet from \"./friend-snippet/FriendSnippet\";\r\nimport GiftPro from \"./gift-profile/GiftPro\";\r\nimport {withRouter} from \"react-router\";\r\nimport {useUser} from \"../../../utils/UserContext\";\r\nimport {Link, useParams} from 'react-router-dom';\r\nimport {\r\n    giftsService,\r\n    usersService,\r\n    userRelationshipsService,\r\n    eventsService,\r\n    activityService,\r\n} from '../../../utils/ServerConnection'\r\nimport EventSM from \"../../../reusable_components/event-related/EventSM\";\r\nimport upload from '../../../assets/upload.png';\r\nimport FriendButton from \"../../../reusable_components/buttons/FriendButton\";\r\nimport CarouselComp from \"../../../reusable_components/misc/CarouselComp\";\r\n\r\n/**\r\n * AccountComp is a React Component. It's main purpose is to render up a user's profile page when requested.\r\n * @returns {JSX.Element}\r\n */\r\nfunction AccountComp() {\r\n\r\n    //This is the logged in user\r\n    const {user} = useUser();\r\n\r\n    //This is the ID of the user account to be retrieved (can be the logged in user or another user depending on\r\n    // what is requested)\r\n    const userData = useParams();\r\n\r\n    //All the states being used in this component\r\n    const [state, setState] = useState({\r\n        name: '',\r\n        profile_pic: '',\r\n        bio: '',\r\n        friends: false,\r\n        private: false\r\n    });\r\n\r\n    //Needs to be updated from server\r\n    const [activityState, setActivityState] = useState([]);\r\n\r\n    // Contains all gifts for a profile\r\n    const [giftState, setGiftState] = useState([]);\r\n\r\n    // Contains all events for a profile that have not expired\r\n    const [eventState, setEventState] = useState([]);\r\n\r\n    // Contains all friends for a profile\r\n    const [friendState, setFriendState] = useState([]);\r\n\r\n    // contains the state of the number of characters used in the bio\r\n    const [characterCountState, setCharacterCountState] = useState();\r\n\r\n    /**\r\n     * this method renders an activity card in the Activity pane\r\n     * @param props\r\n     * @returns {JSX.Element}\r\n     */\r\n    function ActivityCard(props) {\r\n        const [activityUserData, setActivityUserData] = useState({\r\n            id: user.id\r\n        });\r\n\r\n        const [activityOtherUserData, setActivityOtherUserData] = useState({\r\n            id: user.id,\r\n            name: '',\r\n            profile_pic: ''\r\n        });\r\n\r\n        const [activityGiftData, setActivityGiftData] = useState({\r\n            id: 0,\r\n            name: ''\r\n        });\r\n\r\n        //this use effect sets the states given the props to render the activity card on page load\r\n        //TODO: write more descriptive errors\r\n        useEffect(() => {\r\n            usersService.get(props.activity.userId).then((data) => {\r\n                setActivityUserData(data);\r\n            }).catch((error) => {\r\n                console.log(error)\r\n            })\r\n            usersService.get(props.activity.otherUserId).then((data) => {\r\n                setActivityOtherUserData(data);\r\n            }).catch((error) => {\r\n                console.log(error)\r\n            })\r\n            giftsService.get(props.activity.giftId).then((data) => {\r\n                setActivityGiftData(data);\r\n            }).catch((error) => {\r\n                console.log(error)\r\n            })\r\n        }, [props.activity])\r\n\r\n        return (\r\n            <div>\r\n            <div className={'row'}>\r\n            <div className={'col-3'}>\r\n                <FriendSnippet data={activityUserData}/>\r\n            </div>\r\n            <div className={'col'}>\r\n                <p>\r\n                    contributed ${props.activity.contributionAmount} to {activityOtherUserData.name}'s <Link className={'friends-name-link'} to={'/gifts/' + activityGiftData.id}>{activityGiftData.name}!</Link>\r\n                </p>\r\n            </div>\r\n        </div>\r\n        <div className={'row'}>\r\n            <div className={'col'}/>\r\n            <div className={'col'}>\r\n                <p className={'timestamp'}>{props.activity.createdAt.split(\"T\")[0]}</p>\r\n            </div>\r\n        </div>\r\n    </div>)\r\n    }\r\n\r\n    // When the component is rendered, this will grab the gift, friends and activity as long as it is not a private account\r\n    useEffect(() => {\r\n        /**\r\n         * This method will grab the profile information of a requested account and set the state\r\n         * @returns {Promise<void>} resolves with state being set or an error printed to console.\r\n         */\r\n        const grabProfileInfo = async () => {\r\n            try {\r\n                const userProfile = await usersService.get(userData.id);\r\n                setState(userProfile)\r\n            } catch (err) {\r\n                //TODO: make error more descriptive\r\n                console.error(err);\r\n            }\r\n\r\n        };\r\n\r\n        // Grabs the activity of an account\r\n        const grabActivity = () => {\r\n            activityService.find({\r\n                query: {\r\n                    otherUserId: parseInt(userData.id)\r\n                }\r\n            }).then(({data}) => {\r\n                setActivityState(data);\r\n            }).catch((err) => {\r\n                //TODO: make error more descriptive\r\n                console.log(err);\r\n            });\r\n        };\r\n\r\n        /**\r\n         * Queries database for gifts and places them into the gift state\r\n         */\r\n        const grabGifts = () => {\r\n            giftsService.find({\r\n                query:\r\n                    {userId: userData.id}\r\n            })\r\n                .then((gifts) => {\r\n                    setGiftState(gifts.data);\r\n                })\r\n                .catch((error) => {\r\n                    //TODO: make error more descriptive\r\n                    console.log(error)\r\n                });\r\n        };\r\n\r\n        /**\r\n         * updates bio after getting profile information\r\n         */\r\n        const grabBio = () => {\r\n            // set character count on page load\r\n            if (state.bio) {\r\n                setCharacterCount(state.bio);\r\n            }\r\n        };\r\n\r\n        /**\r\n         * grabs all unexpired events attributed to the given user\r\n         */\r\n        const grabEvents = () => {\r\n            eventsService.find({\r\n                query: {\r\n                    userId: userData.id,\r\n                    end_date: {$gt: new Date()},\r\n                    $sort: {end_date: 1}\r\n                }\r\n            })\r\n                .then((events) => {\r\n                    setEventState(events.data);\r\n                })\r\n                .catch((err) => {\r\n                    //TODO: make error more descriptive\r\n                    console.log(err);\r\n                });\r\n        };\r\n\r\n        /**\r\n         * Searches database for all friends of the user who owns the profile and puts them into the friend state\r\n         */\r\n        const grabFriends = async () => {\r\n            try {\r\n                //TODO check to make sure the current user isn't blocked by the other user (blocking is not yet implemented future PBI)\r\n                const friends = await userRelationshipsService.find({\r\n                    query: {userId: userData.id, type: 'friends'},\r\n                });\r\n                let friendData = [];\r\n                // This loop gets the other users id for all results\r\n                for (let key in friends.data) {\r\n                    const otherUserId = friends.data[key].otherUserId;\r\n                    if (otherUserId === user.id) {\r\n                        setState((prevState) => ({...prevState, friends: true}))\r\n                    }\r\n                    const friend = await usersService.get(otherUserId)\r\n                    friendData.push(friend);\r\n                }\r\n                setFriendState(friendData);\r\n            } catch (err) {\r\n                //TODO: make error more descriptive\r\n                console.error(err);\r\n            }\r\n        };\r\n\r\n        //Grab profile info each time the use effect runs\r\n        grabProfileInfo().then(function () {\r\n                //TODO: check if user is friends with private person using map\r\n                if (!state.private) {\r\n                    grabGifts();\r\n                    grabEvents();\r\n                    grabFriends().catch(err => console.log(err));\r\n                    grabActivity();\r\n                    grabBio();\r\n                }\r\n            }\r\n        );\r\n\r\n    }, [state.private, userData.id, user, state.bio]);\r\n\r\n    /**\r\n    This method maps out the activity pane depending on what was returned from the server\r\n    Simply, depending on if the activity was adding a friend, contributing etc. the text will differ\r\n    */\r\n    function activityRender() {\r\n        // TODO this has not yet been implemented on new server database\r\n        if (activityState.length === 0) {\r\n            return (\r\n                <Card.Body className={\"cardBody\"} style={{color: 'grey'}}>\r\n                    There is no activity to show!\r\n                </Card.Body>\r\n            )\r\n        } else {\r\n            return (\r\n                <Card.Body className={\"cardBody\"}>\r\n                    {activityState.map(function (item) {\r\n                        //functionality to write \"user1 contributed x amount to event-large\" on the frontend\r\n                        return <ActivityCard activity={item} key={item.id}/>\r\n                    })}\r\n                </Card.Body>\r\n            )\r\n        }\r\n    }\r\n\r\n\r\n    /**\r\n    * Rendering in event-related components\r\n    */\r\n    function eventRender() {\r\n        if (eventState.length === 0) {\r\n            return (<Card.Body className={\"eventDiv cardBody\"} style={{color: 'grey'}}>\r\n                There are no events to show!\r\n            </Card.Body>)\r\n        } else {\r\n            return (\r\n                <Card.Body id={\"eventDiv cardBody\"}>\r\n                    <CarouselComp map={eventState.map(function (event) {\r\n                            return <Container className={'mb-4'} key={event.id}>\r\n                                <EventSM event={event}/>\r\n                            </Container>\r\n                        })} id=\"event\"/>\r\n                </Card.Body>\r\n            )\r\n        }\r\n    }\r\n\r\n    /**\r\n    Rendering in gifts\r\n    */\r\n    function giftRender() {\r\n        if (giftState.length === 0) {\r\n            return (<Card.Body className={\"giftDiv cardBody\"} style={{color: 'grey'}}>\r\n                There are no gifts to show!\r\n            </Card.Body>)\r\n        } else {\r\n            return (<Card.Body id={\"giftDiv cardBody\"}>\r\n                    {giftState.map(function (gift) {\r\n                        return (\r\n                            <Container className={'mb-3 border'} key={gift.id}>\r\n                                <GiftPro gift={gift} email={state.email}/>\r\n                            </Container>\r\n                        )\r\n                    })}\r\n                </Card.Body>\r\n            )\r\n        }\r\n    }\r\n\r\n    /**\r\n    Rendering in friends list\r\n    */\r\n    function friendRender() {\r\n        if (friendState.length === 0) {\r\n            return (<Card.Body className={\"cardBody\"} style={{color: 'grey'}}>\r\n                Be their first friend!! Press the Add Friend button above!\r\n            </Card.Body>);\r\n        } else {\r\n            return (<Card.Body id=\"FriendDisDiv\" className={\"cardBody\"}>\r\n                <Container id={'friends'}>\r\n                    {friendState.map(function (item, i) {\r\n                        return <FriendSnippet class={'snippet'} data={item} key={i}/>\r\n                    })\r\n                    }\r\n                </Container>\r\n            </Card.Body>);\r\n        }\r\n    }\r\n\r\n    console.log(friendState)\r\n\r\n    /**\r\n    Depending on if an account is private or not, we will render in different things.\r\n    */\r\n    function privRender() {\r\n        //TODO create a private account and test if the old code here works / see how it looks\r\n        if (!state.friends && user.id !== parseInt(userData.id) && state.private) {\r\n            return (\r\n                <Row>\r\n                    <Col className={'d-flex justify-content-center'}>\r\n                        <Card style={{width: '100%'}}>\r\n                            <Card.Header className={'cardHeader d-flex justify-content-center'}>\r\n                                This account is private!\r\n                            </Card.Header>\r\n                        </Card>\r\n                    </Col>\r\n                </Row>)\r\n        } else {\r\n            return (<Row className={\"mt-3\"}>\r\n                    <Col md={4}>\r\n                        <Card className={\"card activityCard\"}>\r\n                            <Card.Header className={\"cardHeader\"}>\r\n                                Activity\r\n                            </Card.Header>\r\n                            {activityRender()}\r\n                        </Card>\r\n                    </Col>\r\n                    <Col md={8}>\r\n                        <Card className={\"card\"}>\r\n                            <Card.Header className={\"cardHeader\"}>Friends List</Card.Header>\r\n                            {friendRender()}\r\n                        </Card>\r\n                        <Card className={\"mt-3 card\"}>\r\n                            <Card.Header className={\"cardHeader\"}>\r\n                                Upcoming Events\r\n                            </Card.Header>\r\n                            {eventRender()}\r\n                            {parseInt(userData.id) === user.id &&\r\n                            <Card.Footer className={\"cardHeader\"}>\r\n                                <Link className={'black-link d-flex flex-grow-1 justify-content-center'}\r\n                                      to={`/events`}>View All Events</Link>\r\n                            </Card.Footer>\r\n                            }\r\n                        </Card>\r\n                        <Card className={\"mt-3 card\"}>\r\n                            <Card.Header className={\"cardHeader\"}>\r\n                                Wish List\r\n                            </Card.Header>\r\n                            {giftRender()}\r\n                        </Card>\r\n                    </Col>\r\n                </Row>\r\n            )\r\n        }\r\n    }\r\n\r\n    // changes user's profile picture\r\n    let onImageChange = (event) => {\r\n        if (event.target.files.length === 1) {\r\n            let reader = new FileReader();\r\n            reader.onload = async (e) => {\r\n                setState(prevState => ({\r\n                    ...prevState,\r\n                    pic: e.target.result\r\n                }));\r\n                await usersService.patch(userData.id, {profile_pic: e.target.result})\r\n                    .then(() => {\r\n                        //TODO: Tell the user their picture was changed\r\n                        setState(prevState => ({...prevState, pic: e.target.result}))\r\n                    }).catch((e) => {\r\n                        console.log(e);\r\n                        console.log(\"Error changing pic\")\r\n                    });\r\n            };\r\n            reader.readAsDataURL(event.target.files[0]);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * keeps track of the character counter and saves it to the database\r\n     */\r\n     function handleBio(e) {\r\n        setCharacterCountState(e.length);\r\n        setState(prevState => ({\r\n            ...prevState,\r\n            bio: e\r\n        }));\r\n        usersService.patch(userData.id, {bio: e})\r\n            .then(() => {\r\n                //TODO: put a toast here for bio change\r\n            }).catch(()=>{\r\n                console.log(\"Error changing bio\")\r\n            });\r\n    }\r\n\r\n    function setCharacterCount(e) {\r\n        setCharacterCountState(e.length);\r\n    }\r\n\r\n    // function that opens up a file selector when profile picture is clicked\r\n    const handleFile = () => {\r\n        let input = document.createElement('input');\r\n        input.type = 'file';\r\n        input.className = \"filetype fileSelector\";\r\n        input.accept = \"image/png, image/jpeg\"\r\n        input.onchange = onImageChange;\r\n        input.click();\r\n    }\r\n\r\n    // Return the entire account page\r\n    return (\r\n        <div id={'accountBody'}>\r\n            <Container>\r\n                <Row className={\"pt-3 d-flex justify-content-center\"}>\r\n                    <Col md={4} className={'d-flex justify-content-end'}>\r\n                        <div className='profileArea'>\r\n                            <img\r\n                                src={state.profile_pic}\r\n                                id={'profilePicture'}\r\n                                alt={\"profile\"}\r\n                            />\r\n                            {parseInt(userData.id) === user.id &&\r\n                            <img\r\n                                src={upload}\r\n                                className=\"overlay overlayFade\"\r\n                                id={'profilePicture'}\r\n                                onMouseOver={e => (e.currentTarget.src = upload)}\r\n                                onClick={handleFile}\r\n                                alt={\"\"}\r\n                            />\r\n                            }\r\n                        </div>\r\n                    </Col>\r\n                    <Col md={8} className={'pt-5'} id={\"bio\"}>\r\n\r\n                        <h2>{state.name}</h2>\r\n                        <Card className={\"card\"} >\r\n                            <Card.Header className={\"cardHeader\"}>Bio</Card.Header>\r\n                            <Card.Body>\r\n                                {parseInt(userData.id) === user.id ?\r\n                                    // using the Typography import to provide a button that makes the bio information editable\r\n                                    <Typography.Text\r\n                                        editable={{\r\n                                            onChange: (e) => {\r\n                                                handleBio(e);\r\n                                            },\r\n                                            maxLength: 200\r\n                                        }}>\r\n                                        {state.bio}\r\n                                    </Typography.Text>\r\n                                    :\r\n                                    <Typography.Text>\r\n                                        {state.bio}\r\n                                    </Typography.Text>\r\n                                }\r\n                            </Card.Body>\r\n                            {/*footer where the character count and character limit are shown*/}\r\n                            <Card.Footer>\r\n                                <p className={\"d-flex justify-content-end m-0\"}>{characterCountState} / 200</p>\r\n                            </Card.Footer>\r\n                        </Card>\r\n                        <br/>\r\n                        {parseInt(userData.id) !== user.id && <FriendButton otherUser={userData}/>}\r\n                    </Col>\r\n                </Row>\r\n                {privRender()}\r\n            </Container>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nexport default withRouter(AccountComp);","import React from \"react\";\r\nimport \"./AccountPage.css\"\r\nimport \"../../App.css\";\r\nimport AccountComp from \"./components/AccountComp\";\r\nimport {withRouter} from \"react-router\";\r\n\r\n/**\r\n * This is the container page that returns the account profile component\r\n * @returns {JSX.Element}\r\n */\r\nfunction Account() {\r\n\r\n    //TODO: move accountcomp to account\r\n    return (<AccountComp/>)\r\n}\r\n\r\nexport default withRouter(Account);\r\n","import React, { useEffect, useState } from 'react';\r\nimport '../Gifts.css';\r\nimport {Image} from \"react-bootstrap\";\r\n\r\n\r\n/**\r\n * This was done by 2020 group GOOD LUCK!\r\n */\r\nfunction Comment(props){\r\n\r\n    // Used to show how long ago a comment was posted\r\n    const[timeAgo, setTimeAgo] = useState('');\r\n\r\n    // On component mount or whenever props.data.date updates\r\n    useEffect(() => {\r\n        setTimeAgo(convertToTimeSince(new Date(props.data.date)));\r\n    }, [props.data.date]);\r\n\r\n    /**\r\n     * Converts date in YYYY-MM-DD:hh:mm:ss format to <time units> ago\r\n     * @param date\r\n     * @returns {string}\r\n     */\r\n    const convertToTimeSince = (date) => {\r\n        const seconds = Math.floor((new Date() - date) / 1000);\r\n\r\n        let interval = seconds / 31536000;\r\n\r\n        if (interval > 1) {\r\n            let years = Math.floor(interval);\r\n            if(years === 1) return years + ' year ago';\r\n            return years + ' years ago';\r\n        }\r\n        interval = seconds / 2592000;\r\n        if (interval > 1) {\r\n            let months = Math.floor(interval);\r\n            if(months === 1) return months + ' month ago';\r\n            return months + ' months ago';\r\n        }\r\n        interval = seconds / 86400;\r\n        if (interval > 1) {\r\n            let days = Math.floor(interval);\r\n            if(days === 1) return days + ' day ago';\r\n            return days + ' days ago';\r\n        }\r\n        interval = seconds / 3600;\r\n        if (interval > 1) {\r\n            let hours = Math.floor(interval);\r\n            if(hours === 1) return hours + ' hour ago';\r\n            return hours + ' hours ago';\r\n        }\r\n        interval = seconds / 60;\r\n        if (interval > 1) {\r\n            let minutes = Math.floor(interval);\r\n            if(minutes === 1) return minutes + ' minute ago';\r\n            return minutes + ' minutes ago';\r\n        }\r\n        if (seconds === 1) return Math.floor(seconds) + ' second ago';\r\n        return Math.floor(seconds) + \" seconds ago\";\r\n    };\r\n\r\n\r\n    return (\r\n        <div className={'comment-container'}>\r\n            <div className={'comment-icon-container'}>\r\n                <Image className={'comment-icon'} src={props.data.pic} rounded/>\r\n            </div>\r\n            <div style={{width: '100%'}}>\r\n                <div className={'comment-header'}>\r\n                    <div>\r\n                        <span><a  href={'/account/' + props.data.email} className={'comment-user black-link'}>{props.data.name}</a></span>\r\n                    </div>\r\n                    <div className={'comment-date'}>\r\n                        <span>{timeAgo}</span>\r\n                    </div>\r\n                </div>\r\n                <p className={'comment'}>{props.data.comment}</p>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Comment;","import React, {useEffect, useState} from 'react';\r\nimport \"../../pages/gift/Gifts.css\";\r\nimport {Button,Form, FormControl, InputGroup, Modal, Col} from 'react-bootstrap';\r\nimport {giftsService} from '../../utils/ServerConnection'\r\nimport {toast} from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\n\r\n\r\n/**\r\n * Modal that is displayed whenever a gift is selected to be edited.\r\n *\r\n * @param {*} props Gift Information\r\n * \r\n */\r\nfunction EditGift(props) {\r\n\r\n    //info of given gift\r\n    const giftInfo = props.gift;\r\n\r\n    // used for editing modal\r\n    const handleClose = () => props.setOpen(false);\r\n\r\n    const [giftUpdate, setUpdate] = useState({});\r\n\r\n\r\n    // Will be changed to a string if there is an error\r\n    const [errors, setErrors] = useState({\r\n        nameError: null,\r\n        descriptionError: null,\r\n        priceError: null,\r\n        linkError: null,\r\n        thumbnailError: null,\r\n    });\r\n\r\n    /**\r\n     * Handles any new information filled in the modal\r\n     * \r\n    */\r\n    const handleChange = (e) => {\r\n        const {name, value} = e.target;\r\n        setUpdate(prevState => ({\r\n            ...prevState,\r\n            [name]: value,\r\n            updatedAt: new Date().toISOString()\r\n        }));\r\n\r\n        setErrors(prevState => ({\r\n            ...prevState,\r\n            [name + 'Error']: ''\r\n        }));\r\n    };\r\n\r\n    /**\r\n     * Handles changing the price of a gift\r\n     * \r\n     */\r\n    const handlePriceChange = (e) => {\r\n        setUpdate(prevState => ({...prevState, price: Math.round(e.target.value)}));\r\n        setErrors(prevState => ({...prevState, priceError: ''}));\r\n    };\r\n\r\n\r\n    /**\r\n     * Method sends a patch request to update any values entered by user\r\n     * \r\n     */\r\n    const updateGift = (e) => {\r\n        e.preventDefault();\r\n        giftsService.patch(giftInfo.id,\r\n            {\r\n                name: giftUpdate.name,\r\n                description: giftUpdate.description,\r\n                price: giftUpdate.price,\r\n                deadline: giftUpdate.deadline\r\n            })\r\n        .then(() => {\r\n            console.log(\"Gift updated successfully\");\r\n            toast(\"Gift updated!\");\r\n        }).catch(()=>{\r\n            console.log(\"Error updating gift\")\r\n            toast.error(\"Failed to update gift!\");\r\n        });\r\n\r\n        // Update the parent gift component\r\n        props.setGift(giftUpdate);\r\n\r\n        // Set modal visibility\r\n        props.setOpen(false);\r\n\r\n    }\r\n\r\n    // Make sure the most recent gift info is pulled in when the modal is opened\r\n    useEffect(() => {\r\n        setUpdate(props.gift);\r\n    }, [props.open, props.gift])\r\n\r\n\r\n\r\n    return (\r\n        <div>\r\n        <Modal className='modal fade bd-example-modal-lg' size='lg' show={props.open} onHide={handleClose}>\r\n                <Modal.Header closeButton>\r\n                    <Modal.Title>\r\n                        Update Gift\r\n                    </Modal.Title>\r\n                </Modal.Header>\r\n                <Modal.Body>\r\n                    <div className={'modal-body'}>\r\n                        <Form className={'gift-form'}>\r\n                            <Form.Group className={'form-group'}>\r\n                                <Form.Label>Name</Form.Label>\r\n                                <Form.Control className={errors.nameError ? 'is-invalid' : ''}\r\n                                                  as=\"textarea\" rows={1}\r\n                                                  placeholder={giftInfo.name}\r\n                                                  value={giftUpdate.name}\r\n                                                  onChange={handleChange}\r\n                                                  name={'name'}/>\r\n                                <div className={errors.nameError ? 'form-error-message' : 'hidden'}>{errors.nameError}</div>\r\n                            </Form.Group>\r\n\r\n                            <Form.Group className={'form-group'}>\r\n                                <Form.Label>Description</Form.Label>\r\n                                <Form.Control className={errors.descriptionError ? 'is-invalid' : ''}\r\n                                                  as=\"textarea\" rows={3}\r\n                                                  placeholder={giftInfo.description}\r\n                                                  value={giftUpdate.description}\r\n                                                  name={'description'}\r\n                                                  onChange={handleChange}/>\r\n                                <div className={errors.descriptionError ? 'form-error-message' : 'hidden'}>{errors.descriptionError}</div>\r\n                            </Form.Group>\r\n\r\n                            <Form.Row>\r\n                                <Form.Group as={Col} className={'form-group'}>\r\n                                    <Form.Label>Price</Form.Label>\r\n                                        <InputGroup className={'price-input'}>\r\n                                            <InputGroup.Text>$</InputGroup.Text>\r\n                                            <FormControl className={errors.priceError ? 'is-invalid' : ''}\r\n                                                         placeholder={giftInfo.price}\r\n                                                         type='number'\r\n                                                         onChange={handlePriceChange}\r\n                                                         name={'price'}/>\r\n                                        </InputGroup>\r\n                                        <div\r\n                                            className={errors.priceError ? 'form-error-message' : 'hidden'}>{errors.priceError}</div>\r\n                                </Form.Group>\r\n\r\n                                <Form.Group as={Col} className={'form-group'}>\r\n                                        <Form.Label>Deadline</Form.Label>\r\n                                        <Form.Control placeholder={giftInfo.deadline}\r\n                                                      value={giftUpdate.deadline}\r\n                                                      name={'deadline'}\r\n                                                      type={'date'}\r\n                                                      onChange={handleChange}/>\r\n                                </Form.Group>\r\n                            </Form.Row>\r\n\r\n                            <Form.Group className={'form-group'}>\r\n                                    <Form.Label>Url</Form.Label>\r\n                                    <Form.Control className={errors.linkError ? 'is-invalid' : ''}\r\n                                                  placeholder=\"Enter the Url for your gift\"\r\n                                                  name={'link'}\r\n                                                  onChange={handleChange}/>\r\n                                    <div\r\n                                        className={errors.linkError ? 'form-error-message' : 'hidden'}>{errors.linkError}</div>\r\n                            </Form.Group>\r\n\r\n                            <Form.Group className={'form-group'}>\r\n                                    <Form.Label>Image</Form.Label>\r\n                                    <Form.Control className={errors.thumbnailError ? 'is-invalid' : ''}\r\n                                                  placeholder=\"Enter the Url to an image of your gift\"\r\n                                                  name={'thumbnail'}\r\n                                                  onChange={handleChange}/>\r\n                                    <div\r\n                                        className={errors.thumbnailError ? 'form-error-message' : 'hidden'}>{errors.thumbnailError}</div>\r\n                            </Form.Group>\r\n                        </Form>\r\n                    </div>\r\n                </Modal.Body>\r\n                <Modal.Footer>\r\n                    <Button id={\"closeButton\"} className='btn-danger' onClick={handleClose}>\r\n                        Cancel\r\n                    </Button>\r\n                    <Button id={\"submitButton\"} onClick={updateGift}>\r\n                        Update\r\n                    </Button>\r\n                </Modal.Footer>\r\n            </Modal>\r\n            </div>\r\n\r\n    )\r\n\r\n}\r\n\r\nexport default EditGift;","import React, {useEffect, useState} from 'react';\r\nimport {Link, useParams} from 'react-router-dom';\r\nimport {useUser} from \"../../utils/UserContext\";\r\nimport {giftsService, usersService} from \"../../utils/ServerConnection\";\r\nimport {Button, Card, Col, Form, Image, ProgressBar, Row} from \"react-bootstrap\";\r\nimport Comment from \"./components/Comment\";\r\nimport EditGift from \"../../reusable_components/gift-related/EditGift\";\r\nimport ContributeButton from '../../reusable_components/buttons/ContributeButton';\r\nimport {faClockRotateLeft} from \"@fortawesome/free-solid-svg-icons\";\r\nimport {FontAwesomeIcon} from \"@fortawesome/react-fontawesome\";\r\n\r\n\r\n/**\r\n * Renders the large gift page\r\n * Comment functionality has been commented out but not removed in hopes that it will be revisited and implemented\r\n * in the future.\r\n */\r\nfunction Gift() {\r\n\r\n    let {id} = useParams();\r\n\r\n    const {user} = useUser();\r\n\r\n    /**\r\n     * States and consts\r\n     */\r\n    const [giftInfo, setGiftInfo] = useState({});\r\n    const [creatorInfo, setCreatorInfo] = useState({});\r\n    // TODO add setGiftComments to this state whenever you guys set up gift comments in the database -previous group\r\n    const [giftComments] = useState([]);\r\n    const [show, setShow] = useState(false);\r\n    const [commentInput, setCommentInput] = useState({\r\n        comment: '',\r\n        error: ''\r\n    });\r\n\r\n    // used for editing modal\r\n    const handleShow = () => setShow(true);\r\n\r\n    useEffect(() => {\r\n        giftsService.get(id)\r\n            .then((giftData) => {\r\n                setGiftInfo(giftData);\r\n                usersService.get(giftData.userId)\r\n                    .then((userData) => {\r\n                        setCreatorInfo(userData)\r\n                    })\r\n            })\r\n            .catch((err) => {\r\n                console.log(err);\r\n            })\r\n        // TODO Add something in the database to store comments on a gift\r\n\r\n        //TODO: Decide if you guys want to store wallet funds\r\n\r\n    }, [id, giftInfo.userId]);\r\n\r\n\r\n    const isInvalidComment = () => {\r\n        return commentInput.error !== '';\r\n    };\r\n\r\n\r\n    /**\r\n     * Update changes to comment input\r\n     * @param e\r\n     */\r\n    const handleCommentChange = (e) => {\r\n        setCommentInput({\r\n            comment: e.target.value,\r\n            error: ''\r\n        });\r\n    };\r\n\r\n    /**\r\n     * Add comment handler\r\n     * @param e\r\n     */\r\n    const handleAddComment = (e) => {\r\n        e.preventDefault();\r\n        // TODO create a gift comment service\r\n    };\r\n\r\n    /**\r\n     * This method determines if the user is the owner of the gift\r\n     * and displays the \"Edit Gift\" button accordingly\r\n     */\r\n    function renderGift() {\r\n        // set editable view if the viewing user is the creator\r\n        if (user.id === creatorInfo.id) {\r\n            return (\r\n                <div>\r\n                    <Button onClick={handleShow} size=\"lg\" block>\r\n                        Update Gift\r\n                    </Button>\r\n                    <EditGift gift={giftInfo} open={show} setOpen={setShow} setGift={setGiftInfo}> </EditGift>\r\n                </div>\r\n            )\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <div className='d-flex mt-2'>\r\n                <Col>\r\n                    <Row className='m-4'>\r\n                        <Col xs={5}>\r\n                            <div className={'grid-gift-image'}>\r\n                                <div className={'giftLG-thumbnail-container'}>\r\n                                    <img className={'giftLG-thumbnail'} src={giftInfo.thumbnail} alt={'pic'}/>\r\n                                </div>\r\n                                <div className={'gift-alt-images-container'}>\r\n                                </div>\r\n                            </div>\r\n                        </Col>\r\n                        <Col>\r\n                            <div className='mt-5'>\r\n                                <h2 className={'gift-title'}> {giftInfo.name}</h2>\r\n                                <span className={'gift-lg-funds'}>${giftInfo.progress}</span><br/>\r\n                                <span className={'gift-lg-price'}>of ${giftInfo.price} funded</span>\r\n                                <ProgressBar animated now={(giftInfo.progress / giftInfo.price) * 100}/><br/>\r\n                                <div className='d-flex flex-column justify-content-center '>\r\n                                    <ContributeButton gift={giftInfo}/>\r\n                                    <br/>\r\n                                    {renderGift()}\r\n                                </div>\r\n                            </div>\r\n                        </Col>\r\n                    </Row>\r\n                    <Row className='justify-content-center m-4'>\r\n                        <Col>\r\n                            <Card>\r\n                                <Card.Header>\r\n                                    Details\r\n                                </Card.Header>\r\n                                <Card.Body>\r\n                                    <div className={'user-card'}>\r\n                                        <Link to={`/account/${creatorInfo.id}`}>\r\n                                            <Image src={creatorInfo.profile_pic} style={{\"width\": \"100px\"}}\r\n                                                   rounded/>\r\n                                        </Link>\r\n                                    </div>\r\n                                    <div>\r\n                                        {giftInfo.description}\r\n                                    </div>\r\n                                </Card.Body>\r\n                                <Card.Footer>\r\n                                    <div className='d-flex justify-content-between'>\r\n                                        <div>\r\n                                            <FontAwesomeIcon icon={faClockRotateLeft} className={'pr-1'} title={\"Last Updated\"}/>\r\n                                            {new Date(giftInfo.updatedAt).toLocaleDateString()}\r\n                                        </div>\r\n                                        <div>\r\n                                            Due By: {new Date(giftInfo.deadline).toLocaleDateString('en-US', {timeZone: 'UTC'})}\r\n                                        </div>\r\n                                    </div>\r\n                                </Card.Footer>\r\n                            </Card>\r\n                        </Col>\r\n                    </Row>\r\n                    <Row className='m-4'>\r\n                        <Col>\r\n                        </Col>\r\n                        <Col>\r\n                            <Card>\r\n                                <Card.Header>\r\n                                    Comments\r\n                                </Card.Header>\r\n                                <Card.Body>\r\n                                    <div className={'create-comment-container'}>\r\n                                        <div className={'comment-and-icon'}>\r\n                                            <div className={'comment-icon-container'}>\r\n                                                <Image className={'comment-icon'} src={creatorInfo.profile_pic}\r\n                                                       rounded/>\r\n                                            </div>\r\n                                            <div className={'comment-text-container'}>\r\n                                                <Form.Group className={'comment-textarea'}>\r\n                                                    <Form.Control id={'comment-text'}\r\n                                                                  className={isInvalidComment() ? 'is-invalid' : ''}\r\n                                                                  onChange={(e) => handleCommentChange(e)}\r\n                                                                  placeholder={'Add a comment...'} as=\"textarea\"\r\n                                                                  rows={3}/>\r\n                                                </Form.Group>\r\n                                                <div id={'comment-error'}\r\n                                                     className={isInvalidComment() ? 'form-error-message' : 'hidden'}>{commentInput.error}</div>\r\n                                            </div>\r\n                                        </div>\r\n                                        <div className={'create-comment-button'}>\r\n                                            <Button size={'sm'} onClick={(e) => handleAddComment(e)}>Add\r\n                                                Comment</Button>\r\n                                        </div>\r\n                                    </div>\r\n                                    <div>\r\n                                        {giftComments.map(comment => {\r\n                                            return <Comment data={comment}/>\r\n                                        })}\r\n                                    </div>\r\n                                </Card.Body>\r\n                            </Card>\r\n                        </Col>\r\n                    </Row>\r\n                </Col>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Gift;\r\n","import React from 'react';\r\nimport {Link} from 'react-router-dom';\r\nimport \"../../gift/Gifts.css\";\r\nimport \"../../home/Home.css\";\r\nimport {Card, Button, ProgressBar} from 'react-bootstrap';\r\nimport {giftsService} from \"../../../utils/ServerConnection\";\r\nimport {toast} from \"react-toastify\";\r\nimport ContributeButton from \"../../../reusable_components/buttons/ContributeButton\";\r\n\r\n\r\n// TODO Remove this component, add functionality to giftsm through props\r\n\r\n/**\r\n * This is the Gift component used to be displayed in all-events.\r\n *\r\n * @param props {Object} {id, deadline(needs to be implemented), funds (needs to be implemented), receiverId,\r\n * receiverName, name, thumbnail, price, description, progress, userId}\r\n */\r\nfunction EventGift(props) {\r\n\r\n    const removeGiftAlert = () => toast(\"This gift has been removed from event\");\r\n\r\n    /**\r\n     * Adds gift stored in the props to an event in the database\r\n     */\r\n    const removeFromEvent = () => {\r\n        giftsService.patch(props.gift.id, {eventId: 0}).catch((err) => {\r\n            console.log(\"did not remove gift from event\");\r\n            console.log(err);\r\n        }).then(removeGiftAlert());\r\n    }\r\n\r\n\r\n    return (\r\n        <div className={'gift-container'}>\r\n            <Card>\r\n                <Link to={{\r\n                    pathname: `/gifts/${props.gift.id}`\r\n                }}>\r\n                    <div className={'gift-thumbnail-container'}>\r\n                        <Card.Img className={'gift-thumbnail'} variant={'top'} src={props.gift.thumbnail}/>\r\n                    </div>\r\n                </Link>\r\n                <Card.Body className={'gift-card-body'}>\r\n                    <Card.Title className={'giftSM-title'}><Link className={'black-link'} to={`/gifts/${props.gift.id}`}>{props.gift.name}</Link></Card.Title>\r\n                    <div className={'giftSM-desc'}>\r\n                        <span className={'gift-sm-funds'}>${props.gift.progress}</span><br/>\r\n                        <span className={'gift-sm-price'}>of ${props.gift.price} funded</span>\r\n                        <ProgressBar striped={'true'} animated={'true'} className={'gift-sm-progressbar'} now={(props.gift.progress / props.gift.price) * 100}/><br/>\r\n                    </div>\r\n                </Card.Body>\r\n                <Card.Footer>\r\n                    <ContributeButton gift={props.gift} />\r\n                    <Button onClick={removeFromEvent} id={\"CardFooterButton\"} block>\r\n                        Remove from Event\r\n                    </Button>\r\n                </Card.Footer>\r\n            </Card>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default EventGift;\r\n","import React, {useEffect, useState} from 'react';\r\nimport {Link, useParams} from 'react-router-dom';\r\nimport {useUser} from \"../../utils/UserContext\";\r\nimport {eventsService, giftsService, usersService} from \"../../utils/ServerConnection\";\r\nimport {Button, Card, Image} from \"react-bootstrap\";\r\nimport EventGift from \"./components/EventGift\";\r\nimport EditEvent from \"../../reusable_components/event-related/EditEvent\";\r\nimport {faClockRotateLeft} from \"@fortawesome/free-solid-svg-icons\";\r\nimport {FontAwesomeIcon} from \"@fortawesome/react-fontawesome\";\r\nimport CarouselComp from '../../reusable_components/misc/CarouselComp';\r\n\r\n\r\n/**\r\n * Page for rendering the large event-large page\r\n * \r\n * Comment functionality has been commented out but not removed in hopes that it is revisited and implemented\r\n * in the future.\r\n */\r\nfunction Event() {\r\n    //the event-large ID that is passed in to the URL (props)\r\n    let {id} = useParams();\r\n\r\n    const {user} = useUser();\r\n\r\n    const [otherUser, setOtherUser] = useState({\r\n        name: '',\r\n        pic: ''\r\n    });\r\n\r\n    const [eventState, setEventState] = useState({\r\n        description: '',\r\n        end_date: 0,\r\n        id: 0,\r\n        name: '',\r\n        userId: user.id\r\n    });\r\n\r\n    const [giftState, setGiftState] = useState([]);\r\n\r\n    const [show, setShow] = useState(false);\r\n\r\n    const responsive = {\r\n            largeDesktop: {\r\n                breakpoint: {max: 5000, min: 3000},\r\n                items: 4,\r\n                slidesToSlide: 4 // optional, default to 1.\r\n            },\r\n            desktop: {\r\n                breakpoint: {max: 3000, min: 1200},\r\n                items: 3,\r\n                slidesToSlide: 3 // optional, default to 1.\r\n            },\r\n            tablet: {\r\n                breakpoint: {max: 1200, min: 475},\r\n                items: 1,\r\n                slidesToSlide: 2 // optional, default to 1.\r\n            },\r\n            mobile: {\r\n                breakpoint: {max: 475, min: 0},\r\n                items: 1,\r\n                slidesToSlide: 1 // optional, default to 1.\r\n            }\r\n        };\r\n\r\n\r\n    /**\r\n     * Renders gift-related attributed to the eventID\r\n     */\r\n    function GiftRender() {\r\n        if (giftState.length === 0) {\r\n            return (<Card.Body className={\"giftDiv cardBody\"} style={{color: 'grey'}}>\r\n                There are no gifts to show!\r\n            </Card.Body>)\r\n        } else {\r\n            return (\r\n                <Card.Body id={\"giftDiv cardBody\"}>\r\n                    <CarouselComp map={\r\n                            giftState.map(function (gift) {\r\n                                return (\r\n                                    <EventGift gift={gift} key={gift.id} email={user.email}/>\r\n                                )\r\n                            })\r\n                        } id=\"gift\"/>\r\n                </Card.Body>\r\n            )\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Function determines if the user is the owner of the event or not\r\n     * Editing capabilities will be rendered upon ownership\r\n     * \r\n     */\r\n    const renderEdit = () => {\r\n        if (user.id === otherUser.id){\r\n            return (\r\n                <div>\r\n                    <Button onClick={handleShow} size=\"lg\" block>\r\n                        Update Event\r\n                    </Button>\r\n                    <EditEvent event={eventState} open={show} setOpen={setShow} setEvent={setEventState}> </EditEvent>\r\n                </div>\r\n            )\r\n        }\r\n    }\r\n\r\n\r\n    /**\r\n     * show the modal for the 'Update Event' modal\r\n     */\r\n    const handleShow = () => setShow(true);\r\n\r\n    /**\r\n     * On page load\r\n     */\r\n    useEffect(() => {\r\n        /**\r\n         * Grabs the event-large attributed to the ID of the event-large from the appropriate user\r\n         */\r\n        const grabEvent = () => {\r\n            eventsService.get(id).then((event) => {\r\n                setEventState(event);\r\n            }).catch((err) => {\r\n                console.error(\"Error grabbing event-large\", err);\r\n            })\r\n        };\r\n\r\n        /**\r\n         * Grabs the gift-related of an account attributed to this event-large\r\n         */\r\n        const grabGifts = () => {\r\n            giftsService.find({\r\n                query: {\r\n                    eventId: id,\r\n                    userId: eventState.userId\r\n                }\r\n            }).then((gifts) => {\r\n                setGiftState(gifts.data);\r\n            }).catch((err) => {\r\n                console.error(\"Error grabbing gift-related\", err);\r\n            })\r\n        };\r\n        grabEvent();\r\n        grabGifts();\r\n    }, [eventState.userId, id]);\r\n\r\n    /**\r\n     * getting the creator info attributed to the event-large\r\n     */\r\n    useEffect(() => {\r\n        usersService.get(eventState.userId)\r\n            .then(otherUser => {\r\n                setOtherUser(otherUser);\r\n            })\r\n    }, [eventState.userId])\r\n\r\n\r\n    return (\r\n        <div>\r\n            <div className={'content-container'}>\r\n                <div className={'grid-container'}>\r\n                    <h2 className={'gift-title'}>{eventState.name}</h2>\r\n                    <div>\r\n                        <div>\r\n                            <Image src={otherUser.profile_pic} rounded id={'profilePicture'}/>\r\n                        </div>\r\n                        <Link className={'no-dec-link'} to={`/account/${otherUser.id}`}>\r\n                            <div className={'card-email-container'}>\r\n                                {otherUser.name}\r\n                            </div>\r\n                        </Link>\r\n                    </div>\r\n                    <Card className={'desc-card'}>\r\n                        <Card.Header>\r\n                            Description\r\n                        </Card.Header>\r\n                        <Card.Body>\r\n                            <div>\r\n                                {eventState.description}\r\n                            </div>\r\n                        </Card.Body>\r\n                        <Card.Footer>\r\n                            <div className='d-flex justify-content-between'>\r\n                                <div>\r\n                                    <FontAwesomeIcon icon={faClockRotateLeft} className={'pr-1'} title={\"Last Updated\"}/>\r\n                                    {new Date(eventState.updatedAt).toLocaleDateString()}\r\n                                </div>\r\n                                <div>\r\n                                    Held on: {new Date(eventState.end_date).toLocaleDateString('en-US', {timeZone: 'UTC'})}\r\n                                </div>\r\n                            </div>\r\n                        </Card.Footer>\r\n                    </Card>\r\n                    {renderEdit()}\r\n                </div>\r\n                <Card className={\"mt-3 card\"}>\r\n                    <Card.Header className={\"cardHeader\"}>\r\n                        Gifts\r\n                    </Card.Header>\r\n                    <GiftRender/>\r\n                </Card>\r\n            </div>\r\n        </div>\r\n    )\r\n\r\n}\r\n\r\nexport default Event;\r\n","import React, {useEffect, useState} from 'react'\r\nimport EventSM from \"../../reusable_components/event-related/EventSM\";\r\nimport {Card, Container} from \"react-bootstrap\";\r\nimport {eventsService, usersService} from \"../../utils/ServerConnection\";\r\nimport {useUser} from \"../../utils/UserContext\";\r\nimport \"../event-large/Events.css\";\r\n\r\n\r\n/**\r\nThis page renders ALL events for the signed in user, regardless of expiry date\r\n*/\r\nfunction Events() {\r\n    //logged in user\r\n    const {user} = useUser();\r\n\r\n    //All the states being used in this component\r\n    const [state, setState] = useState({\r\n        name: '',\r\n        dob: '',\r\n        pic: '',\r\n        bio: '',\r\n        friend: false,\r\n        requested: false,\r\n        priv: false\r\n    });\r\n\r\n    // Contains all event-related for a profile\r\n    const [eventState, setEventState] = useState([]);\r\n\r\n    /**\r\n     * On page load\r\n     */\r\n    useEffect(() => {\r\n        //grabbing all events\r\n        const grabEvents = async () => {\r\n            try {\r\n                const events = await eventsService.find({query: {userId: {$eq: user.id}}});\r\n                setEventState(events.data);\r\n            } catch (err) {\r\n                console.error(err);\r\n            }\r\n        };\r\n\r\n        const grabProfileInfo = async () => {\r\n            try {\r\n                await usersService.get(user.id).then((resp) => {\r\n                    setState(prevState => (\r\n                        {\r\n                            ...prevState,\r\n                            name: resp.name,\r\n                            bio: resp.bio,\r\n                            dob: resp.bio,\r\n                            pic: resp.pic\r\n                        }))\r\n                })\r\n            } catch (err) {\r\n                console.error(err);\r\n            }\r\n\r\n        };\r\n\r\n        //Grab profile info\r\n        grabProfileInfo().then(function () {\r\n                if (!state.priv) {\r\n                    grabEvents();\r\n                }\r\n            }\r\n        );\r\n    }, [state.priv, user.id]);\r\n\r\n    /**\r\n     * Rendering in events\r\n    */\r\n    function eventRender() {\r\n        if (eventState.length === 0) {\r\n            return (<Card.Body className={\"eventDiv cardBody\"} style={{color: 'grey'}}>\r\n                There are no events to show!\r\n            </Card.Body>)\r\n        } else {\r\n            return eventState.map(function (event, i) {\r\n                return <Container className={'mb-4'}>\r\n                    <EventSM event={event} key={i}/>\r\n                </Container>\r\n            })\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <div className={\"content-container\"}>\r\n                <h2 className={\"event-large-title\"}>All Events</h2>\r\n                <div className={\"event-large-grid-container\"}>\r\n                    {eventRender()}\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n\r\n}\r\n\r\nexport default Events;","import { useEffect } from \"react\";\r\nimport { useLocation } from \"react-router-dom\";\r\n\r\n/**\r\n * Used to scroll every webpage to the top when a user goes to a different page\r\n * @returns {null}\r\n * @constructor\r\n */\r\nexport default function ScrollToTop() {\r\n    const { pathname } = useLocation();\r\n\r\n    useEffect(() => {\r\n        window.scrollTo(0, 0);\r\n    }, [pathname]);\r\n\r\n    return null;\r\n}","import React from 'react'\r\nimport './Loading.css'\r\n\r\n/**\r\n * Used to show a loading circle when the client requests Amazon Item information from Server\r\n * \r\n * Inherited from old group.. currently not used in project anymore\r\n * \r\n * as of 5/15 2022\r\n */\r\nexport default function Loading() {\r\n    return(\r\n        <div className=\"loading\"/>\r\n    )\r\n}","import React, {useState} from 'react';\r\nimport {Button, Col, Form, FormControl, InputGroup, Tab, Tabs, Image} from \"react-bootstrap\";\r\nimport {useUser} from \"../../utils/UserContext\";\r\nimport Loading from \"../../reusable_components/loading/Loading\"\r\nimport \"./AddGift.css\";\r\nimport \"../gift/Gifts.css\";\r\nimport {app, giftsService} from '../../utils/ServerConnection'\r\nimport {toast} from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\nimport {useHistory} from \"react-router-dom\";\r\n\r\n/**\r\n * Page to add a gift to a user's profile\r\n * \r\n */\r\nfunction AddGift() {\r\n\r\n    // Timer for the toast notifications\r\n    const sleepTimer = 1000;\r\n    const {user} = useUser();\r\n    const history = useHistory();\r\n\r\n    const [addGift, setAddGift] = useState({\r\n        name: '',\r\n        price: 0,\r\n        thumbnail: '',\r\n        description: '',\r\n        link: '',\r\n        deadline: '',\r\n        amazonUrl: '',\r\n        email: '',\r\n        userId: user.id,\r\n    });\r\n\r\n    // Will be changed to strings if theres an error\r\n    // TODO setup an error for deadline\r\n    const [errors, setErrors] = useState({\r\n        nameError: null,\r\n        descriptionError: null,\r\n        priceError: null,\r\n        linkError: null,\r\n        thumbnailError: null,\r\n        deadlineError: null\r\n    });\r\n\r\n    const handlePriceChange = (e) => {\r\n        setAddGift(prevState => ({...prevState, price: Math.round(e.target.value)}));\r\n        setErrors(prevState => ({...prevState, priceError: ''}));\r\n    };\r\n\r\n    const [hasAmazonProductData, setHasAmazonProductData] = useState(false);\r\n    const [isLoading, setLoading] = useState(false);\r\n\r\n    // Toast Things\r\n    const addGiftAlert = () => toast(\"Your gift has been added!\");\r\n    const sleep = (milliseconds) => {\r\n        return new Promise(resolve => setTimeout(resolve, milliseconds))\r\n    }\r\n\r\n\r\n    /**\r\n     * This method checks whether there is an error in the form.\r\n     *\r\n     * @returns {boolean} Whether the input form has an error in it\r\n     */\r\n    const checkHasFormErrors = () => {\r\n        let hasError = false\r\n        const expression = /^(\\d+)(\\.\\d{1,2})?$/;\r\n        const validAmount = expression.test(addGift.price);\r\n\r\n        //The following check if the user left an input box empty\r\n        if (addGift.name === '') {\r\n            setErrors(prevState => ({...prevState, nameError: 'Value cannot be empty'}))\r\n            hasError = true\r\n        }\r\n        if (addGift.description === '') {\r\n            setErrors(prevState => ({...prevState, descriptionError: 'Value cannot be empty'}))\r\n            hasError = true\r\n        }\r\n        if (!validAmount) {\r\n            setErrors(prevState => ({...prevState, priceError: 'Must enter a valid price'}))\r\n            hasError = true\r\n        }\r\n        if (addGift.price === 0) {\r\n            setErrors(prevState => ({...prevState, priceError: 'Value cannot be empty'}))\r\n            hasError = true\r\n        }\r\n        if (addGift.link === '') {\r\n            setErrors(prevState => ({...prevState, linkError: 'Value cannot be empty'}))\r\n            hasError = true\r\n        }\r\n        if (addGift.thumbnail === '') {\r\n            setErrors(prevState => ({...prevState, thumbnailError: 'Value cannot be empty'}))\r\n            hasError = true\r\n        }\r\n        return hasError\r\n    }\r\n    /**\r\n     * Event handler for clicking add gift\r\n     *\r\n     * @param e The source of the event-large\r\n     * @returns {Promise<void>} resolves to a gift being added to database or an error printed to console/user\r\n     */\r\n    const handleAddGift = async (e) => {\r\n        e.preventDefault();\r\n        if (!checkHasFormErrors()) {\r\n            try {\r\n                const giftData = await giftsService.create(addGift);\r\n                addGiftAlert();\r\n                sleep(sleepTimer).then(() => {\r\n                    history.push(`/gifts/${giftData.id}`);\r\n                })\r\n            } catch (err) {\r\n                //TODO show user the error\r\n                toast(err.message)\r\n                console.log(err);\r\n            }\r\n        }\r\n    };\r\n\r\n    /**\r\n     * *CURRENTLY NOT FUNCTIONAL* Uses Amazon API to get gift information from amazon.\r\n     *\r\n     * @returns {Promise<void>} resolves with setLoading being set to true and setHasAmazonProductData set to true\r\n     */\r\n    const getAmazonProductData = async () => {\r\n        setLoading(true);\r\n        try {\r\n            //TODO for some reason /amazon breaks auth so I have this reAuth in here\r\n            // Break meaning you are signed in (JWT in localStorage), but it doesn't acknowledge it\r\n            //await app.reAuthenticate();\r\n            const productData = await app.service('amazon').get(\"\", {query: {url: addGift.amazonUrl}});\r\n            setAddGift(prevState => ({\r\n                ...prevState,\r\n                name: productData.productTitle,\r\n                thumbnail: productData.image,\r\n                price: productData.price,\r\n                description: productData.productDescription,\r\n                link: addGift.amazonUrl\r\n            }));\r\n            setLoading(false);\r\n            setHasAmazonProductData(true);\r\n        } catch (error) {\r\n            toast(error.message)\r\n            console.log(error);\r\n        }\r\n    };\r\n\r\n    /**\r\n     * Form handler to update values entered by user\r\n     * \r\n     */\r\n    const handleChange = (e) => {\r\n        const {name, value} = e.target;\r\n        setAddGift(prevState => ({\r\n            ...prevState,\r\n            [name]: value\r\n        }));\r\n        setErrors(prevState => ({\r\n            ...prevState,\r\n            [name + 'Error']: ''\r\n        }));\r\n    };\r\n\r\n    /**\r\n     * Renders amazon product data when hasAmazonProductData is true, i.e., getAmazonData resolves.\r\n     *\r\n     * @returns {JSX.Element} returns the HTML to present amazon info\r\n     */\r\n    const RenderAmazonProductInfo = () => {\r\n        if (hasAmazonProductData) {\r\n            return (\r\n                <div>\r\n                    <Form.Group className={'form-group'}>\r\n                        <Form.Label>Name </Form.Label>\r\n                        <Form.Control className={errors.nameError ? 'is-invalid' : ''}\r\n                                      placeholder=\"Enter a name for your gift\"\r\n                                      value={addGift.name}\r\n                                      onChange={handleChange}\r\n                                      name={'name'}/>\r\n                        <div className={errors.nameError ? 'form-error-message' : 'hidden'}>{errors.nameError}</div>\r\n                    </Form.Group>\r\n\r\n                    <Form.Group className={'form-group'}>\r\n                        <Form.Label>Description </Form.Label>\r\n                        <Form.Control className={errors.descriptionError ? 'is-invalid' : ''}\r\n                                      placeholder={'Enter a description for your gift'}\r\n                                      value={addGift.description}\r\n                                      as=\"textarea\" rows={3}\r\n                                      name={'description'}\r\n                                      onChange={handleChange}/>\r\n                        <div\r\n                            className={errors.descriptionError ? 'form-error-message' : 'hidden'}>{errors.descriptionError}</div>\r\n                    </Form.Group>\r\n\r\n                    <Form.Group className={'form-group'}>\r\n                        <Form.Label>Price</Form.Label>\r\n                        <InputGroup className={'price-input'}>\r\n                            <InputGroup.Prepend>\r\n                                <InputGroup.Text>$</InputGroup.Text>\r\n                            </InputGroup.Prepend>\r\n                            <FormControl className={errors.priceError ? 'is-invalid' : ''}\r\n                                         onChange={handlePriceChange}\r\n                                         name={'price'}\r\n                                         value={addGift.price}\r\n                                         placeholder={\"Enter the price of your gift\"}/>\r\n                        </InputGroup>\r\n                        <div className={errors.priceError ? 'form-error-message' : 'hidden'}>{errors.priceError}</div>\r\n                    </Form.Group>\r\n\r\n                    <Form.Group className={'form-group'}>\r\n                        <Form.Label>Image</Form.Label>\r\n                        <div className={'amazon-image-container'}>\r\n                            <Image src={addGift.thumbnail} alt={addGift.name} fluid/>\r\n                        </div>\r\n                    </Form.Group>\r\n\r\n                    <Form.Group className={'form-group'}>\r\n                        <Form.Label>Receiver</Form.Label>\r\n                        <Form.Control className={errors.emailError ? 'is-invalid' : ''}\r\n                                      placeholder=\"Enter the email of the user receiving the gift\"\r\n                                      name={'email'}\r\n                                      value={addGift.email}\r\n                                      onChange={handleChange}/>\r\n                        <div className={errors.emailError ? 'form-error-message' : 'hidden'}>{errors.emailError}</div>\r\n                    </Form.Group>\r\n\r\n                    <Form.Group className={'form-group'}>\r\n                        <Form.Label>Deadline</Form.Label>\r\n                        <Form.Control placeholder=\"Enter a deadline for your gift\"\r\n                                      name={'deadline'}\r\n                                      type={'date'}\r\n                                      onChange={handleChange}/>\r\n                    </Form.Group>\r\n\r\n                    <Button onClick={handleAddGift}>Add Gift</Button>\r\n                </div>\r\n            )\r\n        }\r\n        return null\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            <div className={'content-container padding-container'}>\r\n                <h1>Add a Gift</h1>\r\n                <Tabs fill className={'tabs'} defaultActiveKey=\"manual\">\r\n                    <Tab eventKey=\"manual\" title=\"Manual\">\r\n                        <div className={'add-gift-form-container grey-background'}>\r\n                            <Form className={'gift-form'}>\r\n                                <Form.Group className={'form-group'}>\r\n                                    <Form.Label>Name</Form.Label>\r\n                                    <Form.Control className={errors.nameError ? 'is-invalid' : ''}\r\n                                                  placeholder=\"Enter a name for your gift\"\r\n                                                  onChange={handleChange}\r\n                                                  name={'name'}/>\r\n                                    <div\r\n                                        className={errors.nameError ? 'form-error-message' : 'hidden'}>{errors.nameError}</div>\r\n                                </Form.Group>\r\n\r\n                                <Form.Group className={'form-group'}>\r\n                                    <Form.Label>Description</Form.Label>\r\n                                    <Form.Control className={errors.descriptionError ? 'is-invalid' : ''}\r\n                                                  placeholder={'Enter a description for your gift'}\r\n                                                  as=\"textarea\" rows={3}\r\n                                                  name={'description'}\r\n                                                  onChange={handleChange}/>\r\n                                    <div\r\n                                        className={errors.descriptionError ? 'form-error-message' : 'hidden'}>{errors.descriptionError}</div>\r\n\r\n                                </Form.Group>\r\n\r\n                                <Form.Row>\r\n                                    <Form.Group as={Col} className={'form-group'}>\r\n                                        <Form.Label>Price</Form.Label>\r\n                                        <InputGroup className={'price-input'}>\r\n                                            <InputGroup.Text>$</InputGroup.Text>\r\n                                            <FormControl className={errors.priceError ? 'is-invalid' : ''}\r\n                                                         onChange={handlePriceChange}\r\n                                                         name={'price'}\r\n                                                         placeholder={\"Enter the price of your gift\"}/>\r\n                                        </InputGroup>\r\n                                        <div\r\n                                            className={errors.priceError ? 'form-error-message' : 'hidden'}>{errors.priceError}</div>\r\n                                    </Form.Group>\r\n\r\n                                    <Form.Group as={Col} className={'form-group'}>\r\n                                        <Form.Label>Deadline</Form.Label>\r\n                                        <Form.Control placeholder=\"Enter a deadline for your gift\"\r\n                                                      name={'deadline'}\r\n                                                      type={'date'}\r\n                                                      onChange={handleChange}/>\r\n                                    </Form.Group>\r\n                                </Form.Row>\r\n\r\n                                <Form.Group className={'form-group'}>\r\n                                    <Form.Label>Url</Form.Label>\r\n                                    <Form.Control className={errors.linkError ? 'is-invalid' : ''}\r\n                                                  placeholder=\"Enter the Url for your gift\"\r\n                                                  name={'link'}\r\n                                                  onChange={handleChange}/>\r\n                                    <div\r\n                                        className={errors.linkError ? 'form-error-message' : 'hidden'}>{errors.linkError}</div>\r\n                                </Form.Group>\r\n\r\n                                <Form.Group className={'form-group'}>\r\n                                    <Form.Label>Image</Form.Label>\r\n                                    <Form.Control className={errors.thumbnailError ? 'is-invalid' : ''}\r\n                                                  placeholder=\"Enter the Url to an image of your gift\"\r\n                                                  name={'thumbnail'}\r\n                                                  onChange={handleChange}/>\r\n                                    <div\r\n                                        className={errors.thumbnailError ? 'form-error-message' : 'hidden'}>{errors.thumbnailError}</div>\r\n                                </Form.Group>\r\n\r\n                                <Button onClick={handleAddGift}>Add Gift</Button>\r\n                            </Form>\r\n                        </div>\r\n                    </Tab>\r\n                    <Tab eventKey=\"profile\" title=\"Automatic\">\r\n                        <div className={'add-gift-form-container grey-background'}>\r\n                            <Form className={'gift-form'}>\r\n                                <Form.Group className={'form-group'}>\r\n                                    <Form.Label>Amazon Gift Url</Form.Label>\r\n                                    <Form.Control placeholder=\"Enter an Amazon Url for the gift you want to add\"\r\n                                                  onChange={handleChange}\r\n                                                  name={'amazonUrl'}/>\r\n                                </Form.Group>\r\n                                {!hasAmazonProductData && <Button onClick={getAmazonProductData}>Go</Button>}\r\n                                <div className={'d-flex justify-content-center'}>\r\n                                    {isLoading && <Loading/>}\r\n                                </div>\r\n                                <RenderAmazonProductInfo/>\r\n                            </Form>\r\n                        </div>\r\n                    </Tab>\r\n                </Tabs>\r\n            </div>\r\n        </div>\r\n    )\r\n\r\n}\r\n\r\nexport default AddGift;\r\n","import {Row, Card, Container, InputGroup, FormControl} from \"react-bootstrap\";\r\nimport React, {useState} from 'react'\r\nimport {InPlaceEditorComponent} from '@syncfusion/ej2-react-inplace-editor';\r\nimport '../../../node_modules/@syncfusion/ej2-react-inplace-editor/styles/material.css';\r\nimport '../../../node_modules/@syncfusion/ej2-buttons/styles/material.css';\r\nimport '../../../node_modules/@syncfusion/ej2-inputs/styles/material.css';\r\nimport '../../../node_modules/@syncfusion/ej2-base/styles/material.css';\r\nimport '../../../node_modules/@syncfusion/ej2-richtexteditor/styles/material.css';\r\nimport './Settings.css'\r\nimport {useUser} from \"../../utils/UserContext\";\r\nimport {usersService} from '../../utils/ServerConnection'\r\nimport {toast} from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\n\r\n\r\n/**\r\n * This makes up the settings page.\r\n * as of: 04/05/22\r\n */\r\nfunction Settings() {\r\n\r\n    const {user} = useUser();\r\n\r\n    const [state, setState] = useState({\r\n        name: user.name,\r\n        private: user.private,\r\n        password: \"\",\r\n        confirmPassword: \"\",\r\n        email: user.email,\r\n        pic: user.pic\r\n    });\r\n\r\n    // hook for setting privacy\r\n    const [checked, setCheck] = useState(state.priv !== 0);\r\n\r\n    /**\r\n     * Updates state associated with target\r\n     * @param e target of action\r\n     * @param compName field being edited\r\n     */\r\n    const handleChange = (e, compName) => {\r\n        setState(prevState => ({\r\n            ...prevState,\r\n            [compName]: e.data.value\r\n        }));\r\n    }\r\n\r\n    /**\r\n     * Handles changing name. Updates database and sets the authenticated user\r\n     * @returns {Promise<void>} If successful, will set the authenticated user and update database\r\n     */\r\n    const handleName = () => {\r\n        usersService.patch(user.id, {name: state.name})\r\n            .then(() => {\r\n                toast(\"Name has been updated to \" + state.name)\r\n            }).catch((err) => {\r\n            console.log(\"Error changing name\", err);\r\n            toast.error(\"Failed to update name!\");\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Handles changing email\r\n     */\r\n    const handleEmail = () => {\r\n        usersService.patch(user.id, {email: state.email})\r\n            .then(() => {\r\n                toast(\"Email has been updated to \" + state.email)\r\n            }).catch((err) => {\r\n            console.log(\"Error changing email\", err);\r\n            toast.error(\"Failed to update email!\");\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Handles changing passwords\r\n     * only changes the password if the confirmed password is the same\r\n     */\r\n    const handlePassword = () => {\r\n        if (state.password === state.confirmPassword) {\r\n            usersService.patch(user.id, {password: state.password})\r\n                .then(() => {\r\n                    toast(\"Password has been updated!\")\r\n                }).catch((err) => {\r\n                console.log(\"Error changing password\", err)\r\n                toast(\"Failed to update password\");\r\n            });\r\n        } else {\r\n            console.log(\"Passwords do not match\");\r\n            toast.error(\"Passwords do not match!\");\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Changes the private status of the account, if successful, will set authenticated user to private and update database\r\n     */\r\n    const handlePrivate = () => {\r\n        usersService.patch(user.id, {private: state.priv})\r\n            .then(() => {\r\n                toast(\"Privacy has been set to: \" + (state.priv === 1 ? \"Private\" : \"Not Private\"));\r\n            }).catch((err) => {\r\n            console.log(\"Error changing private\", err)\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Handles changing the profile picture\r\n     */\r\n    const onImageChange = (event) => {\r\n        if (event.target.files.length === 1) {\r\n            let reader = new FileReader();\r\n            reader.onload = (e) => {\r\n                setState(prevState => ({\r\n                    ...prevState,\r\n                    pic: e.target.result\r\n                }));\r\n                usersService.patch(user.id, {profile_pic: e.target.result})\r\n                    .then(() => {\r\n                        toast(\"Profile picture has been updated!\");\r\n                    }).catch((err) => {\r\n                    console.log(\"Error changing pic\", err);\r\n                    toast.error(\"Error changing picture\");\r\n                });\r\n            };\r\n            reader.readAsDataURL(event.target.files[0]);\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className={'textFont'}>\r\n            <Container className={'mt-3 w-75'}>\r\n                <Card>\r\n                    <Card.Header className={'text-center cardHeader'}>\r\n                        <h3>Settings</h3>\r\n                    </Card.Header>\r\n                    <Card.Body>\r\n                        <Row className={'p-4'}>\r\n                            <InputGroup.Text>Full Name: </InputGroup.Text>\r\n                            <td className=\"sample-td ml-2\">\r\n                                <InPlaceEditorComponent\r\n                                    id='name'\r\n                                    model={{placeholder: 'Enter full name'}}\r\n                                    mode='Inline'\r\n                                    type='Text'\r\n                                    value={state.name}\r\n                                    saveButton={{content: 'Save', cssClass: 'e-outline'}}\r\n                                    cancelButton={{content: 'Cancel', cssClass: 'e-outline'}}\r\n                                    actionBegin={(e) => handleChange(e, 'name')}\r\n                                    submitClick={handleName}\r\n                                />\r\n                            </td>\r\n                        </Row>\r\n                        <Row className={'p-4'}>\r\n                            <InputGroup.Text>Email Address: </InputGroup.Text>\r\n                            <td className=\"sample-td ml-2\">\r\n                                <InPlaceEditorComponent\r\n                                    id='email'\r\n                                    model={{placeholder: 'Enter email address'}}\r\n                                    mode='Inline'\r\n                                    type='Text'\r\n                                    value={state.email}\r\n                                    saveButton={{content: 'Save', cssClass: 'e-outline'}}\r\n                                    cancelButton={{content: 'Cancel', cssClass: 'e-outline'}}\r\n                                    actionBegin={(e) => handleChange(e, 'email')}\r\n                                    submitClick={handleEmail}\r\n                                />\r\n                            </td>\r\n                        </Row>\r\n                        <Row className={'p-4'}>\r\n                            <div className=\"d-flex flex-row w-50\">\r\n                                <InputGroup.Text>Password: </InputGroup.Text>\r\n                                <td className=\"sample-td ml-2\">\r\n                                    <InPlaceEditorComponent\r\n                                        id='pass'\r\n                                        model={{placeholder: 'Enter password'}}\r\n                                        mode='Inline'\r\n                                        type='Text'\r\n                                        value={state.password}\r\n                                        saveButton={{content: 'Save', cssClass: 'e-outline'}}\r\n                                        cancelButton={{content: 'Cancel', cssClass: 'e-outline'}}\r\n                                        actionBegin={(e) => handleChange(e, 'password')}\r\n                                    />\r\n                                </td>\r\n                            </div>\r\n                            <div className=\"d-flex flex-row w-50\">\r\n                                <InputGroup.Text>Confirm Password: </InputGroup.Text>\r\n                                <td className=\"sample-td ml-2\">\r\n                                    <InPlaceEditorComponent\r\n                                        id='pass'\r\n                                        model={{placeholder: 'Enter password'}}\r\n                                        mode='Inline'\r\n                                        type='Text'\r\n                                        value={state.confirmPassword}\r\n                                        saveButton={{content: 'Save', cssClass: 'e-outline'}}\r\n                                        cancelButton={{content: 'Cancel', cssClass: 'e-outline'}}\r\n                                        actionBegin={(e) => handleChange(e, 'confirmPassword')}\r\n                                        submitClick={handlePassword}\r\n                                    />\r\n                                </td>\r\n                            </div>\r\n                        </Row>\r\n                        <Row className={\"p-4\"}>\r\n                            <InputGroup.Text>Profile Picture: </InputGroup.Text>\r\n                            <input type=\"file\" onChange={onImageChange} className=\"filetype fileSelector ml-4\"\r\n                                   id=\"group_image\" accept=\"image/png, image/jpeg\"/>\r\n                            <img src={state.pic} alt={\"profile pic\"}/>\r\n                        </Row>\r\n                        <Row className={'p-4'}>\r\n                            <InputGroup className=\"d-flex flex-row w-50\">\r\n                                <InputGroup.Text>Private Account</InputGroup.Text>\r\n                                <FormControl\r\n                                    id='check' type={'checkbox'}\r\n                                    placeholder={state.private}\r\n                                    name={'private'}\r\n                                    value={state.value} checked={checked}\r\n                                    onChange={() => {\r\n                                        if (checked) {\r\n                                            setCheck(false);\r\n                                            state.private = 0\r\n                                            handlePrivate()\r\n                                        } else {\r\n                                            setCheck(true)\r\n                                            state.private = 1\r\n                                            handlePrivate()\r\n                                        }\r\n                                    }}/>\r\n                            </InputGroup>\r\n                        </Row>\r\n                    </Card.Body>\r\n                </Card>\r\n            </Container>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Settings","import React from 'react';\r\n\r\n/**\r\n * Renders the terms and conditions page\r\n * \r\n */\r\nfunction TermsAndConditions(){\r\n  \r\n  //TODO: add actual terms and conditions\r\n  return(<label>Insert Terms and Conditions</label>);\r\n}\r\n\r\nexport default TermsAndConditions","import React from 'react';\r\nimport './About.css';\r\n\r\n/**\r\n * Returns the about us page\r\n */\r\nfunction About() {\r\n    /**\r\n     * page content\r\n     */\r\n    return (\r\n        <div>\r\n            <div className={'content-container'}>\r\n                <div className={'about-page-container'}>\r\n                    <div className={'about-info-container'}>\r\n                        <div>\r\n                            <p className={'about-section-title'}>About Wishwell</p>\r\n                            <div className={'about-grey-background'}>\r\n                                <p className={'section-description'}>Wishwell is gift giving platform that combines the elements of a gift registry and a social media sharing platform. Use Wishwell to see and keep track of what gifts you and your friends want, see what upcoming events your friends are planning and create your own events, and donate to the gifts of your choosing!</p>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nexport default About;","import React, {useState} from 'react';\r\nimport {Button, Col, Form, Tab, Tabs} from \"react-bootstrap\";\r\nimport {useUser} from \"../../utils/UserContext\";\r\nimport \"../create-gift/AddGift.css\";\r\nimport \"../gift/Gifts.css\";\r\nimport {eventsService} from '../../utils/ServerConnection'\r\nimport {toast} from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\nimport {useHistory} from \"react-router-dom\";\r\n\r\n/**\r\n * Page that allows the user to add an event to their account\r\n * \r\n */\r\nfunction AddEvent() {\r\n    const {user} = useUser();\r\n    const history = useHistory();\r\n\r\n    const [addEvent, setAddEvent] = useState({\r\n        name: '',\r\n        description: '',\r\n        privacy: 0,\r\n        end_date: '',\r\n        userId: user.id\r\n    });\r\n\r\n    //TODO: edit errors because they are not needed in this current state\r\n    // except for name character limit, description character limit and unfinished date\r\n    const [errors, setErrors] = useState({\r\n        nameError: '',\r\n        descriptionError: '',\r\n        priceError: '',\r\n        linkError: '',\r\n        thumbnailError: '',\r\n        emailError: ''\r\n    });\r\n\r\n    // Error handlers for form\r\n    const hasNameError = () => {\r\n        return errors.nameError !== '';\r\n    };\r\n\r\n    const hasDescriptionError = () => {\r\n        return errors.descriptionError !== '';\r\n    };\r\n\r\n    const handlePrivateChecked = () => {\r\n        setAddEvent(prevState => ({...prevState, privacy: addEvent.privacy ? 0 : 1}));\r\n    };\r\n\r\n    const addEventAlert = () => toast(\"Your event has been added!\");\r\n\r\n    const sleep = (milliseconds) => {\r\n        return new Promise(resolve => setTimeout(resolve, milliseconds))\r\n    }\r\n\r\n\r\n    /**\r\n     * Handles addEvent button being pressed. Checks for empty entries and adds the event-large to the database\r\n     * @param e source of button press\r\n     * @returns {Promise<void>} If successful, prints to console, adds to database, and creates toastify alert\r\n     */\r\n    const handleAddEvent = async (e) => {\r\n        e.preventDefault();\r\n\r\n        //The following check if the user left an input box empty\r\n        if (addEvent.name === ''){\r\n            setErrors(prevState => ({...prevState, nameError: 'Value cannot be empty'}))\r\n        } else if (addEvent.description === ''){\r\n            setErrors(prevState => ({...prevState, descriptionError: 'Value cannot be empty'}))\r\n        // } else if (addEvent.end_date === 'mm/dd/yy'){\r\n        //     setErrors(prevState => ({...prevState, nameError: 'Value cannot be empty'}))\r\n        } else {\r\n            try {\r\n                const createdEvent = await eventsService.create(addEvent);\r\n                addEventAlert();\r\n                console.log(\"Your event has been created!\")\r\n                sleep(1000).then(() => {\r\n                    history.push(`/event/${createdEvent.id}`);\r\n                })\r\n                // const createdEvent = await eventsService.create({\r\n                //     ...addEvent, name: });\r\n                //TODO: Gotta add an event-large page and the gift-related listed with calls to server\r\n                // const giftData = await giftsService.create({\r\n                //     ...addGift, receiverId: receiverData.data[0].id,\r\n                //     receiverName: receiverData.data[0].name\r\n                // });\r\n            } catch (err) {\r\n                console.log(err);\r\n            }\r\n        }\r\n    };\r\n\r\n    // Form handler\r\n    const handleChange = (e) => {\r\n        const {name, value} = e.target;\r\n        setAddEvent(prevState => ({\r\n            ...prevState,\r\n            [name]: value\r\n        }));\r\n        setErrors(prevState => ({\r\n            ...prevState,\r\n            [name + 'Error']: ''\r\n        }));\r\n    };\r\n\r\n    return(\r\n        <div>\r\n            <div className={'content-container padding-container'}>\r\n                <h1>Add an Event</h1>\r\n                <Tabs fill className={'tabs'} defaultActiveKey=\"manual\">\r\n                    <Tab eventKey=\"manual\" title=\"Manual\">\r\n                        <div className={'add-gift-form-container grey-background'}>\r\n                            <Form className={'gift-form'}>\r\n                                <Form.Group className={'form-group'}>\r\n                                    <Form.Label>Name</Form.Label>\r\n                                    <Form.Control className={hasNameError() ? 'is-invalid' : ''}\r\n                                                  placeholder=\"Enter a name for your event\"\r\n                                                  onChange={handleChange}\r\n                                                  name={'name'}/>\r\n                                    <div className={hasNameError() ? 'form-error-message' : 'hidden'}>{errors.nameError}</div>\r\n                                </Form.Group>\r\n\r\n                                <Form.Group className={'form-group'}>\r\n                                    <Form.Label>Description</Form.Label>\r\n                                    <Form.Control className={hasDescriptionError() ? 'is-invalid' : ''}\r\n                                                  placeholder={'Enter a description for your event-large'}\r\n                                                  as=\"textarea\" rows={3}\r\n                                                  name={'description'}\r\n                                                  onChange={handleChange}/>\r\n                                    <div className={hasDescriptionError() ? 'form-error-message' : 'hidden'}>{errors.descriptionError}</div>\r\n\r\n                                </Form.Group>\r\n\r\n                                <Form.Row>\r\n                                    <Form.Group as={Col} className={'form-group'}>\r\n                                        <Form.Label>Date</Form.Label>\r\n                                        <Form.Control placeholder=\"Enter the date of your event\"\r\n                                                      name={'end_date'}\r\n                                                      type={'date'}\r\n                                                      onChange={handleChange}/>\r\n                                    </Form.Group>\r\n                                </Form.Row>\r\n\r\n                                <Form.Group controlId=\"formBasicCheckbox\">\r\n                                    <Form.Check onClick={handlePrivateChecked}\r\n                                                type={'checkbox'}\r\n                                                label={'Private'} />\r\n                                </Form.Group>\r\n\r\n                                <Button id={\"addEventSubmission\"} onClick={handleAddEvent}>Add Event</Button>\r\n                            </Form>\r\n                        </div>\r\n                    </Tab>\r\n                </Tabs>\r\n            </div>\r\n        </div>\r\n    )\r\n\r\n}\r\n\r\nexport default AddEvent;\r\n","import React, {useState, useEffect} from 'react';\r\nimport \"../../../App.css\";\r\nimport {Col, Container, Row} from 'react-bootstrap';\r\nimport {usersService} from '../../../utils/ServerConnection';\r\nimport \"../SearchResults.css\"\r\nimport {Link} from 'react-router-dom';\r\nimport FriendButton from \"../../../reusable_components/buttons/FriendButton\";\r\n\r\n/**\r\n * Component that is used for the search results page and returns a card of the users in the results\r\n */\r\nfunction UserCard(props) {\r\n    const userId = props.userID;\r\n    const {outgoing, incoming} = props.userRelations;\r\n    const [otherUser, setOtherUser] = useState({});\r\n    const [state, setState] = useState({\r\n        name: '',\r\n        pic: '',\r\n        friend: false,\r\n        requested: false\r\n    });\r\n\r\n    // get info for the state\r\n    useEffect(() => {\r\n        usersService.get(userId).then((resp) => {\r\n            setState(prevState => (\r\n                {\r\n                    ...prevState,\r\n                    name: resp.name,\r\n                    pic: resp.profile_pic\r\n                }))\r\n            setOtherUser(resp);\r\n        }).catch((err)=>{console.log(\"Issue getting user info!\", err)});\r\n\r\n    }, [userId, state.friend, state.requested])\r\n\r\n    // useEffect(() => {\r\n    //     console.log(\"otherUser Updated\")\r\n    // },[otherUser]);\r\n\r\n    return (\r\n        <div className={'d-flex justify-content-center m-2 p-2 align-items-center'} id=\"userCard\">\r\n            <Container className={'d-flex justify-content-center align-items-center h-100 w-100'}>\r\n                <Row className={\"d-flex justify-content-center align-items-center w-100 h-100\"}>\r\n                    <Col className={'d-flex'}>\r\n                        <img src={state.pic} alt=\"Profile Pic\" id={'profilePicture'}/>\r\n                    </Col>\r\n                    <Col className={'d-flex flex-column align-items-center'} xs={5} id={\"bio\"}>\r\n                        <h3><Link className={'black-link'} to={`/account/${userId}`}>{state.name}</Link></h3>\r\n                        <p>{state.bio}</p>\r\n                    </Col>\r\n                    <Col className={'d-flex justify-content-end'}>\r\n                        <FriendButton otherUser={otherUser} outgoing={outgoing} incoming={incoming}/>\r\n                    </Col>\r\n                </Row>\r\n            </Container>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default UserCard;","import {useUser} from \"../../utils/UserContext\";\r\nimport React, {useState, useEffect} from 'react';\r\nimport \"../../App.css\";\r\nimport {useParams} from 'react-router-dom';\r\nimport {userRelationshipsService, usersService} from '../../utils/ServerConnection';\r\nimport UserCard from \"./components/UserCard\";\r\nimport \"./SearchResults.css\";\r\nimport {faSortAlphaDown, faSortAlphaUp} from \"@fortawesome/free-solid-svg-icons\";\r\nimport {FontAwesomeIcon} from \"@fortawesome/react-fontawesome\";\r\n\r\n/**\r\n * Page that displays search results\r\n */\r\nfunction SearchResults() {\r\n    // gets the search query from URL\r\n    const search = useParams();\r\n    // currently logged in user\r\n    const {user} = useUser();\r\n    const [results, setResults] = useState([]);\r\n    const [isLoading, setLoading] = useState(true);\r\n    // stores current friends list of the user\r\n    const [outgoingList, setOutgoingList] = useState();\r\n    const [incomingList, setIncomingList] = useState();\r\n\r\n    // Currently using a useEffect to load in search results\r\n    useEffect(() => {\r\n        setLoading(true);\r\n        const searchInput = search.id.trim();\r\n        userRelationshipsService.find({\r\n            // query: {\r\n            //     $select: ['otherUserId', 'type'],\r\n            //     userId: {$eq: user.id}\r\n            // }\r\n            query: {\r\n                $select: ['userId', 'otherUserId', 'type'],\r\n                $or: [\r\n                    {userId: user.id},\r\n                    {otherUserId: user.id}\r\n                ]\r\n            }\r\n        }).then((friends) => {\r\n            //if sender (userId) === user.id is us then it is outgoing\r\n            // if receiver is us then it is incoming (otherUserId === user.id)\r\n            console.log(\"FRIENDS\", friends);\r\n            let outgoing = {};\r\n            let incoming = {};\r\n            friends.data.forEach((entry) => {\r\n                if (entry.userId === user.id) {\r\n                    outgoing[entry.otherUserId] = entry.type;\r\n                } else if (entry.otherUserId === user.id) {\r\n                    incoming[entry.userId] = entry.type;\r\n                }\r\n            });\r\n            setOutgoingList(outgoing);\r\n            setIncomingList(incoming);\r\n        }).catch((err) => {\r\n            console.log(\"Error accessing friends list\", err);\r\n        });\r\n\r\n\r\n        usersService.find({\r\n            query: {\r\n                $select: ['name', 'id'],\r\n                $sort: {\r\n                    name: 1\r\n                },\r\n                id: {$ne: user.id},\r\n                name: {$like: '%' + searchInput + '%'}\r\n            }\r\n        }).then((users) => {\r\n            setLoading(false);\r\n            if (users.data.length === 0) {\r\n                setResults([]);\r\n            } else {\r\n                setResults(users.data);\r\n            }\r\n        }).catch((err) => {\r\n            console.log(\"Error loading results\", err);\r\n        });\r\n    }, [search.id, user.id])\r\n\r\n    /*------------------------------------------------------SORTING-------------------------------------------------------*/\r\n\r\n    // this works functionally but will not make results re render\r\n    const [sort, setSort] = useState('ASC');\r\n    // A-Z sort icon, changes the icon displayed based on whether its in alphabetical or reverse alphabetical order\r\n    const [searchIcon, setIcon] = useState(faSortAlphaUp);\r\n\r\n    /**\r\n     * checks if the sorting request is ascending or descending order, and switches the icon displayed\r\n     */\r\n    const requestSort = () => {\r\n        if (sort === \"ASC\") {\r\n            setSort(\"DESC\");\r\n            setIcon(faSortAlphaUp)\r\n        } else {\r\n            setSort(\"ASC\");\r\n            setIcon(faSortAlphaDown);\r\n        }\r\n    }\r\n\r\n    // sorts results list alphabetically\r\n    useEffect(() => {\r\n        results.sort((a, b) => {\r\n            if (a.name < b.name) {\r\n                return sort === 'ASC' ? -1 : 1;\r\n            }\r\n            if (a.name > b.name) {\r\n                return sort === 'ASC' ? 1 : -1;\r\n            }\r\n            return 0;\r\n        });\r\n    }, [results, sort]);\r\n\r\n    /*----------------------------------------------------HTML------------------------------------------------------------*/\r\n\r\n    //TODO: current loading image may be copyrighted? Create our own wishwell themed loading image and/or\r\n    // find and ensure that a new loading image is not copyrighted\r\n    if (isLoading) {\r\n        return (\r\n            <div>\r\n                <div className={\"d-flex justify-content-center pt-5\"}>\r\n                    <div className={\"flex-column\"}>\r\n                        <img alt={'Loading'}\r\n                             src=\"https://digitalsynopsis.com/wp-content/uploads/2016/06/loading-animations-preloader-gifs-ui-ux-effects-18.gif\"/>\r\n                        <h2 className={\"text-center\"}>Loading...</h2>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    //no search results found\r\n    if (results.length === 0) {\r\n        return (\r\n            <div>\r\n                <div className=\"d-flex p-2 pb-0 mt-3 justify-content-center flex-column\" id=\"results\">\r\n                    <h3 id=\"searchResultsHeader\">No results were found for {search.id}.</h3>\r\n                    <h4 className={'align-self-center'}>Please try another search</h4>\r\n                </div>\r\n            </div>\r\n        )\r\n    } else {\r\n        return (\r\n            <div>\r\n                {/* GENERAL SEARCH LIST */}\r\n                <div className=\"d-flex p-2 justify-content-around pb-0 mt-3\" id=\"results\">\r\n                    <div className=\"align-self-end\">\r\n                        <div id=\"numberOfResults\">\r\n                            {results.length} result(s)\r\n                        </div>\r\n                    </div>\r\n                    <div>\r\n                        <h2 id=\"searchResultsHeader\">Search Results for: {search.id}</h2>\r\n                    </div>\r\n                    <div className=\"align-self-end p-2\">\r\n                        <button\r\n                            onClick={requestSort}\r\n                        ><FontAwesomeIcon icon={searchIcon}/></button>\r\n                    </div>\r\n                </div>\r\n\r\n                {/* LOAD USERS FROM SEARCH */}\r\n                <div className={\"container justify-content-center align-items-center\"}>\r\n                    <div className=\"col justify-content-center justify-items-center\">\r\n                        {results.map((user) => {\r\n                            return (<UserCard userID={user.id} userRelations={{'outgoing': outgoingList, 'incoming': incomingList}} key={user.id}/>)\r\n                        })\r\n                        }\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default SearchResults;","export default __webpack_public_path__ + \"static/media/wish.ac843f95.png\";","import React from 'react';\r\nimport './EventButton.css'\r\nimport { useUser } from \"../../utils/UserContext\";\r\nimport { Link } from 'react-router-dom';\r\nimport {Button} from \"react-bootstrap\";\r\n\r\n/**\r\n * This is a functional component that allows the user to add an event-large.\r\n * We use this in header and other pages.\r\n * @returns {JSX.Element}\r\n * @constructor\r\n */\r\nfunction EventButton(){\r\n    const {user} = useUser();\r\n\r\n\r\n    /**\r\n     * This is part of the constructor of the event-large button\r\n     */\r\n    if(user){\r\n        //If the user is logged in have a button that allows you to add a button\r\n        return(\r\n            //Sends you to the /AddEvent link of the web page\r\n            <Link to={'/AddEvent'}>\r\n                <Button id={'addAnEventId'}>Add an Event</Button>\r\n            </Link>\r\n        )\r\n    } else {\r\n        return (\r\n            <></>\r\n        )\r\n    }\r\n}\r\n\r\nexport default EventButton;\r\n","import React, {useEffect} from \"react\";\r\nimport {notifyService, userRelationshipsService} from \"../../../../utils/ServerConnection\";\r\nimport {Button, Dropdown} from \"react-bootstrap\";\r\nimport {Link} from \"react-router-dom\";\r\n\r\n/**\r\n * Notification subcomponent in the notification drop down subcomponent.\r\n *\r\n * @param props notification, index, notifications, setNotifications, removeNotificationsRef\r\n * @returns {JSX.Element} Notification Drop Down Subcomponent\r\n */\r\nconst Notification = (props) => {\r\n\r\n    useEffect(() => {\r\n        /*\r\n         * Force rerender when any props change, i.e. remove notification if modified or update if a different\r\n         * notification took its place\r\n         */\r\n    }, [props])\r\n\r\n    /**\r\n     * Method for handling accepting a friend request\r\n     *\r\n     * @param itemNum the index of the notification in the notification state\r\n     * @param item the notification from the notification state in header\r\n     */\r\n    const handleAdd = async (itemNum, item) => {\r\n        try {\r\n            await userRelationshipsService.patch(null, {type: 'friends'}, {\r\n                query: {\r\n                    userId: item.senderData.id,\r\n                    otherUserId: item.notificationData.receiver,\r\n                    type: 'friend-request'\r\n                }\r\n            })\r\n            await userRelationshipsService.create({\r\n                userId: item.notificationData.receiver,\r\n                otherUserId: item.senderData.id,\r\n                type: 'friends'\r\n            })\r\n            await notifyService.create({\r\n                sender: item.notificationData.receiver,\r\n                receiver: item.senderData.id,\r\n                type: 'accepted-friend-request'\r\n            })\r\n            // If all requests succeed remove notification\r\n            removeNotification(item.notificationData.id, itemNum)\r\n        } catch (err) {\r\n            console.log('(Header Notification) Issue accepting friend request', err)\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Method meant for handling declining a friend-request\r\n     *\r\n     * @param itemNum the item number from the notification state\r\n     * @param item the item from the notification state\r\n     */\r\n    const handleDecline = (itemNum, item) => {\r\n        userRelationshipsService.remove(null, {\r\n            query: {\r\n                userId: item.senderData.id,\r\n                otherUserId: item.notificationData.receiver,\r\n                type: 'friend-request'\r\n            }\r\n        }).then(() => {\r\n            removeNotification(item.notificationData.id, itemNum)\r\n        }).catch((err) => {\r\n            console.log(\"Error occurred when removing relationship when declined\", err);\r\n        })\r\n    }\r\n\r\n    /**\r\n     * Method for removing the notification from the state and front-end html\r\n     *\r\n     * @param notificationId ID of the notification ot remove\r\n     * @param itemNum the index of the notification to be removed in the state\r\n     */\r\n    const removeNotification = (notificationId, itemNum) => {\r\n        const leftHalf = props.notifications.slice(0, itemNum)\r\n        const rightHalf = props.notifications.slice(itemNum + 1)\r\n        props.removeNotificationsRef.current.push(notificationId);\r\n        // TODO: Removing a notification closes the drop down. This is needed to update the drop down when there\r\n        //  are no notifications, but we should find a way to keep it open for user experience purposes\r\n        props.setNotifications(leftHalf.concat(rightHalf))\r\n    }\r\n\r\n    /**\r\n     * Renders a notification message based on the type received from the server\r\n     *\r\n     * @param type 'friend-request' | 'accepted-friend-request'\r\n     * @returns {string} Message to be shown to the user\r\n     */\r\n    const notifyMessage = (type) => {\r\n        let message = 'default'\r\n        switch (type) {\r\n            case 'friend-request':\r\n                message = ' sent a friend request!'\r\n                break;\r\n            case 'accepted-friend-request':\r\n                message = ' accepted your friend request'\r\n                break;\r\n            default:\r\n                message = 'default'\r\n        }\r\n        return message;\r\n    }\r\n\r\n    // Notification sub-subcomponent return\r\n    return (<Dropdown.ItemText id={props.index}>\r\n        <div className={'notification-box'}>\r\n            <div className={'notification-box'} style={{gap: '0.75rem'}}>\r\n                <img src={props.notification.senderData.profile_pic}\r\n                     className={'mr-2'} style={{\r\n                    borderRadius: '50%',\r\n                    width: '50px',\r\n                    height: '50px',\r\n                    flexGrow: '1',\r\n                    objectFit: 'cover',\r\n                }} alt={\"profile pic\"}/>\r\n                <Link to={'/account/' + props.notification.notificationData.id}\r\n                      style={{textDecoration: 'none', color: 'black'}}>\r\n                    {props.notification.senderData.name}{notifyMessage(props.notification.notificationData.type)}\r\n                </Link>\r\n            </div>\r\n            {\r\n                props.notification.notificationData.type === 'friend-request'\r\n                    ?\r\n                    <div className={'notification-box'} style={{gap: '0.75rem'}}>\r\n                        <Button className={'notification-button'}\r\n                                onClick={() => handleAdd(props.index, props.notification).then()}\r\n                                style={{\r\n                                    backgroundColor: '#93e4f3',\r\n                                }}>Add</Button>\r\n                        <Button className={'notification-button'}\r\n                                onClick={() => handleDecline(props.index, props.notification)}\r\n                                style={{\r\n                                    backgroundColor: 'red',\r\n                                }}>Decline</Button>\r\n                    </div>\r\n                    :\r\n                    <div className={'notification-box'} style={{gap: '0.75rem'}}>\r\n                        <Button className={'notification-button'}\r\n                                onClick={() => removeNotification(props.notification.notificationData.id, props.index)}\r\n                                style={{\r\n                                    backgroundColor: '#93e4f3',\r\n                                }}>Close</Button>\r\n                    </div>\r\n            }\r\n        </div>\r\n    </Dropdown.ItemText>)\r\n}\r\n\r\nexport default Notification","import React, {useEffect} from \"react\";\r\nimport {Dropdown} from \"react-bootstrap\";\r\nimport DropdownToggle from \"react-bootstrap/DropdownToggle\";\r\nimport {FontAwesomeIcon} from \"@fortawesome/react-fontawesome\";\r\nimport {faBell, faCircle} from \"@fortawesome/free-solid-svg-icons\";\r\nimport DropdownMenu from \"react-bootstrap/DropdownMenu\";\r\nimport Notification from \"./components/Notification\";\r\n\r\n/**\r\n * This is the Notification Drop Down Component of the header. Handles rendering notifications.\r\n * Very, Very, Very big subcomponent. Dont get lost :)\r\n *\r\n * @param props notifications | setNotifications | removeNotificationsRef\r\n * @returns {JSX.Element} Header notification drop down subcomponent\r\n * @constructor\r\n */\r\nconst NotificationDropDown = (props) => {\r\n\r\n    useEffect(() => {\r\n        /*\r\n         * Force rerender when notification state updates on main component. updates display when\r\n         * notifications are acted upon\r\n         */\r\n    }, [props.notifications]);\r\n\r\n    // Notification Drop Down subcomponent return\r\n    return (<>\r\n        {props.notifications.length !== 0 ?\r\n            <Dropdown className={''} id='hasNotification'>\r\n                <DropdownToggle variant={'warning'} id={'bell-icon'}>\r\n                                <span>\r\n                                    <FontAwesomeIcon icon={faCircle} color={'red'}\r\n                                                     transform={'shrink-6 up-6 left-5'}/>\r\n                                    <FontAwesomeIcon icon={faBell} transform={'left-25'}/>\r\n                                </span>\r\n                </DropdownToggle>\r\n                <DropdownMenu id='dropdown'>\r\n                    {\r\n                        props.notifications.map((item, i) => {\r\n                            return <Notification\r\n                                key={item.notificationData.id}\r\n                                notification={item}\r\n                                index={i}\r\n                                notifications={props.notifications}\r\n                                setNotifications={props.setNotifications}\r\n                                removeNotificationsRef={props.removeNotificationsRef}\r\n                            />\r\n                        })\r\n                    }\r\n                </DropdownMenu>\r\n            </Dropdown>\r\n            :\r\n            <div>\r\n                <i id=\"privateinfo\"\r\n                   title={\"Notifications\"}\r\n                   className=\"fas fa-bell\"/>\r\n            </div>\r\n        }\r\n    </>)\r\n}\r\n\r\nexport default NotificationDropDown","import React, {useEffect, useState, useRef} from 'react'\r\nimport './Header.css'\r\nimport './components/search-bar/search.css'\r\nimport {useUser} from \"../utils/UserContext\";\r\nimport {Dropdown} from \"react-bootstrap\";\r\nimport GiftButton from \"../reusable_components/gift-related/GiftButton\";\r\nimport logo from '../assets/wish.png';\r\nimport {faUser} from \"@fortawesome/free-solid-svg-icons\";\r\nimport {FontAwesomeIcon} from \"@fortawesome/react-fontawesome\";\r\nimport EventButton from \"../reusable_components/event-related/EventButton\";\r\nimport {app, usersService, notifyService} from '../utils/ServerConnection'\r\nimport {Link, useHistory} from \"react-router-dom\";\r\nimport NotificationDropDown from \"./components/notification-dropdown/NotificationDropDown\";\r\n\r\n/**\r\n * This is the header that should be on top of the page on every page\r\n */\r\nfunction Header() {\r\n\r\n    const {user} = useUser();\r\n    //This acts as window.href.location, doesn't cause a full reload which makes things easier to work with\r\n    const history = useHistory();\r\n\r\n    const [searchInput, setSearchInput] = useState({\r\n        name: '',\r\n        dataList: null,\r\n    });\r\n\r\n    const [notification, setNotification] = useState([]);\r\n    //This contains a list of notification ids to remove\r\n    const removeNotificationsRef = useRef([]);\r\n\r\n    /**\r\n     * This runs whenever the user is changed and on mount\r\n     */\r\n    useEffect(() => {\r\n        // Verify the user is logged in\r\n        if (user) {\r\n            // Search for all friend requests the user has incoming\r\n            notifyService.find({\r\n                query: {\r\n                    receiver: user.id,\r\n                }\r\n            }).then(({data}) => {\r\n                //Reset the notifications to empty before grabbing them all again\r\n                setNotification([]);\r\n                // Gets actual users from the user id's queried earlier, then places them into the notification state\r\n                data.forEach((notification) => {\r\n                    usersService.get(notification.sender)\r\n                        .then((userData) => {\r\n                            setNotification(prevNotification => [...prevNotification, {\r\n                                //TODO: Make this have a read field and delete it on the backend\r\n                                notificationData: notification,\r\n                                senderData: userData\r\n                            }]);\r\n                        })\r\n                        .catch((err) => {\r\n                            console.log('Issue with getting notifications (uh oh spegetio)', err);\r\n                        });\r\n                })\r\n            }).catch((err) => {\r\n                console.log(err);\r\n            });\r\n        }\r\n    }, [user]);\r\n\r\n    /**\r\n     * When the notification state changes, remove any read notifications\r\n     */\r\n    useEffect(() => {\r\n        return () => {\r\n            if (removeNotificationsRef.current.length !== 0) {\r\n                notifyService.remove(null, {\r\n                    query: {\r\n                        // Does not reference a DOM element, so does not matter\r\n                        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n                        id: {$in: removeNotificationsRef.current}\r\n                    }\r\n                }).catch((err) => {\r\n                    console.log(\"Issue removing read notifications\", err)\r\n                })\r\n            }\r\n        };\r\n    }, [notification]);\r\n\r\n    /**\r\n     * Signs out the user when the sign out button is pressed\r\n     */\r\n    const handleSignOut = (e) => {\r\n        e.preventDefault();\r\n        app.logout(); // Calls feathers log out function\r\n        localStorage.clear(); // Clears access token from local\r\n        //TODO this causes a bug with removing notification (doesn't run demount code)\r\n        window.location.href = '/'; // Redirects to homepage\r\n    };\r\n\r\n    /**\r\n     * This function updates the SearchInput state value\r\n     *\r\n     * @param e Event that triggers a change in text has occurred\r\n     */\r\n    const handleSearch = (e) => {\r\n        let value = e.target.value;\r\n        setSearchInput(prevState => ({...prevState, name: {value}}));\r\n    };\r\n\r\n    /**\r\n     * Handles navigating to the search page when a user presses enter on the search bar\r\n     * @param e Event (pressing enter) that triggers the search\r\n     */\r\n    const searchSubmit = (e) => {\r\n        e.preventDefault();\r\n        history.push('/search=' + searchInput.name.value);\r\n    }\r\n\r\n    const handleClickRedirect = (path) => {\r\n        history.push(path);\r\n    }\r\n\r\n\r\n    //Header return\r\n    if (user) {\r\n        //Returns the header with all the account's information like funds, notification, and allow them to navigate the site.\r\n        return (\r\n            <div className={'header flex flex-space-between'}>\r\n                <div className={'logo-column'}>\r\n                    <Link to={\"/\"}>\r\n                        <img className={'logo'} src={logo} alt=\"logo\"/>\r\n                    </Link>\r\n                </div>\r\n\r\n                <div className={'flex flex-center flex-gap'}>\r\n                    <GiftButton/>\r\n                    <EventButton/>\r\n                    <span className={\"formatLine\"}>\r\n                                <Link className='test' to={'/about'}>\r\n                                <i id=\"privateinfo\"\r\n                                   title={\"About Us\"}\r\n                                   className=\"fas fa-book-open\" style={{color: 'black'}}/>\r\n                                </Link>\r\n                        </span>\r\n                    <NotificationDropDown\r\n                        notifications={notification}\r\n                        setNotifications={setNotification}\r\n                        removeNotificationsRef={removeNotificationsRef}\r\n                    />\r\n                    <Dropdown id=\"dropdown\" className={'mr-1'}>\r\n                        <Dropdown.Toggle variant={'warning'} id={'info-icon'}>\r\n                            <FontAwesomeIcon icon={faUser}/>\r\n                        </Dropdown.Toggle>\r\n                        <Dropdown.Menu className={'textFont'}>\r\n                            <Dropdown.Item onClick={() => handleClickRedirect('/account/' + user.id)}>View Profile</Dropdown.Item>\r\n                            {/*TODO: REMOVE/UPDATE ADD FUNDS BUTTON. This is causing an error everytime the dropdown is\r\n                                opened. Left it uncommented out to remind us to delete/update. jon 4/8/2022*/}\r\n                            {/*<Dropdown.Item><AddFundsButton/></Dropdown.Item>*/}\r\n                            {/*<Dropdown.Item href={'/settings'}>Settings</Dropdown.Item>*/}\r\n                            <Dropdown.Item onClick={() => handleClickRedirect('/settings')}>Settings</Dropdown.Item>\r\n                            <Dropdown.Item onClick={handleSignOut}>Sign Out</Dropdown.Item>\r\n                        </Dropdown.Menu>\r\n                    </Dropdown>\r\n                    <form className=\"search-box\" onSubmit={searchSubmit}>\r\n                        <input type=\"text\" placeholder=\"Search for People on Wishwell\" onChange={handleSearch}/>\r\n                        <button type='reset'/>\r\n                    </form>\r\n                </div>\r\n            </div>\r\n        )\r\n    } else {\r\n        //If the user is not logged in then show a header that makes it easy for them to sign up and doesn't allow them to navigate the site.\r\n        return (\r\n            <div className={'header flex flex-space-between'}>\r\n                <div className={'logo-column'}>\r\n                    <Link to={\"/\"}>\r\n                        <img className={'logo'} src={logo} alt=\"logo\"/>\r\n                    </Link>\r\n                </div>\r\n                <div className={'flex flex-center flex-gap'}>\r\n                    <Link to={'/about'} id={'aboutRef'} className={'mr-3'}>About Us</Link>\r\n                    <Link to={'/login'} id={'logInRef'} className={'mr-3'}>Sign in</Link>\r\n                    <Link to={'/signup'} className={\"shadow-sm btn\"} id={'signup-button'}>Sign Up</Link>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Header;\r\n","import React from 'react';\r\nimport { BrowserRouter as Router, Switch, Route} from \"react-router-dom\";\r\nimport './App.css';\r\nimport SignUpForm from \"./pages/signup/SignUpForm\";\r\nimport Home from \"./pages/home/Home\";\r\nimport Login from \"./pages/login/Login\";\r\nimport PrivateRoute from \"./utils/PrivateRoute\";\r\nimport Account from \"./pages/account/Account\";\r\nimport Gift from \"./pages/gift/Gift\";\r\nimport Event from \"./pages/event-large/Event\";\r\nimport AllEvents from \"./pages/all-events/Events\";\r\nimport ScrollToTop from \"./utils/ScrollToTop\";\r\nimport AddGift from \"./pages/create-gift/AddGift\";\r\nimport Settings from \"./pages/settings/Settings\";\r\nimport TermsAndConditions from \"./pages/signup/TermsAndConditions\";\r\nimport About from \"./pages/about/About\";\r\nimport AddEvent from \"./pages/create-event/AddEvent\";\r\nimport SearchResults from './pages/search-results/SearchResults';\r\nimport Header from './header/Header'\r\nimport {ToastContainer} from \"react-toastify\";\r\n\r\n\r\nfunction App() {\r\n\r\n\r\n  return (\r\n          <Router>\r\n              <ScrollToTop/>\r\n              <Header/>\r\n              <div className=\"App\" style={{width: \"100%\", height:\"100%\"}}>\r\n                  <Switch>\r\n                      <Route exact path={\"/signup\"} component={SignUpForm}/>\r\n                      <Route exact path={\"/\"} component={Home}/>\r\n                      <Route exact path={\"/about\"} component={About}/>\r\n                      <Route exact path={\"/login\"} component={Login}/>\r\n                      <Route exact path={\"/terms\"} component={TermsAndConditions}/>\r\n                      <PrivateRoute exact path={\"/account/:id\"} component={Account}/>\r\n                      <PrivateRoute exact path ={\"/gifts/:id\"} component={Gift}/>\r\n                      <PrivateRoute exact path ={\"/event/:id\"} component={Event}/>\r\n                      <PrivateRoute exact path ={\"/events\"} component={AllEvents}/>\r\n                      <PrivateRoute exact path={\"/addGift\"} component={AddGift}/>\r\n                      <PrivateRoute exact path={\"/addEvent\"} component={AddEvent}/>\r\n                      <PrivateRoute exact path={\"/settings\"} component={Settings}/>\r\n                      <PrivateRoute exact path={\"/search=:id\"} component={SearchResults}/>\r\n                  </Switch>\r\n              </div>\r\n              <ToastContainer\r\n                  position=\"bottom-left\"\r\n                  autoClose={1000}\r\n                  hideProgressBar={false}\r\n                  newestOnTop={false}\r\n                  closeOnClick\r\n                  rtl={false}\r\n                  pauseOnFocusLoss\r\n                  draggable\r\n              />\r\n          </Router>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './utils/ReportWebVitals';\r\nimport { UsersProvider } from \"./utils/UserContext\";\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n      <UsersProvider>\r\n          <App />\r\n      </UsersProvider>\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}
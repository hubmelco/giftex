{"version":3,"sources":["utils/UserContext.js","components/buttons/PayPal.js","components/buttons/AddFundsButton.js","components/buttons/GiftButton.js","assets/wish.png","components/buttons/EventButton.js","utils/ServerConnection.js","components/header/Header.js","components/buttons/GoogleButton.js","pages/signup/SignUpForm.js","components/gifts/GiftSM.js","assets/well.png","pages/home/Home.js","pages/testClient.js","pages/login/LogIn.js","utils/PrivateRoute.js","components/FriendSnippet.js","components/gifts/GiftPro.js","components/events/EventSM.js","components/account/AccountComp.js","pages/account/Account.js","components/gifts/Comment.js","components/gifts/GiftLG.js","pages/gift/Gift.js","pages/gift/SearchGift.js","components/ScrollToTop.js","components/loading/Loading.js","pages/gift/AddGift.js","pages/settings/Settings.js","pages/signup/TermsAndConditions.js","pages/about/About.js","pages/event/AddEvent.js","components/userCard/UserCard.js","pages/searchResults/SearchResults.js","App.js","utils/ReportWebVitals.js","index.js"],"names":["UserContext","createContext","PayPal","user","useContext","useState","buttonDisabled","setButtonDisabled","amount","error","contributionInput","setContributionInput","isInvalidForm","className","InputGroup","Prepend","Text","FormControl","onChange","e","document","getElementById","innerHTML","value","target","prevState","handleChange","Append","Button","disabled","onClick","preventDefault","validAmount","test","window","paypal","render","style","layout","funding","allowed","FUNDING","CARD","disallowed","CREDIT","env","payment","data","actions","request","post","headers","authorization","then","res","console","log","id","onAuthorize","paymentID","payerID","variant","AddFundsButton","show","setShow","handleClose","width","height","margin","Modal","onHide","Header","closeButton","Title","Body","Footer","GiftButton","useEffect","to","EventButton","feathers","require","socket","io","app","configure","socketio","timeout","authentication","storage","localStorage","usersService","service","eventsService","giftsService","userRelationshipsService","setUser","name","dataList","searchInput","setSearchInput","priv","gift_name","receiving_email","gift_price","gift_image","gift_description","gift_url","funds","isValid","menuModal","state","notification","setNotification","reAuthenticate","find","query","otherUserId","$or","arr","forEach","userRelationship","get","userId","userData","push","catch","err","length","$select","$sort","$ne","$like","users","handleSearch","addClick","otherId","myId","resp","patch","type","create","history","useHistory","handleClickRedirect","path","href","class","src","logo","alt","title","color","Dropdown","DropdownToggle","icon","faCircle","transform","faBell","DropdownMenu","map","item","i","ItemText","gap","borderRadius","flexGrow","objectFit","textDecoration","backgroundColor","Toggle","faUser","Menu","Item","logout","clear","location","onSubmit","placeholder","GoogleLogIn","clientId","buttenText","scope","onSuccess","onFailure","cookiePolicy","isSignedIn","SignUpForm","termsChecked","setTermCheck","privChecked","setPrivCheck","email","dob","password","confirmPassword","errors","setState","match","split","Date","getFullYear","handleSubmitClick","a","validForm","privateAccount","payload","private","terms","Container","Card","Form","Group","controlId","size","Label","Control","required","Row","Col","Check","label","ListGroup","GoogleButton","GiftSM","props","userFunds","pathname","gift","Img","thumbnail","progress","price","ProgressBar","striped","animated","now","receiverId","receiverName","block","htmlFor","parseInt","getItem","giftID","config","Home","isLoggedIn","isLoading","giftData","gifts","modalIsOpen","GiftHome","responsive","largeDesktop","breakpoint","max","min","items","slidesToSlide","desktop","tablet","mobile","renderButtonGroupOutside","swipeable","draggable","showDots","ssr","infinite","containerClass","TestClient","authTokens","setAuthTokens","loginDevice","loginRequestBre","login","axios","response","success","setItem","token","searchRequest0","searchRequest1","receivingName","searchRequest2","maxPrice","searchRequest3","minPrice","searchRequest4","searchRequest5","remainingFunds","searchRequest6","description","searchRequest7","minDate","searchRequest8","maxDate","searchRequest9","link","searchRequest10","LogIn","strategy","authenticate","display","justifyContent","alignItems","PrivateRoute","Component","component","rest","FriendSnippet","pic","this","concat","marginRight","border","React","GiftPro","open","setOpen","show2","setShow2","handleClose2","eventID","md","Image","OverlayTrigger","trigger","placement","onToggle","overlay","Popover","as","Content","remove","toast","faTrash","position","autoClose","hideProgressBar","newestOnTop","closeOnClick","rtl","pauseOnFocusLoss","pauseOnHover","eventId","EventSM","useParams","bio","friend","requested","giftState","setGiftState","grabProfileInfo","grabGifts","$eq","event","privacy","end_date","withRouter","activityState","eventState","setEventState","friendState","setFriendState","grabActivity","grabEvents","events","grabFriends","friends","friendData","key","friendButton","otherUser","background","ID","otherName","giftName","val","otherEmail","Comment","timeAgo","setTimeAgo","convertToTimeSince","date","seconds","Math","floor","interval","years","months","days","hours","minutes","rounded","comment","GiftLG","giftInfo","setGiftInfo","userInfo","setUserInfo","creatorInfo","setCreatorInfo","receiverInfo","setReceiverInfo","giftComments","commentInput","setCommentInput","receiverData","isInvalidComment","Number","prototype","padLeft","base","chr","len","String","Array","join","getCurrentDatetime","d","getMonth","getDate","getHours","getMinutes","getSeconds","process","status","reload","emailjs","templateParams","to_email","to_name","reply_to","message","text","profile_pic","handleCommentChange","rows","datetime","handleAddComment","Gift","SearchGift","sort","deadline","req","ScrollToTop","useLocation","scrollTo","Loading","AddGift","amazonUrl","addGift","setAddGift","nameError","descriptionError","priceError","linkError","thumbnailError","emailError","setErrors","hasAmazonProductData","setHasAmazonProductData","setLoading","hasNameError","hasDescriptionError","hasPriceError","hasEmailError","hasLinkError","hasThumbnailError","handlePrivateChecked","handleAddGift","receiver","getAmazonProductData","url","productData","productTitle","image","productDescription","handlePriceChange","round","Tabs","fill","defaultActiveKey","Tab","eventKey","fluid","renderAmazonProductInfo","Settings","checked","setCheck","handlePrivate","model","mode","saveButton","content","cssClass","cancelButton","TermsAndConditions","About","AddEvent","addEvent","setAddEvent","handleAddEvent","UserCard","userID","xs","SearchResults","results","setResults","search","trim","setSort","faFilter","searchIcon","setIcon","sortedResults","useMemo","sortableResults","b","faSortAlphaUp","faSortAlphaDown","App","Provider","createBrowserHistory","exact","Account","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode"],"mappings":"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","file":"static/js/main.49e896bf.chunk.js","sourcesContent":["//This is used to store the user data when they log in (react hook: useContext) - Jon\r\n// This used to be Auth.js\r\nimport { createContext } from 'react';\r\n\r\nexport const UserContext = createContext(null);","import React, {useState, useContext} from \"react\";\r\nimport {FormControl, InputGroup, Button} from \"react-bootstrap\";\r\nimport { UserContext } from \"../../utils/UserContext\";\r\n\r\n\r\nfunction PayPal() {\r\n\r\n    const {user} = useContext(UserContext);\r\n\r\n    const [buttonDisabled, setButtonDisabled] = useState(false);\r\n    const [contributionInput, setContributionInput] = useState({\r\n        amount: '',\r\n        error: ''\r\n    });\r\n\r\n    const renderPaypal = (e) => {\r\n        e.preventDefault();\r\n\r\n        //Invalid price (entering letters, more than 2 digits for cents)\r\n        const expression = /^\\d+(\\.\\d{1,2})?$/;\r\n        let validAmount = expression.test(contributionInput.amount);\r\n\r\n        // Form validation\r\n        if(contributionInput.amount === ''){\r\n            setContributionInput(prevState => ({...prevState, error: 'Must enter an amount'}))\r\n        } else if(!validAmount){\r\n            setContributionInput(prevState => ({...prevState, error: 'Must enter a valid dollar amount'}))\r\n            // Dollar amount is verified, deposit funds\r\n        } else {\r\n            window.paypal.Button.render({\r\n                style: {\r\n                    layout: 'vertical',\r\n                },\r\n                funding: {\r\n                    allowed: [ window.paypal.FUNDING.CARD ],\r\n                    disallowed: [ window.paypal.FUNDING.CREDIT ]\r\n                },\r\n                env: 'sandbox',\r\n                payment: function(data, actions){\r\n                    // Contact server to handle transaction\r\n                    return actions.request.post('http://localhost:3001/paypal/create-payment', {\r\n                        amount: contributionInput.amount\r\n                    }, {headers: {authorization: \"BEARER \" + user}})\r\n                        .then(function(res) {\r\n                            // 3. Return res.id from the response\r\n                            console.log(res);\r\n                            return res.id;\r\n                        });\r\n                },\r\n                onAuthorize: function(data, actions) {\r\n                    // Contact server to handle transaction\r\n                    return actions.request.post('http://localhost:3001/paypal/execute-payment', {\r\n                        paymentID: data.paymentID,\r\n                        payerID: data.payerID,\r\n                        amount: contributionInput.amount\r\n                    }, {headers: {authorization: \"BEARER \" + user}})\r\n                        .then(function (res) {\r\n                            console.log(res)\r\n                        });\r\n                }\r\n            }, '#paypal');\r\n            setButtonDisabled(true);\r\n        }\r\n    };\r\n\r\n    // Checks if the form is valid\r\n    const isInvalidForm = () => {\r\n        return contributionInput.error !== '';\r\n    };\r\n\r\n    const handleChange = (e) => {\r\n        document.getElementById(\"paypal\").innerHTML = \"\";\r\n        setButtonDisabled(false);\r\n        const value = e.target.value;\r\n        setContributionInput(prevState => ({...prevState, error: ''}));\r\n        setContributionInput(prevState => ({...prevState, amount: value}))\r\n    };\r\n\r\n    return (\r\n        <div className={'paypal-container'}>\r\n            <div>\r\n                <InputGroup className={'w-100'}>\r\n                    <InputGroup.Prepend>\r\n                        <InputGroup.Text>$</InputGroup.Text>\r\n                    </InputGroup.Prepend>\r\n                    <FormControl className={isInvalidForm() ? 'is-invalid' : ''} aria-label=\"Amount (to the nearest dollar)\" onChange={(e) => handleChange(e)}/>\r\n                    <InputGroup.Append>\r\n                        <Button disabled={buttonDisabled} onClick={renderPaypal} variant=\"outline-secondary\">Next</Button>\r\n                    </InputGroup.Append>\r\n                </InputGroup>\r\n                <div className={isInvalidForm() ? 'form-error-message' : 'hidden'}>{contributionInput.error}</div>\r\n            </div>\r\n            <div className={'paypal-buttons'}>\r\n                <div id={'paypal'}></div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default PayPal;\r\n\r\n\r\n\r\n\r\n","import React, {useState, useContext} from \"react\";\r\nimport {UserContext} from \"../../utils/UserContext\";\r\nimport axios from \"axios\";\r\nimport {Button, Modal} from \"react-bootstrap\";\r\n// import {PayPalButton} from \"react-paypal-button-v2\";\r\nimport PayPal from \"./PayPal\";\r\n\r\nfunction AddFundsButton() {\r\n\r\n    const {user} = useContext(UserContext);\r\n\r\n    const [show, setShow] = useState(false);\r\n\r\n    //The state values for the account page\r\n    const [state, setState] = useState({\r\n        amount: 1.00,\r\n\r\n    });\r\n\r\n\r\n\r\n    //Handles when the input is changed to make sure it is a valid currency\r\n\r\n\r\n\r\n    //Handles when money is added to an account.\r\n    //Sending a post to our server to update funds on the account\r\n    const handleModalButtonClickFunds = () => {\r\n        const payload = {\r\n            login: localStorage.getItem('email'),\r\n            loginDevice: localStorage.getItem('loginDevice'),\r\n            amount: state.amount * 100,\r\n        };\r\n        //Add addWallet axios\r\n        axios.post(process.env.REACT_APP_HOSTNAME + '/addWalletFunds', payload, {headers: {authorization: \"BEARER \" + user}})\r\n            .then(function (response) {\r\n                console.log(response);\r\n                //window.location.href = 'http://localhost:3000/accountTest'\r\n            }).catch(function (err) {\r\n            console.log(err);\r\n        });\r\n        handleClose();\r\n    };\r\n\r\n    const handleClose = () => {\r\n        setShow(false)\r\n    };\r\n    const handleShow = () => {\r\n        console.log(show);\r\n        setShow(true);\r\n    };\r\n\r\n\r\n    return <div><a id='addFunds' onClick={handleShow} style={{width: \"120px\", height: \"35px\", margin: \"0\"}}>Add Account\r\n        Funds</a>\r\n\r\n        <Modal show={show} onHide={handleClose}>\r\n            <Modal.Header closeButton>\r\n                <Modal.Title>Adding Funds</Modal.Title>\r\n            </Modal.Header>\r\n            <Modal.Body>\r\n                    <PayPal/>\r\n                {/*<PayPal/>*/}\r\n            </Modal.Body>\r\n            <Modal.Footer>\r\n                <Button variant=\"secondary\" onClick={handleClose}>\r\n                    Close\r\n                </Button>\r\n                {/*<div>*/}\r\n                    {/*<PayPalButton*/}\r\n                    {/*    id=\"paypalButton\"*/}\r\n                    {/*    clientId=\"AYNVwNMXHj6ajaXiU-R7AQma7pJfNURhQu-fOuMBRwC3FUXzh0M5gjQPM_sB2jxnWivXTTIa-_1lU0mp\"*/}\r\n                    {/*    amount={state.amount}*/}\r\n                    {/*    // shippingPreference=\"NO_SHIPPING\" // default is \"GET_FROM_FILE\"*/}\r\n                    {/*    onSuccess={(details, data) => {*/}\r\n                    {/*        alert(\"Transaction completed by \" + localStorage.getItem(\"email\"));*/}\r\n                    {/*        handleModalButtonClickFunds()*/}\r\n                    {/*        // OPTIONAL: Call your server to save the transaction*/}\r\n                    {/*        return fetch(\"/paypal-transaction-complete\", {*/}\r\n                    {/*            method: \"post\",*/}\r\n                    {/*            body: JSON.stringify({*/}\r\n                    {/*                orderID: data.orderID*/}\r\n                    {/*            })*/}\r\n                    {/*        });*/}\r\n                    {/*    }}*/}\r\n                    {/*    onFailure={(details, data) => {*/}\r\n                    {/*        alert(\"The amount entered was not valid try again. Format: x.xx\")*/}\r\n                    {/*    }}*/}\r\n                    {/*/>*/}\r\n                {/*</div>*/}\r\n            </Modal.Footer>\r\n        </Modal>\r\n    </div>\r\n}\r\n\r\nexport default AddFundsButton;\r\n","import React, { useState , useEffect, useContext} from 'react';\r\nimport { UserContext } from \"../../utils/UserContext\";\r\nimport { Link } from 'react-router-dom';\r\nimport {Button} from \"react-bootstrap\";\r\n\r\n/**\r\n * This is a functional component that allows the user to add a gift.\r\n * We use this in header and other pages.\r\n * @returns {JSX.Element}\r\n * @constructor\r\n */\r\nfunction GiftButton(){\r\n    const {user} = useContext(UserContext)\r\n\r\n    /**\r\n     * Use effect will continuously run and\r\n     * you can add a dependency to the use effect\r\n     * to only run certain times.\r\n     */\r\n    useEffect(() => {\r\n\r\n    }, []);\r\n\r\n\r\n    /**\r\n     * This is part of the constructor of the gift button\r\n     */\r\n    if(user){\r\n        //If the user is logged in have a button that allows you to add a button\r\n        return(\r\n            //Sends you to the /AddGift link of the web page\r\n                <Link to={'/AddGift'}>\r\n                  <Button id={'addAGiftId'}>Add a Gift</Button>\r\n                </Link>\r\n        )\r\n    } else {\r\n        //If the user is not logged in have a button that will send them to the\r\n        // sign up page to allow them to get started.\r\n        return (\r\n            <Link to={'/signup'}>\r\n                <Button id={'getStartedId'}>Get Started</Button>\r\n            </Link>\r\n        )\r\n    }\r\n\r\n}\r\n\r\nexport default GiftButton;\r\n","export default __webpack_public_path__ + \"static/media/wish.ac843f95.png\";","import React, { useState , useEffect, useContext} from 'react';\r\nimport './EventButton.css'\r\nimport { UserContext } from \"../../utils/UserContext\";\r\nimport { Link } from 'react-router-dom';\r\nimport {Button} from \"react-bootstrap\";\r\n\r\n/**\r\n * This is a functional component that allows the user to add an event.\r\n * We use this in header and other pages.\r\n * @returns {JSX.Element}\r\n * @constructor\r\n */\r\nfunction EventButton(){\r\n    const {user} = useContext(UserContext)\r\n\r\n    /**\r\n     * Use effect will continuously run and\r\n     * you can add a dependency to the use effect\r\n     * to only run certain times.\r\n     */\r\n    useEffect(() => {\r\n\r\n    }, []);\r\n\r\n\r\n    /**\r\n     * This is part of the constructor of the event button\r\n     */\r\n    if(user){\r\n        //If the user is logged in have a button that allows you to add a button\r\n        return(\r\n            //Sends you to the /AddEvent link of the web page\r\n            <Link to={'/AddEvent'}>\r\n                <Button id={'addAnEventId'}>Add an Event</Button>\r\n            </Link>\r\n        )\r\n    } else {\r\n        return (\r\n            <div></div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default EventButton;\r\n","import io from 'socket.io-client';\r\n\r\nconst feathers = require('@feathersjs/client');\r\n\r\n// Socket.io is exposed as the `io` global.\r\nconst socket = io('http://localhost:3001');\r\n// @feathersjs/client is exposed as the `feathers` global.\r\n\r\nexport const app = feathers()\r\n    .configure(feathers.socketio(socket, {timeout: 15000}))\r\n    .configure(feathers.authentication({\r\n        storage: window.localStorage\r\n    }));\r\n\r\nexport const usersService = app.service('users');\r\nexport const eventsService = app.service('events');\r\nexport const giftsService = app.service('gifts');\r\nexport const userRelationshipsService = app.service('user-relationships');","import React, {useEffect, useState, useContext} from 'react'\r\nimport './Header.css'\r\nimport '../searchBar/search.css'\r\nimport {UserContext} from \"../../utils/UserContext\";\r\nimport {Card, Row, Dropdown, Col, Button} from \"react-bootstrap\";\r\nimport AddFundsButton from \"../buttons/AddFundsButton\";\r\nimport GiftButton from \"../buttons/GiftButton\";\r\nimport logo from '../../assets/wish.png';\r\nimport {faInfoCircle, faUser, faBell, faCircle, faSearch, faBookOpen} from \"@fortawesome/free-solid-svg-icons\";\r\nimport {FontAwesomeIcon} from \"@fortawesome/react-fontawesome\";\r\nimport DropdownToggle from \"react-bootstrap/DropdownToggle\";\r\nimport DropdownMenu from \"react-bootstrap/DropdownMenu\";\r\nimport EventButton from \"../buttons/EventButton\";\r\nimport {app, usersService, userRelationshipsService} from '../../utils/ServerConnection'\r\nimport {Link, useHistory} from \"react-router-dom\";\r\n\r\n/**\r\n * This is the header that is on top of the page on every page\r\n * @returns {JSX.Element}\r\n * @constructor\r\n */\r\nfunction Header() {\r\n\r\n    //This is all the states for the header.\r\n    const {user, setUser} = useContext(UserContext);\r\n    const [searchInput, setSearchInput] = useState({\r\n        name: '',\r\n        dataList: null,\r\n    });\r\n\r\n    const [searchType, setSearchType] = useState(true)\r\n\r\n    const [state, setState] = useState({\r\n        priv: 0,\r\n        gift_name: '',\r\n        receiving_email: '',\r\n        gift_price: '',\r\n        gift_image: '',\r\n        gift_description: '',\r\n        gift_url: '',\r\n        funds: 0.0,\r\n        isValid: true,\r\n        menuModal: false,\r\n    });\r\n\r\n\r\n    const [autoState, setAuto] = useState([]);\r\n\r\n    const [autoGiftState, setautoGift] = useState([]);\r\n\r\n    const [notification, setNotification] = useState(null)\r\n\r\n    /**\r\n     * This runs every time the searchInput state is changed and once right away.\r\n     */\r\n    useEffect(() => {\r\n        //TODO: Set up getting friend request notifications with new server\r\n        app.reAuthenticate()\r\n            .then(data => {\r\n                setUser(data.user);\r\n                userRelationshipsService.find({\r\n                    query: {\r\n                        otherUserId: user.id,\r\n                        //Add notifications as we make more, just append a different type as an object\r\n                        $or: [\r\n                            {'type': 'friend-request'}\r\n                        ]\r\n                    }\r\n                }).then(({data}) => {\r\n                    let arr = [];\r\n                    data.forEach((userRelationship) => {\r\n                        usersService.get(userRelationship.userId)\r\n                            .then((userData) => {\r\n                                arr.push(userData);\r\n                            })\r\n                            .catch((err) => {\r\n                                console.log('uh oh speghettio')\r\n                            });\r\n                    })\r\n                    setNotification(arr);\r\n                    console.log(notification);\r\n                }).catch((err) => {\r\n                    console.log(err);\r\n                });\r\n            })\r\n            .catch(err => {\r\n                console.log(\"Issue authenticating\", err)\r\n            });\r\n\r\n        /*\r\n        const req = {\r\n            login: localStorage.getItem('email'),\r\n        };\r\n\r\n        console.log(\"Hostname:\", process.env.REACT_APP_HOSTNAME)\r\n        //Gets all the incoming friend request to put in the notification part\r\n        axios.post(process.env.REACT_APP_HOSTNAME + '/getIncomingFriendRequests', req, {headers: {authorization: \"BEARER \" + authTokens}})\r\n            .then(function (response) {\r\n                setState(prevState => {\r\n                    return {...prevState, noti: response.data.length}\r\n                });\r\n                setNotification(response.data);\r\n            }).catch(function (err) {\r\n            console.log(err);\r\n        });\r\n\r\n         */\r\n        //TODO: Set up obtaining wallet funds from user with new server\r\n        /*\r\n        //Gets the user's available funds and displays it.\r\n        axios.post(process.env.REACT_APP_HOSTNAME + '/getWalletFunds', req, {headers: {authorization: \"BEARER \" + authTokens}})\r\n            .then(function (response) {\r\n                setState(prevState => {\r\n                    return {...prevState, funds: response.data.amount}\r\n                });\r\n            }).catch(function (err) {\r\n            console.log(err);\r\n        });\r\n         */\r\n\r\n        /*\r\n        CHANGE THIS TO NOT PULL EVERYTHING AT ONCE, IF WE HAVE 1,000,000 USERS... THIS WILL TAKE A LONG TIME\r\n        REFACTOR TO ONLY FILTER NAMES WHEN KEY PRESSES.\r\n         */\r\n        //TODO: (look at above comment) Need to get all public user names when user starts typing in search bar\r\n        /*\r\n        axios.post(process.env.REACT_APP_HOSTNAME + '/allNames', {}, {headers: {authorization: \"BEARER \" + authTokens}})\r\n            .then(function (response) {\r\n                let tmp = [];\r\n                response.data.map(function (item) {\r\n                    tmp.push(item.name.toLowerCase())\r\n                })\r\n                setAuto(tmp);\r\n            }).catch(function (err) {\r\n            console.log(err);\r\n        });\r\n         */\r\n\r\n\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n\r\n        if (searchInput.name.value && searchInput.name.value.length >= 3) {\r\n            usersService.find({\r\n                query: {\r\n                    $select: ['name', 'id'],\r\n                     $sort: {\r\n                         name: 1\r\n                    },\r\n                    id: {$ne: user.id},\r\n                    name: {$like: searchInput.name.value + '%'}\r\n                }\r\n            }).then((users) => {\r\n                console.log(users);\r\n            }).catch(() => {\r\n                setSearchInput(prevState => ({...prevState, 'dataList': null}))\r\n            });\r\n        }\r\n    }, [searchInput.name]);\r\n\r\n\r\n    //Signs out the user when the signout button is pressed\r\n    const handleSignOut = (e) => {\r\n        e.preventDefault();\r\n        setUser(null);\r\n        app.logout();\r\n        localStorage.clear();\r\n        window.location.href = '/';\r\n    };\r\n\r\n    /**\r\n     * This function updates the value for the name in SearchInput\r\n     * @param e\r\n     */\r\n    const handleSearch = (e) => {\r\n        let value = e.target.value;\r\n        setSearchInput(prevState => ({...prevState, name: {value}}));\r\n    };\r\n\r\n\r\n    /**\r\n     * Renders the list that the search bar shows and what\r\n     * the user can click or search for.\r\n     * @returns {JSX.Element}\r\n     */\r\n    const listRender = () => {\r\n        let type = '';\r\n        if (searchType) {\r\n            type = 'Person...'\r\n        } else {\r\n            type = 'Gift...'\r\n        }\r\n        //Check to see if it is empty, this it is then don't add autocomplete.\r\n        if (searchInput.name === '') {\r\n            return (\r\n                <div style={{width: '350px'}} className={'d-flex justify-content-center'}>\r\n                    <input autoComplete={'OFF'} list={'autoNames'} className={'form-control '} id={'header-search'}\r\n                           type={'text'}\r\n                           name={'search'}\r\n                           placeholder={'Search a ' + type}\r\n                           style={{width: '350px'}}\r\n                           onKeyPress={handleSearch}\r\n                           onChange={handleSearch}/>\r\n                </div>\r\n            )\r\n        } else if (searchType) {\r\n            //If the type is person then it renders the list with the accounts names.\r\n            return (\r\n                <div style={{width: '350px'}} className={'d-flex justify-content-center'}>\r\n                    <input list={'autoNames'} className={'form-control m-0'} id={'header-search'} type={'text'}\r\n                           name={'search'}\r\n                           placeholder={'Search a ' + type}\r\n                           onKeyPress={handleSearch}\r\n                           onChange={handleSearch}/>\r\n                    <datalist id=\"autoNames\">\r\n                        {autoState.map(function (item, i) {\r\n                            return <option value={item} key={i}/>\r\n                        })}\r\n                    </datalist>\r\n                </div>\r\n\r\n            )\r\n        } else {\r\n            //If the type is gift then it renders the list with the gift names.\r\n            return (\r\n                <div style={{width: '350px'}} className={'d-flex justify-content-center'}>\r\n                    <input list={'autoNames'} className={'form-control'} id={'header-search'} type={'text'}\r\n                           name={'search'}\r\n                           placeholder={'Search a ' + type}\r\n                           onKeyPress={handleSearch}\r\n                           onChange={handleSearch}\r\n                           autoComplete={'false'}\r\n                    />\r\n                    <datalist id=\"autoNames\">\r\n                        {autoGiftState.map(function (item, i) {\r\n                            return <option value={item} key={i}/>\r\n                        })}\r\n                    </datalist>\r\n                </div>\r\n            )\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Checks to see if there is an error.\r\n     * @returns {boolean}\r\n     */\r\n    const isInvalidForm = () => {\r\n        return searchInput.error !== '';\r\n    };\r\n\r\n    /**\r\n     * This runs when the user clicks accept or declined.\r\n     * This will either accept or decline the request.\r\n     * @param otherId\r\n     * @param myId\r\n     * @param resp\r\n     */\r\n    const addClick = (otherId, myId, resp) => {\r\n        //TODO THIS IS BROKEN, I couldn't figure out how to call user-relationships with a composite key,\r\n        // and since user-relations doesnt have a column 'id' in the database, you can't called any service functions\r\n        // that use it - Jonathan\r\n        //Handles the friend request either accept or deny\r\n        if (resp) {\r\n          userRelationshipsService.patch(null, { type: 'friends'}, {\r\n              query: {\r\n                  userId: otherId,\r\n                  otherUserId: myId,\r\n                  type: 'friend-request'\r\n              }\r\n          })\r\n              .then(() => {\r\n              userRelationshipsService.create({\r\n                  otherUserId: otherId,\r\n                  userId: myId,\r\n                  type: 'friends'\r\n              })\r\n                  .then(() => {\r\n                    console.log('FRIEND ADDED!!!');\r\n                  })\r\n                  .catch(() => {\r\n                      console.log('ERROR OCCURRED')\r\n                  });\r\n          })\r\n        } else {\r\n\r\n        }\r\n        //TODO: Implement accepting and/or denying a friend request in new server\r\n        /*\r\n        axios.post(process.env.REACT_APP_HOSTNAME + '/friendRequest', {\r\n            login: localStorage.getItem('email'),\r\n            email: email,\r\n            response: resp\r\n        }, {headers: {authorization: \"BEARER \" + authTokens}})\r\n            .then(function (response) {\r\n                if (response.data.status.toString() === \"ok, request accepted\") {\r\n                    window.location.reload();\r\n                } else {\r\n                    window.alert(\"Friend Request Denied!\")\r\n                    window.location.reload();\r\n                }\r\n            }).catch(function (err) {\r\n            console.log(err);\r\n        });\r\n\r\n         */\r\n    }\r\n\r\n    /**\r\n     * Renders all the notifications for the user. Right now it only does friend requests.\r\n     * @returns {JSX.Element}\r\n     */\r\n    const notificationRender = () => {\r\n        return (\r\n            <DropdownMenu>\r\n                {notification.map(function (item, i) {\r\n                    console.log(item);\r\n                    return (\r\n                        <Dropdown.ItemText>\r\n                            <div className={'notification-box'}>\r\n                                <div className={'notification-box'} style={{gap: '0.75rem'}}>\r\n                                    <img src={'https://pressgazette.co.uk/wp-content/uploads/2020/11/shutterstock.jpg'} className={'mr-2'} style={{\r\n                                        borderRadius: '50%',\r\n                                        width: '50px',\r\n                                        height: '50px',\r\n                                        flexGrow: '1',\r\n                                        objectFit: 'cover',\r\n                                    }} alt={item.name}/>\r\n                                    <Link to={'/account/' + item.id} style={{textDecoration:'none', color:'black'}}>{item.name}</Link>\r\n                                </div>\r\n                                <div className={'notification-box'} style={{gap:'0.75rem'}}>\r\n                                    <Button className={'notification-button'} onClick={() => addClick(item.id, user.id, true)} style={{\r\n                                        backgroundColor: '#93e4f3',\r\n                                    }}>Add</Button>\r\n                                    <Button className={'notification-button'} onClick={() => addClick(item.id, user.id, false)} style={{\r\n                                        backgroundColor: 'red',\r\n                                    }}>Decline</Button>\r\n                                </div>\r\n                            </div>\r\n                        </Dropdown.ItemText>\r\n                    )\r\n                })}\r\n            </DropdownMenu>\r\n        )\r\n    }\r\n\r\n    /**\r\n     * This renders the notification part of the header.\r\n     * Using the notificationRender() method.\r\n     * @returns {JSX.Element}\r\n     */\r\n    const dropDownRender = () => {\r\n        if (notification) {\r\n            //If the user has notifications\r\n            return (\r\n                <Dropdown className={''}>\r\n                    <DropdownToggle variant={'warning'} id={'bell-icon'}>\r\n                                <span>\r\n                                    <FontAwesomeIcon icon={faCircle} color={'red'}\r\n                                                     transform={'shrink-6 up-6 left-5'}/>\r\n                                    <FontAwesomeIcon icon={faBell} transform={'left-25'}/>\r\n                                </span>\r\n                    </DropdownToggle>\r\n                    {notificationRender()}\r\n                </Dropdown>)\r\n        } else {\r\n            //If the user doesn't have notification.\r\n            return (\r\n                <span>\r\n                                {/*<a className='test' href={'/about'}>*/}\r\n                    <i id=\"privateinfo\"\r\n                       title={\"Notifications\"}\r\n                       className=\"fas fa-bell\"/>\r\n                    {/*</a>*/}\r\n                        </span>\r\n            )\r\n        }\r\n    }\r\n\r\n    const history = useHistory();\r\n\r\n    const searchSubmit = (e) => {\r\n        e.preventDefault();\r\n        // window.location.href = '/search';\r\n        history.push('/search=' + searchInput.name.value);\r\n    }\r\n\r\n    function handleClickRedirect(path){\r\n        history.push(path);\r\n    }\r\n    //This is the render of the component\r\n    if (user) {\r\n        //Returns the header with all the account's information like funds, notification, and allow them to navigate the site.\r\n        return (\r\n            <div className={'header flex flex-space-between'}>\r\n                    <div className={'logo-column'}>\r\n                        <a href={\"/\"}>\r\n                            <img class={'logo'} src={logo} alt=\"logo\"/>\r\n                        </a>\r\n                    </div>\r\n\r\n                    {/* <Col className={'d-flex justify-content-center'}>\r\n                            <Dropdown>\r\n                                <DropdownToggle style={{\r\n                                    backgroundColor: '#dfe7ea',\r\n                                    color: 'black',\r\n                                    border: 'none',\r\n                                    borderColor: 'transparent'\r\n                                }}>{searchType ? 'Person' : 'Gift'}</DropdownToggle>\r\n                                <DropdownMenu>\r\n                                    <DropdownItem onSelect={() => {\r\n                                        searchType ? setSearchType(false) : setSearchType(true)\r\n                                    }}>{searchType ? 'Gift' : 'Person'}</DropdownItem>\r\n                                </DropdownMenu>\r\n                            </Dropdown>\r\n                            {listRender()}\r\n                            <a className={'px-2'} href={'/search-gift'}>\r\n                                <FontAwesomeIcon icon={faSearchPlus} style={{backgroundColor:'#93e4f3', color:'black'}} transform={'down-8'}/>\r\n                            </a>\r\n                            <div className={isInvalidForm() ? 'form-error-message' : 'hidden'}>{searchInput.error}</div>\r\n                    </Col> */}\r\n                    <div className={'flex flex-center flex-gap'}>\r\n                        <GiftButton/>\r\n                        <EventButton/>\r\n                        <span className={\"formatLine\"}>\r\n                                <Link className='test' to={'/about'}>\r\n                                <i id=\"privateinfo\"\r\n                                   title={\"About Us\"}\r\n                                   className=\"fas fa-book-open\" style={{color: 'black'}}/>\r\n                                </Link>\r\n                        </span>\r\n                        {dropDownRender()}\r\n                        <Dropdown id=\"dropdown\" className={'mr-1'}>\r\n                            <Dropdown.Toggle variant={'warning'} id={'info-icon'}>\r\n                                <FontAwesomeIcon icon={faUser}/>\r\n                            </Dropdown.Toggle>\r\n                            <Dropdown.Menu className={'textFont'}>\r\n                                {/* <Dropdown.ItemText>Notification: {state.noti}</Dropdown.ItemText> */}\r\n                                <Dropdown.Item  onClick={() => handleClickRedirect('/account/' + user.id)}>View Profile</Dropdown.Item>\r\n                                <Dropdown.ItemText>Funds: ${state.funds / 100}</Dropdown.ItemText>\r\n                                <Dropdown.Item><AddFundsButton/></Dropdown.Item>\r\n                                {/*<Dropdown.Item href={'/settings'}>Settings</Dropdown.Item>*/}\r\n                                <Dropdown.Item onClick={() => handleClickRedirect('/settings')}>Settings</Dropdown.Item>\r\n                                <Dropdown.Item onClick={handleSignOut}>Sign Out</Dropdown.Item>\r\n                            </Dropdown.Menu>\r\n                        </Dropdown>\r\n                        <form className=\"search-box\" onSubmit={searchSubmit}>\r\n                            <input type=\"text\" placeholder=\"Search for People on Wishwell\" onChange={handleSearch}/>\r\n                            <button type='reset'></button>\r\n                        </form>\r\n                    </div>\r\n            </div>\r\n        )\r\n    } else {\r\n        //If the user is not logged in then show a header that makes it easy for them to sign up and doesn't allow them to navigate the site.\r\n        return (\r\n            <div className={'header flex flex-space-between'}>\r\n                <div className={'logo-column'}>\r\n                    <Link to={\"/\"}><img className={'logo'} src={logo} alt=\"logo\"/></Link>\r\n                </div>\r\n                <div className={'flex flex-center flex-gap'}>\r\n                    <Link to={'/about'} id={'aboutRef'} className={'mr-3'}>About Us</Link>\r\n                    <Link to={'/login'} id={'logInRef'} className={'mr-3'}>Sign in</Link>\r\n                    <Link to={'/signup'} className={\"shadow-sm btn\"} id={'signup-button'}>Sign Up</Link>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Header;\r\n","import React from 'react';\r\nimport {GoogleLogin} from \"react-google-login\";\r\n\r\nconst clientID = \"226396248276-hg5hj7tr2fbhsiu55o5v75unhtl8ipo7.apps.googleusercontent.com\";\r\n\r\nfunction GoogleLogIn() {\r\n    const onSuccess = (res) => {\r\n        console.log(res);\r\n        // axios.get(`https://people.googleapis.com/v1/${res.googleId}`)\r\n        //     .then(function(res){\r\n        //         console.log(res);\r\n        //     })\r\n    }\r\n    const onFailure = (res) =>{\r\n        console.log(\"[Login failed] res: \", res)\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <GoogleLogin\r\n            clientId={clientID}\r\n            buttenText={\"Login\"}\r\n            scope = 'https://www.googleapis.com/auth/user.birthday.read'\r\n            onSuccess={onSuccess}\r\n            onFailure={onFailure}\r\n            cookiePolicy={'single_host_origin'}\r\n            isSignedIn={true}/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default GoogleLogIn;","import React, {useState} from 'react';\r\nimport axios from 'axios';\r\nimport Header from \"../../components/header/Header\";\r\nimport \"./SignUpForm.css\";\r\nimport GoogleButton from \"../../components/buttons/GoogleButton\"\r\n\r\nimport {Button, Form, Container, Col, Card, ListGroup} from 'react-bootstrap';\r\n\r\nimport { usersService } from '../../utils/ServerConnection'\r\n\r\nfunction SignUpForm() {\r\n    const [termsChecked, setTermCheck] = useState(false);\r\n    const [privChecked, setPrivCheck] = useState(false);\r\n\r\n    const handleTermCheck = () => {\r\n        state.errors.terms = !termsChecked ? \"\" : \"Please confirm terms and conditions have been read\";\r\n        setTermCheck(!termsChecked);\r\n    };\r\n    const handlePrivCheck = () => {\r\n        setPrivCheck(!privChecked);\r\n    };\r\n\r\n    const [state, setState] = useState({\r\n        name: \"\",\r\n        email: \"\",\r\n        dob: \"\",\r\n        password: \"\",\r\n        confirmPassword: \"\",\r\n        errors: []\r\n    });\r\n\r\n    const handleChange = (e) => {\r\n        const {name, value} = e.target\r\n        setState(prevState => ({\r\n            ...prevState,\r\n            [name]: value\r\n        }));\r\n        switch (e.target.name){\r\n            case \"confirmPassword\":\r\n                state.errors.confirmPassword = state.password === e.target.value ? \"\" : \"Passwords do not match\";\r\n                break;\r\n            case \"password\":\r\n                state.errors.confirmPassword = state.confirmPassword === e.target.value ? \"\" : \"Passwords do not match\";\r\n                break;\r\n            case \"dob\":\r\n                state.errors.dob = e.target.value.match(/\\d{4}-\\d{1,2}-\\d{1,2}/) && e.target.value.split(\"-\")[0] < new Date().getFullYear() ? \"\" : \"Invalid date of birth\";\r\n                break;\r\n            case \"email\":\r\n                state.errors.email = e.target.value\r\n                    .match(/^[a-zA-Z0-9.!#$%&'*+/=?^_`{|}~-]+@[a-zA-Z0-9-]+(?:\\.[a-zA-Z0-9-]+)*$/) ? \"\" : \"Please enter valid email\";\r\n                break;\r\n            default:\r\n                //terms validation is handled in separate function\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Handles creating an account\r\n     * Function will call the server extension /signup with user data kept in useState\r\n     * @param e\r\n     */\r\n    const handleSubmitClick = async (e) => {\r\n        e.preventDefault();\r\n        if (validForm()) {\r\n            let privateAccount = 0;\r\n            if (privChecked) {\r\n                privateAccount = 1;\r\n            }\r\n            const payload = {\r\n                name: state.name,\r\n                email: state.email,\r\n                password: state.password,\r\n                dob: state.dob,\r\n                private: privateAccount\r\n            }\r\n            //THIS IS NEW SERVER CODE\r\n            try {\r\n                await usersService.create(payload);\r\n                window.location.href = '/login';\r\n            } catch (err) {\r\n                console.log(payload);\r\n                console.log(err);\r\n            }\r\n            console.log('Submitted!');\r\n\r\n            //THIS IS OLD SERVER CODE (dont delete for the front end peeps using the old server)\r\n            // axios.post(process.env.REACT_APP_HOSTNAME + '/signup', payload)\r\n            //     .then(function (response) {\r\n            //         console.log(response);\r\n            //         window.location.href = 'http://localhost:3000/login'\r\n            //\r\n            //     }).catch(function (err) {\r\n            //     console.log(err);\r\n            // });\r\n        }\r\n    }\r\n\r\n    const validForm = () => {\r\n        return state.errors.confirmPassword === \"\" && state.errors.terms === \"\" && state.errors.dob === \"\" && state.errors.email === \"\";\r\n    }\r\n\r\n    return (\r\n        <div className={'textFont'}>\r\n            <Header/>\r\n            <Container className={\"my-3 d-flex justify-content-center\"} id={\"signupContainer\"}>\r\n                <Card className={\"w-50\"}>\r\n                    <Card.Header className={'text-center cardHeader'}><h3>Sign Up For Free</h3></Card.Header>\r\n                    <Card.Body>\r\n                        <Form>\r\n                            <Form.Group controlId={\"formBasicName\"} size={'sm'}>\r\n                                <p>* indicates a required field</p>\r\n                                <Form.Label>Name*</Form.Label>\r\n                                <Form.Control type={'name'} placeholder={'First and Last name'} name={'name'}\r\n                                              value={state.value}\r\n                                              onChange={handleChange} required/>\r\n                            </Form.Group>\r\n                            <Form.Group controlId={\"formBasicEmail\"}>\r\n                                <Form.Label>Email Address*</Form.Label>\r\n                                <Form.Control type={'email'} placeholder={'Email address'} name={'email'}\r\n                                              value={state.value}\r\n                                              onChange={handleChange} required/>\r\n                            </Form.Group>\r\n                            <span className={\"errors\"}>{state.errors[\"email\"]}</span>\r\n                            <Form.Group controlId={\"formBasicDOB\"}>\r\n                                <Form.Label>Date of Birth*</Form.Label>\r\n                                <Form.Control type={'date'} placeholder={'yyyy-dd-mm'} name={'dob'}\r\n                                              value={state.value}\r\n                                              onChange={handleChange} required/>\r\n                            </Form.Group>\r\n                            <span className={\"errors\"}>{state.errors[\"dob\"]}</span>\r\n                            <Form.Row>\r\n                                <Col>\r\n                                    <Form.Group controlId={\"formBasicPassword\"}>\r\n                                        <Form.Label>Password*</Form.Label>\r\n                                        <Form.Control type={'password'} placeholder={'Password'} name={'password'}\r\n                                                      value={state.value} onChange={handleChange} required/>\r\n                                    </Form.Group>\r\n                                </Col>\r\n                                <Col>\r\n                                    <Form.Group controlId={\"formBasicConfirmPassword\"}>\r\n                                        <Form.Label>Confirm Password*</Form.Label>\r\n                                        <Form.Control type={'password'} placeholder={'Confirm Password'}\r\n                                                      name={'confirmPassword'}\r\n                                                      value={state.value} onChange={handleChange} required/>\r\n                                    </Form.Group>\r\n                                    <span className={\"errors\"}>{state.errors[\"confirmPassword\"]}</span>\r\n                                </Col>\r\n                            </Form.Row>\r\n                            <Form.Group controlId={\"formBasicPrivCheck\"}>\r\n                                <span className={\"formatLine\"}>\r\n                                <Form.Check type={'checkbox'} label={\"Private Account\"} onChange={handlePrivCheck}/>\r\n                                <i id=\"privateinfo\" title={\"A private account ensures that only your friends are able to access your account and gifts.\"} className=\"fas fa-info-circle\"/>\r\n                                    </span>\r\n                            </Form.Group>\r\n                            <span className={\"errors\"}>{state.errors[\"terms\"]}</span>\r\n                            <Form.Group controlId={\"formBasicTermCheck\"}>\r\n                                <span className={\"formatLine\"}><Form.Check type={'checkbox'} onChange={handleTermCheck}/><a href={'/terms'}>Terms And Conditions*</a> </span>\r\n                            </Form.Group>\r\n                            <Button variant='primary' type={'submit'} disabled={!validForm()} onClick={handleSubmitClick}>Sign up</Button>\r\n                            <p className={'mt-3'}> Already a member? <a href=\"/login\">Log in</a></p>\r\n                        </Form>\r\n                    </Card.Body>\r\n                    <ListGroup variant=\"flush\" className={'py-3'}>\r\n                        <ListGroup.Item className={'d-flex justify-content-center'}>\r\n                            <GoogleButton/>\r\n                        </ListGroup.Item>\r\n                    </ListGroup>\r\n                </Card>\r\n            </Container>\r\n        </div>\r\n    )\r\n\r\n}\r\n\r\n\r\nexport default SignUpForm;\r\n","import React, {useEffect, useState, useContext} from 'react';\r\nimport {Link} from 'react-router-dom';\r\nimport \"../../pages/gift/Gifts.css\";\r\nimport \"../../pages/home/Home.css\";\r\nimport axios from \"axios\";\r\nimport {Card, Modal, InputGroup, Button, FormControl, ProgressBar} from 'react-bootstrap';\r\nimport { UserContext } from \"../../utils/UserContext\";\r\nimport * as emailjs from \"emailjs-com\";\r\nimport {usersService} from \"../../utils/ServerConnection\";\r\n\r\n\r\n/**\r\n * @param props {Object} {id, deadline(needs to be implemented), funds (needs to be implemented), receiverId,\r\n * receiverName, name, thumbnail, price, description, progress, userId}\r\n * @returns {*}\r\n * @constructor\r\n */\r\nfunction GiftSM(props) {\r\n    const {user} = useContext(UserContext);\r\n\r\n    // Used to show modal\r\n    const [show, setShow] = useState(false);\r\n\r\n    const handleClose = () => setShow(false);\r\n    const handleShow = () => {setShow(true)};\r\n\r\n    const [giftUser, setGiftUser] = useState({\r\n        name: '',\r\n        email: ''\r\n    });\r\n\r\n    const [contributionInput, setContributionInput] = useState({\r\n        amount: '',\r\n        error: ''\r\n    });\r\n\r\n    const [userFunds, setUserFunds] = useState();\r\n\r\n    /**\r\n     * Handle contribution input changes\r\n     * @param e\r\n     */\r\n    const handleAmountChange = (e) => {\r\n        setContributionInput(prevState => ({...prevState, error: ''}));\r\n        setContributionInput(prevState => ({...prevState, amount: e.target.value}))\r\n    };\r\n\r\n    /**\r\n     * On page load\r\n     */\r\n    useEffect(() => {\r\n        //TODO implement once we get our payment stuff situated (this is getting user funds which may or may not be needed here)\r\n        // axios.post(process.env.REACT_APP_HOSTNAME + \"/getWalletFunds\", {login: localStorage.getItem('email')}, {headers: {authorization: \"BEARER \" + authTokens}})\r\n        //     .then(function (response) {\r\n        //         setUserFunds(response.data.amount);\r\n        //         axios.post(process.env.REACT_APP_HOSTNAME + '/getProfileSnapshot', {login: localStorage.getItem('email'), email: props.gift.receivingEmail}, {headers: {authorization: \"BEARER \" + authTokens}}).then(res =>{\r\n        //             setGiftUser(prevState => ({...prevState, name: res.data.name, email: res.data.email}))\r\n        //         })\r\n        //     });\r\n    }, []);\r\n\r\n    /**\r\n     * @returns {boolean} true if there exists an error in contribution input\r\n     */\r\n    const isInvalidForm = () => {\r\n        return contributionInput.error !== '';\r\n    };\r\n\r\n    /**\r\n     * Contribute handler\r\n     * @param e\r\n     */\r\n    const handleContribute = (e) => {\r\n        e.preventDefault();\r\n\r\n        //Invalid price (entering letters, more than 2 digits for cents)\r\n        const expression = /^\\d+(.\\d{1,2})?$/;\r\n        let validAmount = expression.test(contributionInput.amount);\r\n\r\n        //If they dont have enough funds\r\n        let funds = parseInt(userFunds);\r\n        funds /= 100;\r\n\r\n        if(contributionInput.amount === ''){\r\n            setContributionInput(prevState => ({...prevState, error: 'Must enter a contribution amount'}))\r\n        } else if(!validAmount){\r\n            setContributionInput(prevState => ({...prevState, error: 'Must enter a valid price'}))\r\n            //upload gift\r\n       // } else if(contributionInput.amount > funds) {\r\n         //   setContributionInput(prevState => ({...prevState, error: 'You don\\'t have enough funds to make this contribution'}))\r\n        } else {\r\n            //add gift, form is validated\r\n            let request = {\r\n                login: localStorage.getItem('email'),\r\n                giftID: props.gift.giftID,\r\n                amount: contributionInput.amount * 100\r\n            };\r\n            //TODO Implement once we get our payment stuff situated - jon\r\n\r\n            // axios.post(process.env.REACT_APP_HOSTNAME + '/contribute', request, {headers: {authorization: \"BEARER \" + authTokens}})\r\n            //     .then(function (response) {\r\n            //         if(response.data.status === 'ok'){\r\n            //             let templateParams = {\r\n            //                 to_email: giftUser.email,\r\n            //                 to_name: giftUser.name,\r\n            //                 reply_to:'sdlgiftex@gmail.com',\r\n            //                 message: \"Someone contributed to your gift!!\"\r\n            //             };\r\n            //             emailjs.send('service_kp36gdn','template_z9zqdff', templateParams, 'user_bXzpwCFcBzHuUs0r4UZNn')\r\n            //                 .then((response) => {\r\n            //                     console.log('SUCCESS!', response.status, response.text);\r\n            //                 }, (err) => {\r\n            //                     console.log('FAILED...', err);\r\n            //                 });\r\n            //         }\r\n            //         window.location.reload();\r\n            //     })\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div className={'gift-container'}>\r\n            <Card>\r\n                <Link to={{\r\n                    pathname: `/gifts/${props.gift.id}`\r\n                }}>\r\n                    <div className={'gift-thumbnail-container'}>\r\n                        <Card.Img className={'gift-thumbnail'} variant={'top'} src={props.gift.thumbnail}/>\r\n                    </div>\r\n                </Link>\r\n                <Card.Body className={'gift-card-body'}>\r\n                    <Card.Title className={'giftSM-title'}><Link className={'black-link'} to={`/gifts/${props.gift.id}`}>{props.gift.name}</Link></Card.Title>\r\n                    <Card.Text className={'giftSM-desc'}>\r\n                        <span className={'gift-sm-funds'}>${props.gift.progress}</span><br/>\r\n                        <span className={'gift-sm-price'}>of ${props.gift.price} funded</span>\r\n                        <ProgressBar striped={'true'} animated={'true'} className={'gift-sm-progressbar'} now={(props.gift.progress / props.gift.price) * 100}/><br/>\r\n                        <div>Receiving: <Link className={'black-link'} to={`/account/${props.gift.receiverId}`}>{props.gift.receiverName}</Link></div>\r\n                    </Card.Text>\r\n                </Card.Body>\r\n                <Card.Footer>\r\n                    <Button onClick={handleShow} id={\"CardFooterButton\"} block>\r\n                        Contribute\r\n                    </Button>\r\n                </Card.Footer>\r\n            </Card>\r\n            <Modal show={show} onHide={handleClose}>\r\n                <Modal.Header closeButton>\r\n                    <Modal.Title><Link className={'black-link'} to={`/gifts/${props.gift.id}`}>{props.gift.name}</Link></Modal.Title>\r\n                </Modal.Header>\r\n                <Modal.Body>\r\n                    <div className={'modal-body'}>\r\n                        <div className={'modal-gift-thumbnail-container'}>\r\n                            <img className={'modal-gift-thumbnail'} src={props.gift.thumbnail} alt={''}/>\r\n                        </div>\r\n                        <div>\r\n                            <label htmlFor=\"amount\">Contribution Amount</label><br/>\r\n                            <InputGroup>\r\n                                <InputGroup.Prepend>\r\n                                    <InputGroup.Text>$</InputGroup.Text>\r\n                                </InputGroup.Prepend>\r\n                                <FormControl onChange={handleAmountChange} id={'amount'}/>\r\n                            </InputGroup>\r\n                            <div className={isInvalidForm() ? 'form-error-message' : 'hidden'}>{contributionInput.error}</div>\r\n                            <br/>\r\n                            <Button onClick={handleContribute} block>\r\n                                Contribute\r\n                            </Button>\r\n                        </div>\r\n                    </div>\r\n                </Modal.Body>\r\n            </Modal>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default GiftSM\r\n","export default __webpack_public_path__ + \"static/media/well.21920098.png\";","import React, {useEffect, useState, useContext} from 'react';\r\nimport './Home.css';\r\nimport { UserContext } from \"../../utils/UserContext\";\r\nimport GiftSM from \"../../components/gifts/GiftSM\";\r\nimport Header from \"../../components/header/Header\";\r\nimport Carousel from 'react-multi-carousel';\r\nimport 'react-multi-carousel/lib/styles.css';\r\nimport GiftHome from \"../../assets/well.png\";\r\nimport GiftButton from \"../../components/buttons/GiftButton\";\r\nimport {app, giftsService} from \"../../utils/ServerConnection\";\r\nrequire('dotenv').config();\r\n\r\n\r\nfunction Home(props) {\r\n\r\n    const {user, setUser} = useContext(UserContext);\r\n\r\n    const [state, setState] = useState({\r\n        isLoggedIn: false,\r\n        isLoading: true,\r\n        giftData: [],\r\n        gifts: [],\r\n        giftID: null,\r\n        modalIsOpen : false,\r\n        amount: 0,\r\n    });\r\n\r\n    /**\r\n     * On page load\r\n     */\r\n    useEffect( ()  => {\r\n        // Need to call reAuthenticate at least once to use app.get(\"authentication\")\r\n        if (!user) {\r\n            app.reAuthenticate()\r\n                .then(data => {\r\n                    console.log(\"User has been re-authenticated\");\r\n                    setUser(data.user);\r\n                })\r\n                .catch(err => {\r\n                    console.log(\"Issue authenticating\", err)\r\n                });\r\n        }\r\n        giftsService.find()\r\n            .then(({data}) => {\r\n                setState(prevState => ({...prevState, giftData: data}))\r\n            })\r\n            .catch((err) => {\r\n                console.log(err);\r\n            })\r\n        //TODO: Implement getting top gifts to populate bottom bar in new server\r\n        /*\r\n        axios.post(process.env.REACT_APP_HOSTNAME + '/getTopGifts', {})\r\n            .then(function (response) {\r\n                setState(prevState => {\r\n                    return {...prevState, giftData: response.data}\r\n                });\r\n            }).catch(function (err) {\r\n            console.log(err);\r\n        });\r\n\r\n         */\r\n    }, [user, setUser]);\r\n\r\n    //Used for carousel\r\n    const responsive = {\r\n        largeDesktop: {\r\n            breakpoint: { max: 5000, min: 2400 },\r\n            items: 4,\r\n            slidesToSlide: 4 // optional, default to 1.\r\n        },\r\n        desktop: {\r\n            breakpoint: { max: 2400, min: 1024 },\r\n            items: 3,\r\n            slidesToSlide: 3 // optional, default to 1.\r\n        },\r\n        tablet: {\r\n            breakpoint: { max: 1024, min: 464 },\r\n            items: 2,\r\n            slidesToSlide: 2 // optional, default to 1.\r\n        },\r\n        mobile: {\r\n            breakpoint: { max: 464, min: 0 },\r\n            items: 1,\r\n            slidesToSlide: 1 // optional, default to 1.\r\n        }};\r\n\r\n\r\n    return (\r\n        <div>\r\n            <Header/>\r\n            <div className={'content-container'}>\r\n                <div className={'home-about-container'}>\r\n                    <div className={'giftly-info-container'}>\r\n                        <div>\r\n                            <p className={'section-title'}>Give Them the Right Gift.</p>\r\n                            <p className={'section-description'}>Easily create a gift for you or a loved one</p>\r\n                            <GiftButton/>\r\n                        </div>\r\n                    </div>\r\n                    <div className={'home-image'}>\r\n                        <img className={'home-image'} src={GiftHome} alt={\"WishWell\"}/>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div className={'grey-background'}>\r\n                <div className={'content-container'}>\r\n                    <p className={'section-title'}>Popular Gifts</p>\r\n                    <div className={'pop-gift-container'}>\r\n                        <Carousel\r\n                            responsive={responsive}\r\n                            renderButtonGroupOutside={true}\r\n                            swipeable={false}\r\n                            draggable={false}\r\n                            showDots={true}\r\n                            ssr={true} // means to render carousel on server-side.\r\n                            infinite={false}\r\n                            containerClass=\"pop-gift-container\"\r\n                        >\r\n                            {state.giftData.map(function(gift, i) {\r\n                                return <GiftSM gift={gift} key={i}/>\r\n                            })}\r\n                        </Carousel>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Home;\r\n","import React, {useEffect, useState} from 'react';\r\nimport axios from \"axios\";\r\nimport {UserContext} from \"../utils/UserContext\";\r\n\r\n/**\r\n * This is a page that was used for testing the server. It can be accessed through the URL extension /debug\r\n * @returns {JSX.Element}\r\n * @constructor\r\n */\r\nfunction TestClient(){\r\n\r\n    const { authTokens } = UserContext;\r\n    const { setAuthTokens } = UserContext;\r\n\r\n    const [state, setState] = useState({\r\n        email: \"\",\r\n        password: \"\",\r\n        loginDevice: \"COMPUTER\",\r\n        isLoggedIn: false\r\n    });\r\n\r\n    useEffect(() => {\r\n        /*\r\n        axios.post('http://localhost:3001/getTopGifts', {})\r\n            .then(function (response) {\r\n                console.log(response.data.length);\r\n            }).catch(function (err) {\r\n            console.log(err);\r\n        });\r\n        */\r\n\r\n        /*\r\n        let contributeRequest = {login:\"eckerb@msoe.edu\", loginDevice:\"test\", giftID:1, amount:50};\r\n\r\n        axios.post('http://localhost:3001/contribute', contributeRequest)\r\n            .then(function (response) {\r\n                console.log(response.data.status);\r\n            });\r\n         */\r\n\r\n        /*\r\n        let addWalletFundsRequest = {login:\"eckerb@msoe.edu\", amount:100};\r\n        axios.post('http://localhost:3001/addWalletFunds', addWalletFundsRequest)\r\n            .then( function (response) {\r\n                console.log(response.data.status);\r\n            });\r\n         */\r\n\r\n        /*\r\n        let signupRequest = {email:\"eckerb2@msoe.edu\", password:\"juice\", name:\"Brendan\", dob:\"2000-01-01\", priv:0};\r\n        axios.post('http://localhost:3001/signup', signupRequest)\r\n            .then(function (response) {\r\n                console.log(response.data.status);\r\n            });\r\n         */\r\n\r\n        /*\r\n        let loginRequest = {login:\"eckerb@msoe.edu\", password:\"password\", loginDevice:\"test\"};\r\n        axios.post('http://localhost:3001/login', loginRequest)\r\n            .then(function (response) {\r\n                console.log(response.data.status);\r\n                console.log(response.data.success);\r\n            });\r\n         */\r\n\r\n        /*\r\n        let addGiftRequest = {login:\"yangda@msoe.edu\", loginDevice:\"IPHONE1\", name:\"Cyberpunk\", email:\"eckerb@msoe.edu\",\r\n            price:6000, thumbnail:\"url.url.com/photo\", description:\"Is goood.\", link:\"url.url.com\", priv:0};\r\n        axios.post('http://localhost:3001/addGift', addGiftRequest)\r\n            .then(function (response) {\r\n                console.log(response.data.status);\r\n            });\r\n        axios.get('http://localhost:3001/getTopGifts')\r\n            .then(function (response) {\r\n                console.log(response.data);\r\n            }).catch(function (err) {\r\n            console.log(err);\r\n        });\r\n         */\r\n\r\n        /*\r\n        let loginRequest2 = {login:\"eckerb@msoe.edu\", password:\"password\", loginDevice:\"browser1\"};\r\n        axios.post('http://localhost:3001/login', loginRequest2)\r\n            .then(function (response) {\r\n                console.log(loginRequest2.password);\r\n                console.log(response.data.status);\r\n                console.log(response.data.success);\r\n            });\r\n        let loginRequest3 = {login:\"eckerb@msoe.edu\", password:\"password2\", loginDevice:\"browser1\"};\r\n        axios.post('http://localhost:3001/login', loginRequest3)\r\n            .then(function (response) {\r\n                console.log(loginRequest3.password);\r\n                console.log(response.data.status);\r\n                console.log(response.data.success);\r\n            });\r\n         */\r\n\r\n        /*\r\n        let getProfileSnapshotRequest = {login:\"yangda@msoe.edu\", loginDevice:\"IPHONE\", email:\"eckerb@msoe.edu\"};\r\n        axios.post('http://localhost:3001/getProfileSnapshot', getProfileSnapshotRequest)\r\n            .then(  function (response) {\r\n                console.log(response.data.status);\r\n                console.log(response.data.name);\r\n                console.log(response.data.pic);\r\n            });\r\n\r\n        let getGiftSnapshotRequest = {login:\"yangda@msoe.edu\", loginDevice:\"IPHONE\", giftID:1};\r\n        axios.post('http://localhost:3001/getGiftSnapshot', getGiftSnapshotRequest)\r\n            .then(  function (response) {\r\n                console.log(response.data.status);\r\n                console.log(response.data.name);\r\n                console.log(response.data.thumbnail);\r\n                console.log(response.data.email);\r\n                console.log(response.data.price);\r\n                console.log(response.data.funds);\r\n\r\n            });\r\n\r\n         */\r\n\r\n        /*\r\n        let removeGiftRequest = {login: \"yangda@msoe.edu\", loginDevice:\"IPHONE\", giftID:1};\r\n        axios.post('http://localhost:3001/removeGift', removeGiftRequest)\r\n            .then(  function (response) {\r\n                console.log(response.data.status);\r\n            });\r\n\r\n         */\r\n\r\n        /*\r\n        let sendFriendRequestRequest = {login:\"yangda@msoe.edu\", loginDevice:\"IPHONE\", email:\"eckerb@msoe.edu\"};\r\n        axios.post('http://localhost:3001/sendFriendRequest', sendFriendRequestRequest)\r\n            .then(  function (response) {\r\n                console.log(response.data.status);\r\n            });\r\n         */\r\n\r\n        /*\r\n        let loginRequest4 = {login:\"eckerb@msoe.edu\", password:\"password\", loginDevice:\"browser1\"};\r\n        axios.post('http://localhost:3001/login', loginRequest4)\r\n            .then(function (response) {\r\n                //console.log(loginRequest3.password);\r\n                console.log(response.data.status);\r\n                console.log(response.data.success);\r\n            });\r\n        */\r\n\r\n        /*\r\n        let friendRequestRequest = {login:\"eckerb@msoe.edu\", loginDevice:\"browser1\", email:\"yangda@msoe.edu\", response:true};\r\n        axios.post('http://localhost:3001/friendRequest', friendRequestRequest)\r\n            .then(function (response) {\r\n                console.log(response.data.status);\r\n            });\r\n         */\r\n\r\n        /*\r\n        let removeFriendRequest = {login:\"yangda@msoe.edu\", loginDevice:\"IPHONE\", email:\"eckerb@msoe.edu\"};\r\n        axios.post('http://localhost:3001/removeFriend', removeFriendRequest)\r\n            .then(function (response) {\r\n                console.log(response.data.status);\r\n            });\r\n         */\r\n\r\n        /*\r\n        let getProfileGiftsRequest = {login:\"schultzjf@msoe.edu\", loginDevice:\"LAPTOP\", email:\"yangda@msoe.edu\"};\r\n        axios.post('http://localhost:3001/getProfileGifts', getProfileGiftsRequest)\r\n            .then(function (response) {\r\n                console.log(response.data.status);\r\n                console.log(response.data);\r\n            });\r\n         */\r\n\r\n        /*\r\n        let getProfileInfoRequest = {login:\"schultzjf@msoe.edu\", loginDevice:\"LAPTOP\", email:\"schultzjf@msoe.edu\"};\r\n        axios.post('http://localhost:3001/getProfileInfo', getProfileInfoRequest)\r\n            .then(function (response) {\r\n                console.log(response.data);\r\n            });\r\n        */\r\n\r\n        /*\r\n        let getProfileActivityRequest = {login:\"schultzjf@msoe.edu\", loginDevice:\"LAPTOP\", email:\"yangda@msoe.edu\"};\r\n        axios.post('http://localhost:3001/getProfileActivity', getProfileActivityRequest)\r\n            .then(function (response) {\r\n                console.log(response.data);\r\n            });\r\n        */\r\n\r\n        /*\r\n        let changeProfileRequest = {login:\"schultzjf@msoe.edu\", loginDevice:\"LAPTOP\", bio:\"wow look at this different bio\"};\r\n        axios.post('http://localhost:3001/changeProfile', changeProfileRequest)\r\n            .then(function (response) {\r\n                console.log(response.data);\r\n                let getProfileInfoRequest = {login:\"schultzjf@msoe.edu\", loginDevice:\"LAPTOP\", email:\"schultzjf@msoe.edu\"};\r\n                    axios.post('http://localhost:3001/getProfileInfo', getProfileInfoRequest)\r\n                        .then(function (response) {\r\n                            console.log(response.data);\r\n                        });\r\n            });\r\n        */\r\n        /*\r\n        let loginRequest = {login:\"yangda@msoe.edu\", password:\"123456\", loginDevice:\"IPHONE\"};\r\n        axios.post('http://localhost:3001/login', loginRequest)\r\n            .then(function (response) {\r\n                console.log(response.data);\r\n                let sendFriendRequestRequest = {\r\n                    login: \"yangda@msoe.edu\",\r\n                    loginDevice: \"IPHONE\",\r\n                    email: \"eckerb@msoe.edu\"\r\n                };\r\n                axios.post('http://localhost:3001/sendFriendRequest', sendFriendRequestRequest)\r\n                    .then(function (response) {\r\n                        console.log(response.data.status);\r\n\r\n                        let outgoingFriendRequestsRequest = {login: \"yangda@msoe.edu\", loginDevice: \"IPHONE\"};\r\n                        axios.post('http://localhost:3001/getOutgoingFriendRequests', outgoingFriendRequestsRequest)\r\n                            .then(function (response) {\r\n                                console.log(response.data);\r\n\r\n                                let loginRequest = {\r\n                                    login: \"eckerb@msoe.edu\",\r\n                                    password: \"password\",\r\n                                    loginDevice: \"test\"\r\n                                };\r\n                                axios.post('http://localhost:3001/login', loginRequest)\r\n                                    .then(function (response) {\r\n                                        let incomingFriendRequestsRequest = {\r\n                                            login: \"eckerb@msoe.edu\",\r\n                                            loginDevice: \"test\"\r\n                                        };\r\n                                        axios.post('http://localhost:3001/getIncomingFriendRequests', incomingFriendRequestsRequest)\r\n                                            .then(function (response) {\r\n                                                console.log(response.data);\r\n                                                axios.post('http://localhost:3001/getIncomingFriendRequests', {\r\n                                                    login: \"eckerb@msoe.edu\",\r\n                                                    loginDevice: \"test\"\r\n                                                })\r\n                                                    .then(function (response) {\r\n                                                        console.log(response.data);\r\n                                                    });\r\n                                            });\r\n                                    });\r\n                            });\r\n                    });\r\n            });\r\n         */\r\n\r\n        //ABOVE WAS DONE BEFORE AUTHENTICATION TOKENS WERE IMPLEMENTED\r\n        //BELOW USES THE NEW AUTHENTICATION TOKENS\r\n\r\n\r\n        console.log(\"cake\");\r\n\r\n        let loginRequestBre = {\r\n            login: \"yangda@msoe.edu\",\r\n            password: \"123456\",\r\n            loginDevice: 'COMPUTER'\r\n        };\r\n        axios.post('http://localhost:3001/login', loginRequestBre)\r\n            .then(function (response) {\r\n                console.log(response);\r\n                if (response.data.success)\r\n                {\r\n                    // console.log(state.email);\r\n                    localStorage.setItem('email', loginRequestBre.email);\r\n                    localStorage.setItem('loginDevice', loginRequestBre.loginDevice);\r\n                    //console.log(response.data);\r\n                    //window.location.href = 'http://localhost:3000/home_logged_in';\r\n                    //console.log(localStorage.getItem('email'));\r\n\r\n                    setAuthTokens(response.data.token);\r\n                    //setState(prevState => ({...prevState, isLoggedIn: true}))\r\n                }\r\n\r\n                /*\r\n                let getAddressesRequest = {\r\n                    login: localStorage.getItem('email'),\r\n                    loginDevice: localStorage.getItem('loginDevice')\r\n                };\r\n                axios.post('http://localhost:3001/getAddresses', getAddressesRequest, {headers: {authorization: \"BEARER \" + authTokens}})\r\n                    .then(function (response) {\r\n                        console.log(response.data);\r\n                    });\r\n\r\n                 */\r\n\r\n\r\n                /*\r\n                let addAddressRequest = {\r\n                    login: localStorage.getItem('email'),\r\n                    loginDevice: localStorage.getItem('loginDevice'),\r\n                    streetAddress: \"1234 Not A Street Rd\",\r\n                    city: \"room1\",\r\n                    state: \"Sealand\",\r\n                    zipcode: \"654321\"\r\n                }\r\n\r\n                axios.post('http://localhost:3001/addAddress', addAddressRequest, {headers: {authorization: \"BEARER \" + authTokens}})\r\n                    .then(function (response) {\r\n                        console.log(response.data);\r\n                    });\r\n\r\n                 */\r\n\r\n                /*\r\n                let deleteAddressRequest = {\r\n                    login: localStorage.getItem('email'),\r\n                    loginDevice: localStorage.getItem('loginDevice'),\r\n                    addressID: 3\r\n                }\r\n\r\n                axios.post('http://localhost:3001/deleteAddress', deleteAddressRequest, {headers: {authorization: \"BEARER \" + authTokens}})\r\n                    .then(function (response) {\r\n                        console.log(response.data);\r\n                    });\r\n\r\n                 */\r\n\r\n                /*\r\n                let changeAddressRequest = {\r\n                    login: localStorage.getItem('email'),\r\n                    loginDevice: localStorage.getItem('loginDevice'),\r\n                    addressID: 2,\r\n                    city: 'room2'\r\n                }\r\n\r\n                axios.post('http://localhost:3001/changeAddress', changeAddressRequest, {headers: {authorization: \"BEARER \" + authTokens}})\r\n                    .then(function (response) {\r\n                        console.log(response.data);\r\n                    });\r\n\r\n                 */\r\n\r\n                /*\r\n                let changeProfileRequest = {\r\n                    login: localStorage.getItem('email'),\r\n                    loginDevice: localStorage.getItem('loginDevice'),\r\n                    primAddressID: 1\r\n                }\r\n\r\n                axios.post('http://localhost:3001/changeProfile', changeProfileRequest, {headers: {authorization: \"BEARER \" + authTokens}})\r\n                    .then(function (response) {\r\n                        console.log(response.data);\r\n                    });\r\n\r\n                 */\r\n                /**/\r\n\r\n                /*\r\n                let contributeRequest = {\r\n                    login: localStorage.getItem('email'),\r\n                    giftID: 4,\r\n                    amount: 50\r\n                }\r\n                axios.post('http://localhost:3001/contribute', contributeRequest, {headers: {authorization: \"BEARER \" + authTokens}})\r\n                    .then(function (response) {\r\n                        console.log(response.data);\r\n\r\n\r\n                        let refundRequest = {\r\n                            login: localStorage.getItem('email'),\r\n                            giftID: 4\r\n                        }\r\n                        axios.post('http://localhost:3001/refund', refundRequest, {headers: {authorization: \"BEARER \" + authTokens}})\r\n                            .then(function (response) {\r\n                                console.log(response.data);\r\n                            });\r\n                    });/**/\r\n\r\n\r\n                /*\r\n                let addGiftRequest = {login:\"yangda@msoe.edu\", name:\"Cyberpunk\", email:\"eckerb@msoe.edu\",\r\n                    price:6000, thumbnail:\"url.url.com/photo\", description:\"Is goood.\", link:\"url.url.com\", priv:0};\r\n                axios.post('http://localhost:3001/addGift', addGiftRequest, {headers: {authorization: \"BEARER \" + authTokens}})\r\n                    .then(function (response) {\r\n                        console.log(response.data.status);\r\n                    });\r\n\r\n\r\n                let friendRequestRequest = {login:\"yangda@msoe.edu\", email:\"eckerb@msoe.edu\", response:true};\r\n                axios.post('http://localhost:3001/friendRequest', friendRequestRequest, {headers: {authorization: \"BEARER \" + authTokens}})\r\n                    .then(function (response) {\r\n                        console.log(response.data.status);\r\n                    });\r\n\r\n\r\n                let addCommentRequest = {\r\n                    login: localStorage.getItem('email'),\r\n                    loginDevice: localStorage.getItem('loginDevice'),\r\n                    giftID: 3,\r\n                    datetime: '2020-12-12 00:00:00',\r\n                    comment: \"you smell\"\r\n                }\r\n\r\n                axios.post('http://localhost:3001/addComment', addCommentRequest, {headers: {authorization: \"BEARER \" + authTokens}})\r\n                    .then(function (response) {\r\n                        console.log(response.data);\r\n                    });\r\n\r\n\r\n\r\n\r\n\r\n                /*\r\n                let refundRequest = {\r\n                    login: localStorage.getItem('email'),\r\n                    loginDevice: localStorage.getItem('loginDevice'),\r\n                    giftID: 4\r\n                }\r\n                axios.post('http://localhost:3001/refund', refundRequest, {headers: {authorization: \"BEARER \" + authTokens}})\r\n                    .then(function (response) {\r\n                        console.log(response.data);\r\n                    });\r\n                */\r\n\r\n\r\n\r\n                /*\r\n                let addCommentRequest = {\r\n                    login: localStorage.getItem('email'),\r\n                    loginDevice: localStorage.getItem('loginDevice'),\r\n                    giftID: 3,\r\n                    datetime: '2020-12-12 00:00:00',\r\n                    comment: \"you smell\"\r\n                }\r\n\r\n                axios.post('http://localhost:3001/addComment', addCommentRequest, {headers: {authorization: \"BEARER \" + authTokens}})\r\n                    .then(function (response) {\r\n                        console.log(response.data);\r\n                    });\r\n\r\n                */\r\n\r\n                /*\r\n                let deleteCommentRequest = {\r\n                    login: localStorage.getItem('email'),\r\n                    loginDevice: localStorage.getItem('loginDevice'),\r\n                    giftID: 3,\r\n                    datetime: '2020-12-12 00:00:00'\r\n                }\r\n\r\n                axios.post('http://localhost:3001/deleteComment', deleteCommentRequest, {headers: {authorization: \"BEARER \" + authTokens}})\r\n                    .then(function (response) {\r\n                        console.log(response.data);\r\n                    });\r\n\r\n                 */\r\n\r\n\r\n                /*\r\n                let getGiftSnapshotRequest1 = {\r\n                    //login: localStorage.getItem('email'),\r\n                    giftID: 1,\r\n                    description: false\r\n                }\r\n                axios.post('http://localhost:3001/getGiftSnapshot', getGiftSnapshotRequest1, {headers: {authorization: \"BEARER \" + authTokens}})\r\n                    .then(function (response) {\r\n                        console.log(response.data);\r\n                    });\r\n\r\n                let getGiftSnapshotRequest2 = {\r\n                    //login: localStorage.getItem('email'),\r\n                    giftID: [1, 2, 3],\r\n                    description: true\r\n                }\r\n                axios.post('http://localhost:3001/getGiftSnapshot', getGiftSnapshotRequest2, {headers: {authorization: \"BEARER \" + authTokens}})\r\n                    .then(function (response) {\r\n                        console.log(response.data);\r\n                    });\r\n\r\n                let getProfileSnapshotRequest1 = {\r\n                    email: 'atkinsond@msoe.edu'\r\n                }\r\n\r\n                axios.post('http://localhost:3001/getProfileSnapshot', getProfileSnapshotRequest1, {headers: {authorization: \"BEARER \" + authTokens}})\r\n                    .then(function (response) {\r\n                        console.log(response.data);\r\n                    });\r\n\r\n                let getProfileSnapshotRequest2 = {\r\n                    email: ['atkinsond@msoe.edu', 'yangda@msoe.edu', 'eckerb@msoe.edu', 'schultzjf@msoe.edu']\r\n                }\r\n\r\n                axios.post('http://localhost:3001/getProfileSnapshot', getProfileSnapshotRequest2, {headers: {authorization: \"BEARER \" + authTokens}})\r\n                    .then(function (response) {\r\n                        console.log(response.data);\r\n                    });\r\n\r\n                 */\r\n\r\n                let searchRequest0 = {\r\n                    login: localStorage.getItem('email')\r\n                }\r\n\r\n                axios.post('http://localhost:3001/getTopGifts', searchRequest0, {headers: {authorization: \"BEARER \" + authTokens}})\r\n                    .then(function (response) {\r\n                        console.log(\"0: everything\");\r\n                        console.log(response.data);\r\n                    });\r\n\r\n\r\n                let searchRequest1 = {\r\n                    login: localStorage.getItem('email'),\r\n                    receivingName: \"Da\"\r\n                }\r\n\r\n                axios.post('http://localhost:3001/getTopGifts', searchRequest1, {headers: {authorization: \"BEARER \" + authTokens}})\r\n                    .then(function (response) {\r\n                        console.log(\"1: receivingName\");\r\n                        console.log(response.data);\r\n                    });\r\n\r\n                let searchRequest2 = {\r\n                    login: localStorage.getItem('email'),\r\n                    maxPrice: '10000'\r\n                }\r\n\r\n                axios.post('http://localhost:3001/getTopGifts', searchRequest2, {headers: {authorization: \"BEARER \" + authTokens}})\r\n                    .then(function (response) {\r\n                        console.log(\"2: maxPrice\");\r\n                        console.log(response.data);\r\n                    });\r\n\r\n                let searchRequest3 = {\r\n                    login: localStorage.getItem('email'),\r\n                    minPrice: '10000'\r\n                }\r\n\r\n                axios.post('http://localhost:3001/getTopGifts', searchRequest3, {headers: {authorization: \"BEARER \" + authTokens}})\r\n                    .then(function (response) {\r\n                        console.log(\"3: minPrice\");\r\n                        console.log(response.data);\r\n                    });\r\n\r\n                let searchRequest4 = {\r\n                    login: localStorage.getItem('email'),\r\n                    name: \"birthday\"\r\n                }\r\n\r\n                axios.post('http://localhost:3001/getTopGifts', searchRequest4, {headers: {authorization: \"BEARER \" + authTokens}})\r\n                    .then(function (response) {\r\n                        console.log(\"4: name\");\r\n                        console.log(response.data);\r\n                    });\r\n\r\n                let searchRequest5 = {\r\n                    login: localStorage.getItem('email'),\r\n                    remainingFunds: '5000'\r\n                }\r\n\r\n                axios.post('http://localhost:3001/getTopGifts', searchRequest5, {headers: {authorization: \"BEARER \" + authTokens}})\r\n                    .then(function (response) {\r\n                        console.log(\"5: remainingFunds\");\r\n                        console.log(response.data);\r\n                    });\r\n\r\n                let searchRequest6 = {\r\n                    login: localStorage.getItem('email'),\r\n                    description: \"wed\"\r\n                }\r\n\r\n                axios.post('http://localhost:3001/getTopGifts', searchRequest6, {headers: {authorization: \"BEARER \" + authTokens}})\r\n                    .then(function (response) {\r\n                        console.log(\"6: description\");\r\n                        console.log(response.data);\r\n                    });\r\n\r\n\r\n                let searchRequest7 = {\r\n                    login: localStorage.getItem('email'),\r\n                    minDate: \"2021-01-01 00:00:00\"\r\n                }\r\n\r\n                axios.post('http://localhost:3001/getTopGifts', searchRequest7, {headers: {authorization: \"BEARER \" + authTokens}})\r\n                    .then(function (response) {\r\n                        console.log(\"7: minDate\");\r\n                        console.log(response.data);\r\n                    });\r\n\r\n                let searchRequest8 = {\r\n                    login: localStorage.getItem('email'),\r\n                    maxDate: \"2021-01-01 00:00:00\"\r\n                }\r\n\r\n                axios.post('http://localhost:3001/getTopGifts', searchRequest8, {headers: {authorization: \"BEARER \" + authTokens}})\r\n                    .then(function (response) {\r\n                        console.log(\"8: maxDate\");\r\n                        console.log(response.data);\r\n                    });\r\n\r\n\r\n\r\n                let searchRequest9 = {\r\n                    login: localStorage.getItem('email'),\r\n                    link: \"PlayStation\"\r\n                }\r\n\r\n                axios.post('http://localhost:3001/getTopGifts', searchRequest9, {headers: {authorization: \"BEARER \" + authTokens}})\r\n                    .then(function (response) {\r\n                        console.log(\"9: link\");\r\n                        console.log(response.data);\r\n                    });\r\n\r\n                let searchRequest10 = {\r\n                    login: localStorage.getItem('email'),\r\n                    minPrice: '9000',\r\n                    maxPrice: '40000',\r\n                    receivingName: \"Da\"\r\n                }\r\n\r\n                axios.post('http://localhost:3001/getTopGifts', searchRequest10, {headers: {authorization: \"BEARER \" + authTokens}})\r\n                    .then(function (response) {\r\n                        console.log(\"10: minPrice, maxPrice, receivingName\");\r\n                        console.log(response.data);\r\n                    });\r\n\r\n                /*\r\n                let getProfileGiftsRequest1 = {\r\n                    login: localStorage.getItem(\"email\"),\r\n                    email: \"atkinsond@msoe.edu\"\r\n                }\r\n\r\n                axios.post('http://localhost:3001/getProfileGifts', getProfileGiftsRequest1, {headers: {authorization: \"BEARER \" + authTokens}})\r\n                    .then(function (response) {\r\n                        console.log(response.data);\r\n                        let ret = [];\r\n                        for(let i = 0; i < response.data.length; i++) {\r\n                            ret[i]= response.data[i].giftID;\r\n                        }\r\n                        let giftSnapshotsRequest = {\r\n                            login: localStorage.getItem(\"email\"),\r\n                            giftID: ret\r\n                        }\r\n                        axios.post('http://localhost:3001/getGiftSnapshot', giftSnapshotsRequest, {headers: {authorization: \"BEARER \" + authTokens}})\r\n                            .then(function (response) {\r\n                                console.log(response.data);\r\n                            });\r\n                    });\r\n                */\r\n                /*let addFundRequest = {\r\n                    login: localStorage.getItem('email')\r\n                }\r\n\r\n                axios.post('http://localhost:3001/addWalletFunds', addFundRequest, {headers: {authorization: \"BEARER \" + authTokens}})\r\n                    .then(function (response) {\r\n                        console.log(response.data);\r\n                    });*/\r\n\r\n\r\n\r\n            }).catch(function (err) {\r\n            console.log(err);\r\n        });\r\n\r\n\r\n\r\n\r\n\r\n    },[]);\r\n\r\n    return(\r\n        <div>\r\n            <h1>Popular Gifts</h1>\r\n            <div id={'debug'}>\r\n\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default TestClient;\r\n","import React, {useState, useContext} from 'react';\r\nimport Header from \"../../components/header/Header\";\r\nimport {UserContext} from \"../../utils/UserContext\";\r\nimport {Button, Form, Container, Card} from 'react-bootstrap';\r\nimport {app} from '../../utils/ServerConnection'\r\nimport {Link} from \"react-router-dom\";\r\n\r\n\r\nfunction LogIn() {\r\n\r\n    const {setUser} = useContext(UserContext);\r\n\r\n    const [state, setState] = useState({\r\n        email: \"\",\r\n        password: \"\",\r\n    });\r\n\r\n    const handleChange = (e) => {\r\n        const {name, value} = e.target;\r\n        setState(prevState => ({\r\n            ...prevState,\r\n            [name]: value\r\n        }));\r\n    };\r\n\r\n    /*\r\n    Logs in a user, after success it will direct to the home page again.\r\n     */\r\n    const handleSubmitClick = async (e) => {\r\n        e.preventDefault();\r\n        const payload = {\r\n            strategy: 'local',\r\n            email: state.email,\r\n            password: state.password,\r\n        };\r\n\r\n        /* Tries to authenticate with feathers and sets auth token state to use the user's JWT\r\n           from the authenticate service\r\n         */\r\n        try {\r\n            const {user} = await app.authenticate(payload);\r\n            setUser(user);\r\n        } catch (err) {\r\n            console.log(err);\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div className={'textFont'}>\r\n            <Header/>\r\n            <Container className={'my-3 d-flex justify-content-center'}>\r\n                <Card className={\"w-50\"}>\r\n                    <Card.Header className={'text-center cardHeader'}><h3>Log in</h3></Card.Header>\r\n                    <Card.Body>\r\n                        <Form>\r\n                            <Form.Group controlId={\"formBasicEmail\"}>\r\n                                <Form.Label>Email address</Form.Label>\r\n                                <Form.Control type={'email'} placeholder={'Enter email'} name={'email'}\r\n                                              value={state.value}\r\n                                              onChange={handleChange} required/>\r\n                            </Form.Group>\r\n                            <Form.Group controlId={\"formBasicPassword\"}>\r\n                                <Form.Label>Password</Form.Label>\r\n                                <Form.Control type={'password'} placeholder={'Enter password'} name={'password'}\r\n                                              value={state.value} onChange={handleChange} required/>\r\n                            </Form.Group>\r\n                        </Form>\r\n                        <Button variant='primary' type={'submit'} onClick={handleSubmitClick}><Link style={{color:'white', textDecoration:'none'}} to={'/'}>Log in</Link></Button>\r\n                        <div style={{display:'flex', justifyContent:'left', alignItems:'center', gap:'1ch'}}><p className={'mt-3'}> Not a member? </p><Link to={\"/signup\"}>Sign up</Link></div>\r\n                    </Card.Body>\r\n                </Card>\r\n            </Container>\r\n        </div>\r\n\r\n    )\r\n}\r\n\r\nexport default LogIn;\r\n","import React, {useContext} from \"react\";\r\nimport { Route, Redirect } from \"react-router-dom\";\r\nimport { UserContext } from \"./UserContext\";\r\n\r\nfunction PrivateRoute({ component: Component, ...rest }) {\r\n    const {user} = useContext(UserContext)\r\n    return (\r\n        <Route\r\n            {...rest}\r\n            render={props =>\r\n                user ? (\r\n                    <Component {...props} />\r\n                ) : (\r\n                    <Redirect to=\"/\" />\r\n                )\r\n            }\r\n        />\r\n    );\r\n}\r\n\r\nexport default PrivateRoute;","import React from \"react\";\r\nimport Card from \"react-bootstrap/Card\";\r\nimport \"../pages/account/FriendsSnippet.css\"\r\nimport {Link} from \"react-router-dom\";\r\n\r\n//Need to pass in name and pic\r\nclass FriendSnippet extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n\r\n    render() {\r\n\r\n\r\n        //Gets a buffer for the profile pics\r\n        let pic = this.props.data.pic;\r\n        let name = this.props.data.name;\r\n        let id = this.props.data.id;\r\n        return (\r\n            <Link to={'/account/' .concat(id)}>\r\n                <Card style={{alignItems: 'center', margin: 0, height: '100px', marginRight: '10px'}}\r\n                      className={'border-0'}>\r\n                    <Card.Title className={'friends-name-link'}>{name}</Card.Title>\r\n                    <Card.Img style={{\r\n                        borderRadius: '50%',\r\n                        width: '60px',\r\n                        height: '60px',\r\n                        border: '1px solid lightgray',\r\n                        // background: 'rgba(143, 186, 243, .2)',\r\n                        flexGrow: '1'\r\n                    }} className='friendPic' src={pic}/>\r\n                    <Card.Body>\r\n                    </Card.Body>\r\n                </Card>\r\n            </Link>\r\n        )\r\n    }\r\n}\r\n\r\nexport default FriendSnippet;\r\n","import {\r\n    OverlayTrigger,\r\n    Popover,\r\n    Image,\r\n    Row,\r\n    Col,\r\n    Button,\r\n    Container,\r\n    Modal,\r\n    InputGroup,\r\n    FormControl, Form\r\n} from \"react-bootstrap\";\r\nimport React, {useState, useContext} from \"react\";\r\nimport {Link} from 'react-router-dom';\r\nimport \"../../pages/gift/Gifts.css\"\r\nimport {FontAwesomeIcon} from \"@fortawesome/react-fontawesome\";\r\nimport {faTrash} from \"@fortawesome/free-solid-svg-icons\";\r\nimport axios from \"axios\";\r\nimport {UserContext} from \"../../utils/UserContext\";\r\nimport { giftsService } from \"../../utils/ServerConnection\";\r\nimport {ToastContainer, toast} from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\n\r\n\r\nfunction GiftPro(props) {\r\n    const {user} = useContext(UserContext);\r\n\r\n    const [show, setShow] = useState(false);\r\n    const [open, setOpen] = useState(false);\r\n    const [show2, setShow2] = useState(false);\r\n\r\n    const handleClose = () => setShow(false);\r\n    const handleShow = () => setShow(true);\r\n    const handleClose2 = () => setShow2(false);\r\n    const handleShow2 = () => setShow2(true);\r\n\r\n    const [state, setState] = useState( {\r\n       eventID: 0\r\n    });\r\n\r\n    const handleChange = (e) => {\r\n        const {name, value} = e.target\r\n        setState(prevState => ({\r\n            ...prevState,\r\n            [name]: value\r\n        }));\r\n    }\r\n\r\n    const removeGiftAlert = () => toast(\"This gift has been removed from your Wish List.\");\r\n\r\n    const handleGiftDelete = () => {\r\n        let req = {\r\n            giftID: props.gift.giftID\r\n        }\r\n        giftsService.remove(props.gift.id);\r\n        removeGiftAlert();\r\n        console.log(\"gift has been removed\");\r\n        setOpen(false);\r\n        //window.location.href = `/account/${user.id}`;\r\n        // window.location.reload(false);\r\n        //TODO Refresh the screen so that the gift is also removed on the client side\r\n\r\n        // axios.post(  process.env.REACT_APP_HOSTNAME + '/removeGift', req, {headers: {authorization: \"BEARER \" + authTokens}})\r\n        //     .then(function (response) {\r\n        //         window.location.reload(false)\r\n        //     }).catch(function (err) {\r\n        //         console.log(err);\r\n        // });\r\n\r\n    }\r\n\r\n    const addToEvent = () => {\r\n        giftsService.patch(props.gift.id, {eventId: state.eventID}).then(handleClose2).catch((err) => {\r\n            console.log(\"did not add gift to event\");\r\n            console.log(err);\r\n        });\r\n    }\r\n\r\n\r\n    return (<Container className={'gift-pro-container'}>\r\n            <Row>\r\n                <Col className={'gift-pro-icon-container'} md={6}>\r\n                    <Link to={{\r\n                        pathname: `/gifts/${props.gift.id}`\r\n                    }}>\r\n                        <Image id={'gift-icon'} src={props.gift.thumbnail} alt={''}/>\r\n                    </Link>\r\n                </Col>\r\n                <Col md={6} className={'gift-info'}>\r\n                    <Row>\r\n                        <h3><Link className={'black-link'} to={`/gifts/${props.gift.id}`}>{props.gift.name}</Link></h3>\r\n                    </Row>\r\n                    <Row>\r\n                        <p> Description: {props.gift.description}</p>\r\n                    </Row>\r\n                    <Row>\r\n                        <Col className={'p-0'}>\r\n                            <p>Price: ${props.gift.price}</p>\r\n                            <p>Progress:\r\n                                ${props.gift.progress} / ${props.gift.price}</p></Col>\r\n                    </Row>\r\n                    <Row>\r\n                        <Button name=\"contributeButton\" value={props.gift.id} onClick={handleShow} className={\"w-50\"}>\r\n                            Contribute\r\n                        </Button>\r\n                        <Button name=\"addGiftToEventButton\" value={props.gift.id} onClick={handleShow2} className={\"w-50\"}>\r\n                            Add To Event\r\n                        </Button>\r\n                    </Row>\r\n                    {props.gift.userId === user.id ?\r\n                        <OverlayTrigger\r\n                            trigger=\"click\"\r\n                            key={props.gift.id}\r\n                            placement={'left'}\r\n                            show={open}\r\n                            onToggle={() => {\r\n                                setOpen(true)\r\n                            }}\r\n                            overlay={\r\n                                <Popover id={`popover-positioned-left`}>\r\n                                    <Popover.Title as=\"h3\">Are you sure?</Popover.Title>\r\n                                    <Popover.Content>\r\n                                        <button className=\"mr-3 btn btn-danger\" onClick={() => {\r\n                                            setOpen(false)\r\n                                        }}>Cancel</button>\r\n                                        <button className=\"btn btn-secondary\" onClick={handleGiftDelete}><Link style={{color: 'inherit', textDecoration: 'none'}} to={'/account/'.concat(user.id)}>OK</Link></button>\r\n                                    </Popover.Content>\r\n                                </Popover>\r\n                            }\r\n                        >\r\n                            <FontAwesomeIcon className={'delete-gift'} icon={faTrash}/>\r\n                        </OverlayTrigger> : null\r\n                    }\r\n                </Col>\r\n                <ToastContainer\r\n                    position=\"bottom-left\"\r\n                    autoClose={5000}\r\n                    hideProgressBar={false}\r\n                    newestOnTop={false}\r\n                    closeOnClick\r\n                    rtl={false}\r\n                    pauseOnFocusLoss\r\n                    draggable\r\n                    pauseOnHover={false}\r\n                />\r\n            </Row>\r\n            <Modal show={show} onHide={handleClose}>\r\n                <Modal.Header closeButton>\r\n                    <Modal.Title><a className={'black-link'} href={`/gifts/${props.gift.id}`}>{props.gift.name}</a></Modal.Title>\r\n                </Modal.Header>\r\n                <Modal.Body>\r\n                    <div className={'modal-body'}>\r\n                        <div className={'modal-gift-thumbnail-container'}>\r\n                            <img className={'modal-gift-thumbnail'} src={props.gift.thumbnail} alt={''}/>\r\n                        </div>\r\n                        <div>\r\n                            <label htmlFor=\"amount\">Contribution Amount</label><br/>\r\n                            <InputGroup>\r\n                                <InputGroup.Prepend>\r\n                                    <InputGroup.Text>$</InputGroup.Text>\r\n                                </InputGroup.Prepend>\r\n                                <FormControl id={'amount'}/>\r\n                            </InputGroup>\r\n                            <br/>\r\n                            <Button id={\"contributeButton\"} block>\r\n                                Contribute\r\n                            </Button>\r\n                        </div>\r\n                    </div>\r\n                </Modal.Body>\r\n            </Modal>\r\n            <Modal show={show2} onHide={handleClose2}>\r\n                <Modal.Body>\r\n                    <div className={'modal-body'}>\r\n                        <div>\r\n                            <label>Event ID</label><br/>\r\n                            <InputGroup>\r\n                                <InputGroup.Prepend>\r\n                                    <InputGroup.Text>Event ID:</InputGroup.Text>\r\n                                </InputGroup.Prepend>\r\n                                <Form.Control type={'eventID'} placeholder={'Event ID'} name={'eventID'}\r\n                                              value={state.eventID}\r\n                                              onChange={handleChange} required/>\r\n                            </InputGroup>\r\n                            <br/>\r\n                            <Button id={\"submitButton\"} onClick={addToEvent}>\r\n                                Submit\r\n                            </Button>\r\n                        </div>\r\n                    </div>\r\n                </Modal.Body>\r\n            </Modal>\r\n        </Container>\r\n    )\r\n}\r\n\r\n\r\nexport default GiftPro;","import React, {useEffect, useState, useContext} from 'react';\r\nimport {Link, useParams} from 'react-router-dom';\r\nimport \"../../pages/gift/Gifts.css\";\r\nimport \"../../pages/home/Home.css\";\r\nimport \"../../components/account/AccountComp.js\";\r\nimport {Card, Modal, InputGroup, Button, FormControl, ProgressBar, Container} from 'react-bootstrap';\r\nimport { UserContext } from \"../../utils/UserContext\";\r\nimport {eventsService, giftsService} from \"../../utils/ServerConnection\";\r\nimport {usersService} from \"../../utils/ServerConnection\";\r\nimport GiftPro from \"../gifts/GiftPro\";\r\nimport GiftSM from \"../gifts/GiftSM\";\r\n\r\n\r\n/**\r\n * @param props {Object} {id, deadline(needs to be implemented), funds (needs to be implemented), receiverId,\r\n * receiverName, name, thumbnail, price, description, progress, userId}\r\n * @returns {*}\r\n * @constructor\r\n */\r\nfunction EventSM(props) {\r\n    const {user} = useContext(UserContext);\r\n\r\n    // Used to show modal\r\n    const [show, setShow] = useState(false);\r\n\r\n    const handleClose = () => setShow(false);\r\n    const handleShow = () => {setShow(true)};\r\n\r\n    const userData = useParams();\r\n    //All the states being used in this component\r\n    const [state, setState] = useState({\r\n        name: '',\r\n        dob: '',\r\n        pic: '',\r\n        bio: '',\r\n        friend: false,\r\n        requested: false,\r\n        priv: false\r\n    });\r\n    const [giftState, setGiftState] = useState([]);\r\n\r\n    const grabProfileInfo = async () => {\r\n        try {\r\n            //TODO: Implement getting profile information in new server\r\n            // we need to be able to make this function work for asking for other user's profiles, this includes\r\n            // checking if they're friends and if the profile is private\r\n\r\n            await usersService.get(userData.id).then((resp)=>{\r\n                setState(prevState => (\r\n                    {\r\n                        ...prevState,\r\n                        name: resp.name,\r\n                        bio: resp.bio,\r\n                        dob: resp.bio,\r\n                        pic: resp.pic\r\n                    }))\r\n            })\r\n        } catch (err) {\r\n            console.error(err);\r\n        }\r\n\r\n    };\r\n\r\n    // Grabs the gift of an account\r\n    const grabGifts = async () => {\r\n        try {\r\n            //TODO: Implement getting users gifts\r\n            const gifts =  await giftsService.find({query: {eventId: {$eq: props.event.id}}});\r\n            //console.log(gifts);\r\n            //const resp = await axios.post(process.env.REACT_APP_HOSTNAME + '/getProfileGifts', req, {headers: {authorization: \"BEARER \" + authTokens}});\r\n            setGiftState(gifts.data);\r\n            // console.log(resp.data);\r\n        } catch (err) {\r\n            console.error(err);\r\n        }\r\n    };\r\n\r\n    /*\r\n    Rendering in gifts\r\n     */\r\n    function giftRender() {\r\n        if (giftState.length === 0) {\r\n            return (<Card.Body className={\"giftDiv cardBody\"} style={{color: 'grey'}}>\r\n                There are no gifts to show!\r\n            </Card.Body>)\r\n        } else {\r\n            return (<Card.Body id={\"giftDiv cardBody\"}>\r\n                    {giftState.map(function (gift, i) {\r\n                        return <Container className={'mb-3 border'}>\r\n                            <GiftSM gift={gift} key={i} email={state.email}/>\r\n                        </Container>\r\n                    })}\r\n                </Card.Body>\r\n            )\r\n        }\r\n    }\r\n\r\n    /**\r\n     * On page load\r\n     */\r\n    useEffect(() => {\r\n        //Grab profile info\r\n        grabProfileInfo().then(function () {\r\n                if (!state.priv) {\r\n                    grabGifts();\r\n                }\r\n            }\r\n        );\r\n    }, []);\r\n\r\n    return (\r\n        <div className={'event-container'}>\r\n            <Card>\r\n                <Link to={{\r\n                    pathname: `/events/${props.event.id}`\r\n                }}>\r\n                </Link>\r\n                <Card.Header className={'cardHeader'}>\r\n                    <Link className={'black-link'} to={`/events/${props.event.id}`}>{props.event.name}</Link>\r\n                </Card.Header>\r\n                <Card.Body className={'event-card-body'}>\r\n                    <Card.Text className={'eventSM-privacy'}>\r\n                        <span>Privacy: {props.event.privacy}</span>\r\n                    </Card.Text>\r\n                    <Card.Text className={'eventSM-date'}>\r\n                        <span>Date: {props.event.end_date}</span>\r\n                    </Card.Text>\r\n                </Card.Body>\r\n                <Card.Footer>\r\n                    <Button onClick={handleShow} id={\"CardFooterButton\"} block>\r\n                        View Gifts\r\n                    </Button>\r\n                </Card.Footer>\r\n            </Card>\r\n            <Modal show={show} onHide={handleClose}>\r\n                <Modal.Header closeButton>\r\n                    <Modal.Title><Link className={'black-link'} to={`/events/${props.event.id}`}>{props.event.name}</Link></Modal.Title>\r\n                </Modal.Header>\r\n                <Modal.Body>\r\n                    <div className={'modal-body'}>\r\n                        <div>\r\n                            {giftRender()}\r\n                        </div>\r\n                    </div>\r\n                </Modal.Body>\r\n            </Modal>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default EventSM;\r\n","import React, {useEffect, useState, useContext} from \"react\";\r\nimport \"../../pages/account/AccountPage.css\"\r\nimport axios from \"axios\";\r\nimport {Button, Card, Col, Container, Row} from 'react-bootstrap';\r\nimport \"../../App.css\";\r\nimport FriendSnippet from \"../../components/FriendSnippet\";\r\nimport GiftPro from \"../../components/gifts/GiftPro\";\r\nimport {withRouter} from \"react-router\";\r\nimport Header from \"../header/Header\";\r\nimport GiftButton from \"../buttons/GiftButton\";\r\nimport {UserContext} from \"../../utils/UserContext\";\r\nimport {useParams} from 'react-router-dom';\r\nimport * as emailjs from \"emailjs-com\";\r\nimport {app, giftsService, usersService, userRelationshipsService, eventsService} from '../../utils/ServerConnection'\r\nimport EventPro from \"../events/EventPro\";\r\nimport GiftSM from \"../gifts/GiftSM\";\r\nimport Carousel from \"react-multi-carousel\";\r\nimport EventSM from \"../events/EventSM\";\r\n\r\n/*\r\nAccountComp is a React Component. It's main purpose is to render up a user's profile page when requested.\r\nThis component should be able to tell if you're viewing another account's page or your own.\r\nPlease find a better way to check if the account page that is being viewed is the user's or another.\r\n */\r\n\r\nfunction AccountComp() {\r\n    // useEffect(() => {\r\n    //     app.reAuthenticate().then((user) => {\r\n    //         console.log(user);\r\n    //     })\r\n    // }, [])\r\n\r\n    const {user} = useContext(UserContext)\r\n\r\n    const userData = useParams();\r\n\r\n    //All the states being used in this component\r\n    const [state, setState] = useState({\r\n        name: '',\r\n        dob: '',\r\n        pic: '',\r\n        bio: '',\r\n        friend: false,\r\n        requested: false,\r\n        priv: false\r\n    });\r\n\r\n\r\n    //Needs to be updated from server\r\n    const [activityState, setActivityState] = useState([]);\r\n\r\n    const [giftState, setGiftState] = useState([]);\r\n\r\n    const [eventState, setEventState] = useState([]);\r\n\r\n    const [friendState, setFriendState] = useState([]);\r\n\r\n\r\n    // This method will grab the profile information of a requested account and set the state\r\n    const grabProfileInfo = async () => {\r\n        try {\r\n            //TODO: Implement getting profile information in new server\r\n            // we need to be able to make this function work for asking for other user's profiles, this includes\r\n            // checking if they're friends and if the profile is private\r\n\r\n            await usersService.get(userData.id).then((resp)=>{\r\n                setState(prevState => (\r\n                    {\r\n                        ...prevState,\r\n                        name: resp.name,\r\n                        bio: resp.bio,\r\n                        dob: resp.bio,\r\n                        pic: resp.pic\r\n                    }))\r\n            })\r\n            // Getting the profile information for what is in the req\r\n            // const resp = await axios.post(process.env.REACT_APP_HOSTNAME + '/getProfileInfo', req, {headers: {authorization: \"BEARER \" + authTokens}});\r\n            // if (resp.data.hasOwnProperty('status')) {\r\n            //     setState(prevState => (\r\n            //         {\r\n            //             ...prevState,\r\n            //             pic: resp.data.pic,\r\n            //             name: resp.data.name,\r\n            //             bio: resp.data.bio,\r\n            //             priv: true\r\n            //         }))\r\n            // }\r\n            // setState(prevState => (\r\n            //     {\r\n            //         ...prevState,\r\n            //         name: resp.data.name,\r\n            //         bio: resp.data.bio,\r\n            //         dob: resp.data.bio,\r\n            //         pic: resp.data.pic\r\n            //     }))\r\n        } catch (err) {\r\n            console.error(err);\r\n        }\r\n\r\n    };\r\n\r\n    // Grabs the activity of an account\r\n    const grabActivity = async () => {\r\n        try {\r\n            //TODO: Implement getting profile activity (WHAT IS PROFILE ACTIVITY?)\r\n            //const resp = await axios.post(process.env.REACT_APP_HOSTNAME + '/getProfileActivity', req, {headers: {authorization: \"BEARER \" + authTokens}});\r\n            //setActivityState(resp.data);\r\n        } catch (err) {\r\n            console.error(err);\r\n        }\r\n    };\r\n\r\n    // Grabs the gift of an account\r\n    const grabGifts = async () => {\r\n        try {\r\n            //TODO: Implement getting users gifts\r\n            const gifts =  await giftsService.find({query: {userId: {$eq: userData.id}}});\r\n            //const resp = await axios.post(process.env.REACT_APP_HOSTNAME + '/getProfileGifts', req, {headers: {authorization: \"BEARER \" + authTokens}});\r\n            setGiftState(gifts.data);\r\n            // console.log(resp.data);\r\n        } catch (err) {\r\n            console.error(err);\r\n        }\r\n    };\r\n\r\n    const grabEvents = async () => {\r\n      try {\r\n          const events = await eventsService.find({query: {userId: {$eq: userData.id}}});\r\n          setEventState(events.data);\r\n      }  catch (err) {\r\n          console.error(err);\r\n      }\r\n    };\r\n\r\n    // Grabs the friends of an account\r\n    const grabFriends = async () => {\r\n        try {\r\n            //TODO update type to match whatever we need it to match that isn't 'friends' if we decide to change it\r\n            //TODO check to make sure the current user isn't blocked by the other user (blocking is not yet implemented future PBI)\r\n            const friends = await userRelationshipsService.find({\r\n                query: {userId: userData.id, type: 'friends'},\r\n            });\r\n            let friendData = [];\r\n            // This loop gets the other users id for all results\r\n            for (let key in friends.data) {\r\n                const otherUserId = friends.data[key].otherUserId;\r\n                const friend = await usersService.get(otherUserId)\r\n                friendData.push(friend);\r\n            }\r\n            setFriendState(friendData);\r\n\r\n            // OLD CODE\r\n            // const resp = await axios.post(process.env.REACT_APP_HOSTNAME + '/getProfileFriends', req, {headers: {authorization: \"BEARER \" + authTokens}});\r\n            // let friendData = [];\r\n            // for (let key in resp.data) {\r\n            //     if (resp.data.hasOwnProperty(key))\r\n            //         friendData.push(resp.data[key]);\r\n            // }\r\n            // setFriendState(friendData);\r\n        } catch (err) {\r\n            console.error(err);\r\n        }\r\n    };\r\n\r\n    // Button to send a friend request\r\n    const friendButton = async () => {\r\n        let payload = {\r\n            userId: user.id,\r\n            otherUserId: -1,\r\n            type: 'friend-request'\r\n        };\r\n        try {\r\n            const otherUser = await usersService.get(userData.id);\r\n            //Only gets 1 result since emails are unique (so I just grab index 0)\r\n            payload.otherUserId = otherUser.id;\r\n            const userRelationship = await userRelationshipsService.create(payload);\r\n            //TODO FIX THIS, should automatically be set if a relationship exists already\r\n            setState((prevState => ({...prevState, 'requested': true})))\r\n        } catch (err) {\r\n            //Could not create relationship\r\n            //This could be because a relationship already exists or the service just didn't work\r\n            console.log(err);\r\n        }\r\n        //TODO The notifying part, The request is succesfully mad eon the database\r\n\r\n        // axios.post(process.env.REACT_APP_HOSTNAME + '/sendFriendRequest', request, {headers: {authorization: \"BEARER \" + authTokens}}).then(res => {\r\n        //     emailjs.init('user_bXzpwCFcBzHuUs0r4UZNn');\r\n        //     let templateParams = {\r\n        //         name: state.name,\r\n        //         to_email: state.email,\r\n        //         message: \"You got a new friend request from \" + request.login + \"!\"\r\n        //     };\r\n        //     emailjs.send('service_kp36gdn', 'template_z9zqdff', templateParams, 'user_bXzpwCFcBzHuUs0r4UZNn')\r\n        //         .then((response) => {\r\n        //             console.log('SUCCESS!', response.status, response.text);\r\n        //         }, (err) => {\r\n        //             console.log('FAILED...', err);\r\n        //         });\r\n        // })\r\n    };\r\n\r\n    // When the component is rendered, this will grab the gifts, friends and activity as long as it is not a private\r\n    // account\r\n    useEffect(() => {\r\n        //Grab profile info\r\n        grabProfileInfo().then(function () {\r\n                if (!state.priv) {\r\n                    grabGifts();\r\n                    grabEvents();\r\n                    grabFriends();\r\n                    grabActivity();\r\n                }\r\n            }\r\n        );\r\n    }, [userData.id]);\r\n\r\n    function conditionRender() {\r\n        // TODO: Implement getting all sent friend requests\r\n        // axios.post(process.env.REACT_APP_HOSTNAME + '/getOutgoingFriendRequests', req1, {headers: {authorization: \"BEARER \" + authTokens}}).then(\r\n        //     resp => {\r\n        //         resp.data.map(function (item) {\r\n        //             if (item.receivingEmail === state.email) {\r\n        //                 state.requested = true;\r\n        //             }\r\n        //         })\r\n        //     }\r\n        // );\r\n        if (state.requested) {\r\n            return <Button style={{background: 'grey', border: 'grey'}} disabled={true}>Friend Request Sent</Button>\r\n        } else if (!state.friend && userData.id !== user.id) {\r\n            return <Button onClick={friendButton}>Add Friend</Button>\r\n        }\r\n\r\n    }\r\n\r\n    /*\r\n    This method maps out the activity pane depending on what was returned from the server\r\n    Simply, depending on if the activity was adding a friend, contributing etc. the text will differ\r\n    */\r\n    function activityRender() {\r\n        if (activityState.length === 0) {\r\n            return (\r\n                <Card.Body className={\"cardBody\"} style={{color: 'grey'}}>\r\n                    There is no activity to show!\r\n                </Card.Body>\r\n            )\r\n        } else {\r\n            return (<Card.Body className={\"cardBody\"}>\r\n                    {activityState.map(function (item, i) {\r\n                        if (item.type === \"CONTRIBUTE\") {\r\n                            return <p key={i}>{state.name} contributed to <a className={'activity-link'}\r\n                                                                             href={'/gifts/' + item.ID}>{item.otherName}'s\r\n                                gift</a> <p style={{color: 'gray'}}>\r\n                                - \"{item.giftName}\"</p></p>\r\n                        } else if (item.type === \"POST_GIFT\") {\r\n                            return <p key={i}>{state.name} has posted a <a className={'activity-link'}\r\n                                                                           href={'/gifts/' + item.ID}>new\r\n                                gift!</a> <p style={{color: 'gray'}}>\r\n                                - \"{item.giftName}\"</p></p>\r\n                        } else if (item.type === \"COMMENT\") {\r\n                            return <p key={i}>{state.name} has commented on <a className={'activity-link'}\r\n                                                                               href={'/gifts/' + item.ID}>{item.otherName}'s\r\n                                gift!</a>  <p style={{color: 'gray'}}>\r\n                                - \"{item.val}\"</p></p>\r\n                        } else if (item.type === \"ADD_FRIEND\") {\r\n                            return <p key={i}> {state.name} is now friends with <a\r\n                                className={'activity-link'}\r\n                                href={'/account/' + item.otherEmail}>{item.otherName}</a>\r\n                            </p>\r\n                        }\r\n                    })}\r\n                </Card.Body>\r\n            )\r\n        }\r\n    }\r\n\r\n    //used for carousel\r\n    const responsive = {\r\n        largeDesktop: {\r\n            breakpoint: { max: 5000, min: 2400 },\r\n            items: 4,\r\n            slidesToSlide: 4 // optional, default to 1.\r\n        },\r\n        desktop: {\r\n            breakpoint: { max: 2400, min: 1024 },\r\n            items: 3,\r\n            slidesToSlide: 3 // optional, default to 1.\r\n        },\r\n        tablet: {\r\n            breakpoint: { max: 1024, min: 464 },\r\n            items: 2,\r\n            slidesToSlide: 2 // optional, default to 1.\r\n        },\r\n        mobile: {\r\n            breakpoint: { max: 464, min: 0 },\r\n            items: 1,\r\n            slidesToSlide: 1 // optional, default to 1.\r\n        }};\r\n\r\n    /*\r\n    Rendering in events\r\n     */\r\n    function eventRender() {\r\n        if (eventState.length === 0) {\r\n            return (<Card.Body className={\"eventDiv cardBody\"} style={{color: 'grey'}}>\r\n                There are no events to show!\r\n            </Card.Body>)\r\n        } else {\r\n            return (<Card.Body id={\"eventDiv cardBody\"}>\r\n                    <Carousel\r\n                        responsive={responsive}\r\n                        renderButtonGroupOutside={true}\r\n                        swipeable={false}\r\n                        draggable={false}\r\n                        showDots={true}\r\n                        ssr={true} // means to render carousel on server-side.\r\n                        infinite={false}\r\n                        containerClass=\"pop-gift-container\"\r\n                    >\r\n                        {eventState.map(function (event, i) {\r\n                            return <Container className={'mb-3 border'}>\r\n                                <EventSM event={event} key={i}/>\r\n                            </Container>\r\n                        })}\r\n                    </Carousel>\r\n                </Card.Body>\r\n            )\r\n        }\r\n    }\r\n\r\n    /*\r\n    Rendering in gifts\r\n     */\r\n    function giftRender() {\r\n        if (giftState.length === 0) {\r\n            return (<Card.Body className={\"giftDiv cardBody\"} style={{color: 'grey'}}>\r\n                There are no gifts to show!\r\n            </Card.Body>)\r\n        } else {\r\n            return (<Card.Body id={\"giftDiv cardBody\"}>\r\n                    {giftState.map(function (gift, i) {\r\n                        return <Container className={'mb-3 border'}>\r\n                            <GiftPro gift={gift} key={i} email={state.email}/>\r\n                        </Container>\r\n                    })}\r\n                </Card.Body>\r\n            )\r\n        }\r\n    }\r\n\r\n    /*\r\n    Rendering in friends list\r\n     */\r\n    function friendRender() {\r\n        if (friendState.length === 0) {\r\n            return (<Card.Body className={\"cardBody\"} style={{color: 'grey'}}>\r\n                Be their first friend!! Press the Add Friend button above!\r\n            </Card.Body>);\r\n        } else {\r\n            return (<Card.Body id=\"FriendDisDiv\" className={\"cardBody\"}>\r\n                <Container id={'friends'}>\r\n                    {friendState.map(function (item, i) {\r\n                        return <FriendSnippet class={'snippet'} data={item}/>\r\n                    })\r\n                    }\r\n                </Container>\r\n            </Card.Body>);\r\n        }\r\n    }\r\n\r\n    /*\r\n    Depending on if an account is private or not, we will render in different things.\r\n     */\r\n    function privRender() {\r\n        if (state.priv) {\r\n            return (\r\n                <Row>\r\n                    <Col className={'d-flex justify-content-center'}>\r\n                        <Card style={{width: '100%'}}>\r\n                            <Card.Header className={'cardHeader d-flex justify-content-center'}>\r\n                                This account is private!\r\n                            </Card.Header>\r\n                        </Card>\r\n                    </Col>\r\n                </Row>)\r\n        } else {\r\n            {/*Activity Pane and Friends List*/\r\n            }\r\n            return (<Row className={\"mt-3\"}>\r\n                    <Col md={4}>\r\n                        <Card className={\"card\"}>\r\n                            <Card.Header className={\"cardHeader\"}>\r\n                                Activity\r\n                            </Card.Header>\r\n                            {activityRender()}\r\n                        </Card>\r\n                    </Col>\r\n                    <Col md={8}>\r\n                        {/*Friends List*/}\r\n                        <Card className={\"card\"}>\r\n                            <Card.Header className={\"cardHeader\"}>Friends List</Card.Header>\r\n                            {friendRender()}\r\n                        </Card>\r\n                        <Card className={\"mt-3 card\"}>\r\n                            <Card.Header className={\"cardHeader\"}>\r\n                                Upcoming Events\r\n                            </Card.Header>\r\n                            {eventRender()}\r\n                        </Card>\r\n                        <Card className={\"mt-3 card\"}>\r\n                            <Card.Header className={\"cardHeader\"}>\r\n                                Wish List\r\n                            </Card.Header>\r\n                            {giftRender()}\r\n                        </Card>\r\n                    </Col>\r\n                </Row>\r\n            )\r\n        }\r\n    }\r\n\r\n    //React returning the component\r\n    return (\r\n        <div id={'accountBody'}>\r\n            <Header/>\r\n            <Container className={\"my-3\"}>\r\n                {/*Picture and Bio*/}\r\n                <Row className={\"mt-3 d-flex justify-content-center\"}>\r\n                    <Col md={4} className={'d-flex justify-content-end'}>\r\n                        <img src={state.pic} alt=\"Profile Picture\" id={'profilePicture'}/>\r\n                    </Col>\r\n                    <Col md={4} className={'pt-5'} id={\"bio\"}>\r\n                        <h2>{state.name}</h2>\r\n                        <p>{state.bio}</p>\r\n                        {userData.id === ''+user.id ? <GiftButton/> : conditionRender()}\r\n                    </Col>\r\n                </Row>\r\n                {privRender()}\r\n            </Container>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nexport default withRouter(AccountComp);\r\n","import React from \"react\";\r\nimport \"./AccountPage.css\"\r\nimport \"../../App.css\";\r\nimport AccountComp from \"../../components/account/AccountComp\";\r\nimport {withRouter} from \"react-router\";\r\n\r\n\r\nfunction Account() {\r\n\r\n//React returning the component\r\n    return (<AccountComp/>)\r\n}\r\n\r\nexport default withRouter(Account);\r\n","import React, { useEffect, useState } from 'react';\r\nimport '../../pages/gift/Gifts.css';\r\nimport {Image} from \"react-bootstrap\";\r\n\r\n\r\n/**\r\n *\r\n * @param props {Object} {email, date, comment, pic, name}\r\n * @returns {*}\r\n * @constructor\r\n */\r\nfunction Comment(props){\r\n\r\n    // Used to show how long ago a comment was posted\r\n    const[timeAgo, setTimeAgo] = useState('');\r\n\r\n    /**\r\n     * On page load\r\n     */\r\n    useEffect(() => {\r\n        setTimeAgo(convertToTimeSince(new Date(props.data.date)));\r\n    }, []);\r\n\r\n    /**\r\n     * Converts date in YYYY-MM-DD:hh:mm:ss format to <time units> ago\r\n     * @param date\r\n     * @returns {string}\r\n     */\r\n    const convertToTimeSince = (date) => {\r\n        const seconds = Math.floor((new Date() - date) / 1000);\r\n\r\n        let interval = seconds / 31536000;\r\n\r\n        if (interval > 1) {\r\n            let years = Math.floor(interval);\r\n            if(years === 1) return years + ' year ago';\r\n            return years + ' years ago';\r\n        }\r\n        interval = seconds / 2592000;\r\n        if (interval > 1) {\r\n            let months = Math.floor(interval);\r\n            if(months === 1) return months + ' month ago';\r\n            return months + ' months ago';\r\n        }\r\n        interval = seconds / 86400;\r\n        if (interval > 1) {\r\n            let days = Math.floor(interval);\r\n            if(days === 1) return days + ' day ago';\r\n            return days + ' days ago';\r\n        }\r\n        interval = seconds / 3600;\r\n        if (interval > 1) {\r\n            let hours = Math.floor(interval);\r\n            if(hours === 1) return hours + ' hour ago';\r\n            return hours + ' hours ago';\r\n        }\r\n        interval = seconds / 60;\r\n        if (interval > 1) {\r\n            let minutes = Math.floor(interval);\r\n            if(minutes === 1) return minutes + ' minute ago';\r\n            return minutes + ' minutes ago';\r\n        }\r\n        if (seconds === 1) return Math.floor(seconds) + ' second ago';\r\n        return Math.floor(seconds) + \" seconds ago\";\r\n    };\r\n\r\n\r\n    return (\r\n        <div className={'comment-container'}>\r\n            <div className={'comment-icon-container'}>\r\n                <Image className={'comment-icon'} src={props.data.pic} rounded/>\r\n            </div>\r\n            <div style={{width: '100%'}}>\r\n                <div className={'comment-header'}>\r\n                    <div>\r\n                        <span><a  href={'/account/' + props.data.email} className={'comment-user black-link'}>{props.data.name}</a></span>\r\n                    </div>\r\n                    <div className={'comment-date'}>\r\n                        <span>{timeAgo}</span>\r\n                    </div>\r\n                </div>\r\n                <p className={'comment'}>{props.data.comment}</p>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Comment;","import React, {useEffect, useState, useContext} from 'react';\r\nimport \"../../pages/gift/Gifts.css\";\r\nimport {Button, Card, Form, FormControl, Image, InputGroup, ProgressBar} from 'react-bootstrap';\r\nimport axios from 'axios';\r\nimport {UserContext} from \"../../utils/UserContext\";\r\nimport {Link, useParams} from 'react-router-dom';\r\nimport Comment from \"./Comment\";\r\nimport * as emailjs from \"emailjs-com\";\r\n\r\nimport { app, usersService, giftsService} from '../../utils/ServerConnection'\r\n\r\n\r\n/**\r\n * @param props {Object} {giftID}\r\n */\r\nfunction GiftLG(props) {\r\n\r\n    const {user} = useContext(UserContext);\r\n\r\n    const id = useParams();\r\n    /**\r\n     * States and consts\r\n     */\r\n    const [giftInfo, setGiftInfo] = useState({});\r\n    const [userFunds, setUserFunds] = useState('');\r\n    const [userInfo, setUserInfo] = useState({pic: ''});\r\n    const [creatorInfo, setCreatorInfo] = useState({pic: ''});\r\n    const [receiverInfo, setReceiverInfo] = useState({pic: ''});\r\n    const [giftComments, setGiftComments] = useState([]);\r\n    const [contributionInput, setContributionInput] = useState({\r\n        amount: '',\r\n        error: ''\r\n    });\r\n    const [commentInput, setCommentInput] = useState({\r\n        comment: '',\r\n        error: ''\r\n    });\r\n\r\n    /**\r\n     * On Page Load\r\n     */\r\n    useEffect(() => {\r\n        //We don't store the funds of a user currently in the new database\r\n        // pseudocode userservice.get(currentUser) blah blah blah end up with currentUser.funds from user object retrieved from feathers\r\n        setUserInfo(user);\r\n        giftsService.get(id.id)\r\n            .then((giftData) => {\r\n                setGiftInfo(giftData);\r\n                usersService.get(giftData.userId)\r\n                    .then((userData) => {\r\n                        setCreatorInfo(userData)\r\n                        usersService.get(giftData.receiverId)\r\n                            .then((receiverData) => {\r\n                                setReceiverInfo(receiverData)\r\n                            })\r\n                    })\r\n            })\r\n            .catch((err) => {\r\n                console.log(err);\r\n            })\r\n        // TODO Add something in the database to store comments on a gift\r\n        // These TODOs below are from the previous group\r\n\r\n\r\n        // //TODO: Decide how we want to store wallet funds\r\n        // axios.post(process.env.REACT_APP_HOSTNAME + \"/getWalletFunds\", {login: localStorage.getItem('email')}, {headers: {authorization: \"BEARER \" + authTokens}})\r\n        //     .then(function (response) {\r\n        //         setUserFunds(response.data.amount);\r\n        //     });\r\n        //\r\n\r\n\r\n        // //Get gift comments\r\n        // axios.post(process.env.REACT_APP_HOSTNAME + \"/getComments\", {\r\n        //     login: localStorage.getItem('email'),\r\n        //     giftID: props.giftID\r\n        // }, {headers: {authorization: \"BEARER \" + authTokens}})\r\n        //     .then(function (response) {\r\n        //         setGiftComments(response.data);\r\n        //     })\r\n    }, []);\r\n\r\n\r\n    /**Form Validation and Handlers\r\n     * @param e Button event\r\n     */\r\n    const handleContribute = (e) => {\r\n        e.preventDefault();\r\n\r\n        //Invalid price (entering letters, more than 2 digits for cents)\r\n        const expression = /^\\d+(.\\d{1,2})?$/;\r\n        let validAmount = expression.test(contributionInput.amount);\r\n\r\n        let funds = parseInt(userFunds);\r\n        funds /= 100;\r\n\r\n        // Validate form\r\n        if (contributionInput.amount === '') {\r\n            setContributionInput(prevState => ({...prevState, error: 'Must enter a contribution amount'}))\r\n        } else if (!validAmount) {\r\n            setContributionInput(prevState => ({...prevState, error: 'Must enter a valid price'}))\r\n            setContributionInput(prevState => ({...prevState, error: 'Must enter a valid price'}))\r\n            //upload gift\r\n        } else if (contributionInput.amount > funds) {\r\n            setContributionInput(prevState => ({\r\n                ...prevState,\r\n                error: 'You don\\'t have enough funds to make this contribution'\r\n            }))\r\n        } else {\r\n            //add gift, form is validated\r\n            let request = {\r\n                login: localStorage.getItem('email'),\r\n                giftID: giftInfo.giftID,\r\n                amount: contributionInput.amount * 100\r\n            };\r\n            axios.post(process.env.REACT_APP_HOSTNAME + '/contribute', request, {headers: {authorization: \"BEARER \" + user}})\r\n                .then(function (response) {\r\n                    if (response.data.status === 'ok') {\r\n                        window.location.reload();\r\n                    }\r\n                });\r\n            emailjs.init('user_bXzpwCFcBzHuUs0r4UZNn');\r\n            let templateParams = {\r\n                to_email: creatorInfo.email,\r\n                to_name: creatorInfo.name,\r\n                reply_to: 'sdlgiftex@gmail.com',\r\n                message: \"Someone Contributed to your gift!!\"\r\n            };\r\n            emailjs.send('service_kp36gdn', 'template_z9zqdff', templateParams, 'user_bXzpwCFcBzHuUs0r4UZNn')\r\n                .then((response) => {\r\n                    console.log('SUCCESS!', response.status, response.text);\r\n                }, (err) => {\r\n                    console.log('FAILED...', err);\r\n                });\r\n        }\r\n    };\r\n\r\n    /**\r\n     * @returns {boolean} true if there exists an error in contribution input\r\n     */\r\n    const isInvalidForm = () => {\r\n        return contributionInput.error !== '';\r\n    };\r\n\r\n    /**\r\n     * @returns {boolean} true if there exists an error in comment input\r\n     */\r\n    const isInvalidComment = () => {\r\n        return commentInput.error !== '';\r\n    };\r\n\r\n\r\n    /**\r\n     * Update changes to contribution input\r\n     * @param e\r\n     */\r\n    const handleAmountChange = (e) => {\r\n        setContributionInput(prevState => ({...prevState, error: ''}));\r\n        setContributionInput(prevState => ({...prevState, amount: e.target.value}))\r\n    };\r\n\r\n    /**\r\n     * Update changes to comment input\r\n     * @param e\r\n     */\r\n    const handleCommentChange = (e) => {\r\n        setCommentInput(prevState => ({...prevState, comment: e.target.value}));\r\n        setCommentInput(prevState => ({...prevState, error: ''}));\r\n    };\r\n\r\n    Number.prototype.padLeft = function (base, chr) {\r\n        var len = (String(base || 10).length - String(this).length) + 1;\r\n        return len > 0 ? new Array(len).join(chr || '0') + this : this;\r\n    };\r\n\r\n    /**\r\n     * Gets current time in YYYY-MM-DD:hh:mm:ss format\r\n     * @returns {string}\r\n     */\r\n    const getCurrentDatetime = () => {\r\n        let d = new Date;\r\n        return [d.getFullYear(),\r\n                (d.getMonth() + 1).padLeft(),\r\n                d.getDate().padLeft()].join('-') + ' ' +\r\n            [d.getHours().padLeft(),\r\n                d.getMinutes().padLeft(),\r\n                d.getSeconds().padLeft()].join(':');\r\n    };\r\n\r\n    /**\r\n     * Add comment handler\r\n     * @param e\r\n     */\r\n    const handleAddComment = (e) => {\r\n\r\n        e.preventDefault();\r\n\r\n        // Check if user entered nothing\r\n        if (commentInput.comment === '') {\r\n            setCommentInput(prevState => ({...prevState, error: 'Invalid Comment'}))\r\n        } else {\r\n            let request = {\r\n                login: localStorage.getItem('email'),\r\n                giftID: giftInfo.giftID,\r\n                datetime: getCurrentDatetime(),\r\n                comment: commentInput.comment\r\n            };\r\n            axios.post(process.env.REACT_APP_HOSTNAME + '/addComment', request, {headers: {authorization: \"BEARER \" + user}})\r\n                .then(function (response) {\r\n                    let templateParams = {\r\n                        to_email: creatorInfo.email,\r\n                        to_name: creatorInfo.name,\r\n                        reply_to: 'sdlgiftex@gmail.com',\r\n                        message: \"Someone commented on your gift!!\"\r\n                    };\r\n                    emailjs.send('service_kp36gdn', 'template_z9zqdff', templateParams, 'user_bXzpwCFcBzHuUs0r4UZNn')\r\n                        .then((response) => {\r\n                            console.log('SUCCESS!', response.status, response.text);\r\n                        }, (err) => {\r\n                            console.log('FAILED...', err);\r\n                        });\r\n                    window.location.reload();\r\n                })\r\n        }\r\n\r\n\r\n    };\r\n\r\n    return (\r\n        <div className={'content-container'}>\r\n            <div className={'grid-container'}>\r\n                <div className={'grid-gift-image'}>\r\n                    <div className={'giftLG-thumbnail-container'}>\r\n                        <img className={'giftLG-thumbnail'} src={giftInfo.thumbnail} alt={'pic'}/>\r\n                    </div>\r\n                    <div className={'gift-alt-images-container'}>\r\n                    </div>\r\n                </div>\r\n                <div className={'grid-gift-info'}>\r\n                    <h2 className={'gift-title'}> {giftInfo.name}</h2>\r\n                    <span className={'gift-lg-funds'}>${giftInfo.progress}</span><br/>\r\n                    <span className={'gift-lg-price'}>of ${giftInfo.price} funded</span>\r\n                    <ProgressBar animated now={(giftInfo.progress/ giftInfo.price) * 100}/><br/>\r\n                    <label htmlFor=\"amount\">Contribution Amount</label><br/>\r\n                    <InputGroup>\r\n                        <InputGroup.Prepend>\r\n                            <InputGroup.Text>$</InputGroup.Text>\r\n                        </InputGroup.Prepend>\r\n                        <FormControl className={isInvalidForm() ? 'is-invalid' : ''} onChange={handleAmountChange}\r\n                                     id={'amount'}/>\r\n                    </InputGroup>\r\n                    <div className={isInvalidForm() ? 'form-error-message' : 'hidden'}>{contributionInput.error}</div>\r\n                    <br/>\r\n                    <Button onClick={handleContribute} size=\"lg\" block>\r\n                        Contribute\r\n                    </Button>\r\n                </div>\r\n            </div>\r\n            <div className={'grid-container-half'}>\r\n                <div className={'grid-gift-for'}>\r\n                    <Card>\r\n                        <Card.Header>\r\n                            Posted By\r\n                        </Card.Header>\r\n                        <Card.Body>\r\n                            <div className={'user-card'}>\r\n                                <div>\r\n                                    <Image src={creatorInfo.profile_pic} rounded/>\r\n                                </div>\r\n                                <Link className={'no-dec-link'} to={`/account/${creatorInfo.id}`}>\r\n                                    <div className={'card-email-container'}>\r\n                                        {creatorInfo.name}\r\n                                    </div>\r\n                                </Link>\r\n                            </div>\r\n                        </Card.Body>\r\n                    </Card>\r\n                </div>\r\n                <div className={'grid-gift-from'}>\r\n                    <Card className={'card'}>\r\n                        <Card.Header>\r\n                            Receiver\r\n                        </Card.Header>\r\n                        <Card.Body>\r\n                            <div className={'user-card'}>\r\n                                <div>\r\n                                    <Image src={receiverInfo.pic} rounded/>\r\n                                </div>\r\n                                <Link className={'no-dec-link'} to={`/account/${receiverInfo.id}`}>\r\n                                    <div className={'card-email-container'}>\r\n                                        {receiverInfo.name}\r\n                                    </div>\r\n                                </Link>\r\n                            </div>\r\n                        </Card.Body>\r\n                    </Card>\r\n                </div>\r\n                <div className={'grid-gift-description'}>\r\n                    <Card>\r\n                        <Card.Header>\r\n                            Description\r\n                        </Card.Header>\r\n                        <Card.Body>\r\n                            <div className={'user-card'}>\r\n                                {giftInfo.description}\r\n                            </div>\r\n                        </Card.Body>\r\n                    </Card>\r\n                </div>\r\n                <div className={'grid-gift-comments'}>\r\n                    <Card>\r\n                        <Card.Header>\r\n                            Comments\r\n                        </Card.Header>\r\n                        <Card.Body>\r\n                            <div className={'create-comment-container'}>\r\n                                <div className={'comment-and-icon'}>\r\n                                    <div className={'comment-icon-container'}>\r\n                                        <Image className={'comment-icon'} src={userInfo.pic} rounded/>\r\n                                    </div>\r\n                                    <div className={'comment-text-container'}>\r\n                                        <Form.Group className={'comment-textarea'}>\r\n                                            <Form.Control id={'comment-text'}\r\n                                                          className={isInvalidComment() ? 'is-invalid' : ''}\r\n                                                          onChange={(e) => handleCommentChange(e)}\r\n                                                          placeholder={'Add a comment...'} as=\"textarea\" rows={3}/>\r\n                                        </Form.Group>\r\n                                        <div id={'comment-error'}\r\n                                             className={isInvalidComment() ? 'form-error-message' : 'hidden'}>{commentInput.error}</div>\r\n                                    </div>\r\n                                </div>\r\n                                <div className={'create-comment-button'}>\r\n                                    <Button size={'sm'} onClick={(e) => handleAddComment(e)}>Add Comment</Button>\r\n                                </div>\r\n                            </div>\r\n                            <div>\r\n                                {giftComments.map(comment => {\r\n                                    return <Comment data={comment}/>\r\n                                })}\r\n                            </div>\r\n                        </Card.Body>\r\n                    </Card>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default GiftLG;\r\n","import React from 'react'\r\nimport GiftLG from \"../../components/gifts/GiftLG\";\r\nimport Header from \"../../components/header/Header.js\";\r\nimport { useParams } from 'react-router-dom';\r\n\r\n/*\r\nPage for rendering a page description\r\n*/\r\nfunction Gift() {\r\n\r\n    let { id } = useParams();\r\n\r\n    return (\r\n        <div>\r\n            <Header/>\r\n            <GiftLG giftID = {id}/>\r\n       </div>\r\n    )\r\n\r\n}\r\n\r\nexport default Gift;\r\n","import React, {useEffect, useState} from 'react'\r\nimport Header from \"../../components/header/Header\";\r\nimport GiftSM from \"../../components/gifts/GiftSM\";\r\nimport \"./SearchPage.css\"\r\nimport {UserContext} from \"../../utils/UserContext\";\r\nimport {Button, Card, Container, FormControl, InputGroup, Row} from \"react-bootstrap\";\r\nimport axios from \"axios\";\r\n\r\n/**\r\n * This page handles the gift searching page\r\n * @returns {JSX.Element}\r\n * @constructor\r\n */\r\nfunction SearchGift() {\r\n    //const {authTokens} = useAuth();\r\n\r\n    //Search information\r\n    const [state, setState] = useState({\r\n        giftName: '',\r\n        receivingName: '',\r\n        maxPrice: '',\r\n        minPrice: '',\r\n        remainingFunds: '',\r\n        description: '',\r\n        maxDate: '',\r\n        minDate: '',\r\n        link: '',\r\n        sort: '',\r\n        deadline: ''\r\n    });\r\n\r\n    const [giftState, setGiftState] = useState([]);\r\n\r\n    //Search submit\r\n    const handleSearchSubmit = () => {\r\n        //console.log(state.giftName + \" \" + state.receivingName + \" \" + state.description + \" \" + state.link + \" \" + state.minPrice + \" \" + state.maxPrice + \" \" + state.remainingFunds + \" \" + state.minDate + \" \" + state.maxDate + \" \"  + state.deadline);\r\n        grabGifts();\r\n    }\r\n\r\n    const handleChange = (e) => {\r\n        const {name, value} = e.target\r\n        setState(prevState => ({\r\n            ...prevState,\r\n            [name]: value\r\n        }));\r\n    }\r\n\r\n    //Retrieve gifts\r\n    const grabGifts = async () => {\r\n        try {\r\n            const req = {}\r\n            if(state.giftName !== '') {\r\n                req.name = state.giftName;\r\n            }\r\n            if(state.receivingName !== '') {\r\n                req.receivingName = state.receivingName;\r\n            }\r\n            if(state.maxPrice !== '') {\r\n                req.maxPrice = state.maxPrice*100;\r\n            }\r\n            if(state.minPrice !== '') {\r\n                req.minPrice = state.minPrice*100;\r\n            }\r\n            if(state.maxDate !== '') {\r\n                req.maxDate = state.maxDate;\r\n            }\r\n            if(state.minDate !== '') {\r\n                req.minDate = state.minDate;\r\n            }\r\n            if(state.remainingFunds !== '') {\r\n                req.remainingFunds = state.remainingFunds*100;\r\n            }\r\n            if(state.deadline !== '') {\r\n                req.deadline = state.deadline;\r\n            }\r\n            if(state.description !== '') {\r\n                req.description = state.description;\r\n            }\r\n            if(state.link !== '') {\r\n                req.link = state.link;\r\n            }\r\n            if(state.sort !== '') {\r\n                req.sort = state.sort;\r\n            }\r\n            //const resp = await axios.post(process.env.REACT_APP_HOSTNAME + '/getTopGifts', req, {headers: {authorization: \"BEARER \" + authTokens}});\r\n            //setGiftState(resp.data);\r\n        } catch (err) {\r\n            console.error(err);\r\n        }\r\n    };\r\n\r\n\r\n    useEffect(() => {\r\n        grabGifts()\r\n    }, []);\r\n\r\n    function giftRender(){\r\n        if(giftState.length === 0){\r\n            return (<Container className={\"text-center\"} style={{color: 'grey'}}>\r\n                Search for a gift...\r\n            </Container>)\r\n        } else {\r\n            return (<Container className={\"text-center\"}>\r\n                    {giftState.map(function (gift, i) {\r\n                        return <GiftSM gift={gift} key={i}/>\r\n                    })}\r\n                </Container>\r\n            )}\r\n    }\r\n\r\n    return (\r\n        <div id={'searchBody'}>\r\n            <Header/>\r\n            <Container className={\"my-3 mb-2\"}>\r\n                {/* ATTEMPTED TO IMPLEMENT BOOTSTRAP - INTEND TO FIX IN THE FUTURE*/}\r\n                <Row className={'ml-2'}>\r\n                    <FormControl className={'searchFieldLarge'} type={'text'}\r\n                            name={'giftName'}\r\n                            placeholder={'Gift Title...'}\r\n                            onChange={handleChange}\r\n                            value={state.value} />\r\n                    <FormControl className={'searchFieldLarge'} type={'text'}\r\n                        name={'receiverName'}\r\n                        placeholder={'Gift receiver...'}\r\n                            onChange={handleChange}\r\n                            value={state.value} />\r\n                    <FormControl className={'searchFieldExtraLarge'} type={'text'}\r\n                        name={'description'}\r\n                        placeholder={'Description contains...'}\r\n                            onChange={handleChange}\r\n                            value={state.value} />\r\n                    <FormControl className={'searchFieldExtraLarge'} type={'text'}\r\n                            name={'link'}\r\n                            placeholder={'Gift product link...'}\r\n                            onChange={handleChange}\r\n                            value={state.value} />\r\n\r\n                    <InputGroup className={'mb-2 inputGroup'}>\r\n                        <InputGroup.Prepend>\r\n                            <InputGroup.Text>Min price</InputGroup.Text>\r\n                        </InputGroup.Prepend>\r\n                        <FormControl className={'searchFieldSmall'} type={'text'}\r\n                                name={'minPrice'}\r\n                                placeholder={'...'}\r\n                                onChange={handleChange}\r\n                                value={state.value} />\r\n                    </InputGroup>\r\n                    <InputGroup className={'mb-2 inputGroup'}>\r\n                        <InputGroup.Prepend>\r\n                            <InputGroup.Text>Max price</InputGroup.Text>\r\n                        </InputGroup.Prepend>\r\n                        <FormControl className={'searchFieldSmall'} type={'text'}\r\n                                name={'maxPrice'}\r\n                                placeholder={'...'}\r\n                                onChange={handleChange}\r\n                                value={state.value} />\r\n                    </InputGroup>\r\n                    <InputGroup className={'mb-2 inputGroup'}>\r\n                        <InputGroup.Prepend>\r\n                            <InputGroup.Text>Remaining funds</InputGroup.Text>\r\n                        </InputGroup.Prepend>\r\n                        <FormControl className={'searchFieldSmall'} type={'text'}\r\n                                name={'remainingFunds'}\r\n                                placeholder={'...'}\r\n                                onChange={handleChange}\r\n                                value={state.value} />\r\n                    </InputGroup>\r\n                    <InputGroup className={'mb-2 inputGroup'}>\r\n                        <InputGroup.Prepend>\r\n                            <InputGroup.Text>Min date</InputGroup.Text>\r\n                        </InputGroup.Prepend>\r\n                        <FormControl className={'searchFieldMedium'} type={'text'}\r\n                                name={'minDate'}\r\n                                placeholder={'YYYY-MM-DD'}\r\n                                onChange={handleChange}\r\n                                value={state.value} />\r\n                    </InputGroup>\r\n                    <InputGroup className={'mb-2 inputGroup'}>\r\n                        <InputGroup.Prepend>\r\n                            <InputGroup.Text>Max date</InputGroup.Text>\r\n                        </InputGroup.Prepend>\r\n                        <FormControl className={'searchFieldMedium'} type={'text'}\r\n                                name={'maxDate'}\r\n                                placeholder={'YYYY-MM-DD'}\r\n                                onChange={handleChange}\r\n                                value={state.value} />\r\n                    </InputGroup>\r\n                    <InputGroup className={'mb-2 inputGroup'}>\r\n                        <InputGroup.Prepend>\r\n                            <InputGroup.Text>Deadline</InputGroup.Text>\r\n                        </InputGroup.Prepend>\r\n                        <FormControl className={'searchFieldMedium'} type={'text'}\r\n                                name={'deadline'}\r\n                                placeholder={'YYYY-MM-DD'}\r\n                                onChange={handleChange}\r\n                                value={state.value} />\r\n                    </InputGroup>\r\n                </Row>\r\n                {/**/}\r\n\r\n                {/*\r\n                <input className={'searchFieldLarge'} type={'text'}\r\n                       name={'giftName'}\r\n                       placeholder={'Gift Title...'}\r\n                       onChange={handleChange}\r\n                       value={state.value} />\r\n                <input className={'searchFieldLarge'} type={'text'}\r\n                       name={'receivingName'}\r\n                       placeholder={'Gift receiver...'}\r\n                       onChange={handleChange}\r\n                       value={state.value} />\r\n                <input className={'searchFieldExtraLarge'} type={'text'}\r\n                       name={'description'}\r\n                       placeholder={'Description contains...'}\r\n                       onChange={handleChange}\r\n                       value={state.value} />\r\n                <input className={'searchFieldExtraLarge'} type={'text'}\r\n                       name={'link'}\r\n                       placeholder={'Gift product link...'}\r\n                       onChange={handleChange}\r\n                       value={state.value} />\r\n                <br/>\r\n                <label className={'search-label'}>Min price:</label>\r\n                <input className={'searchFieldSmall'} type={'text'}\r\n                       name={'minPrice'}\r\n                       placeholder={'...'}\r\n                       onChange={handleChange}\r\n                       value={state.value} />\r\n                <label className={'search-label'}>Max price:</label>\r\n                <input className={'searchFieldSmall'} type={'text'}\r\n                       name={'maxPrice'}\r\n                       placeholder={'...'}\r\n                       onChange={handleChange}\r\n                       value={state.value} />\r\n                <label className={'search-label'}>Remaining funds:</label>\r\n                <input className={'searchFieldSmall'} type={'text'}\r\n                       name={'remainingFunds'}\r\n                       placeholder={'...'}\r\n                       onChange={handleChange}\r\n                       value={state.value} />\r\n                <label className={'search-label'}>Min date:</label>\r\n                <input className={'searchFieldMedium'} type={'text'}\r\n                       name={'minDate'}\r\n                       placeholder={'YYYY-MM-DD'}\r\n                       onChange={handleChange} />\r\n                <label className={'search-label'}>Max date:</label>\r\n                <input className={'searchFieldMedium'} type={'text'}\r\n                       name={'maxDate'}\r\n                       placeholder={'YYYY-MM-DD'}\r\n                       onChange={handleChange}\r\n                       value={state.value} />\r\n                <label className={'search-label'}>Deadline:</label>\r\n                <input className={'searchFieldMedium'} type={'text'}\r\n                       name={'deadline'}\r\n                       placeholder={'YYYY-MM-DD'}\r\n                       onChange={handleChange}\r\n                       value={state.value} />\r\n               */}\r\n\r\n               <Button className={'mt-2'} onClick={handleSearchSubmit} variant=\"warning\" size=\"sm\" block>Search</Button>\r\n\r\n            </Container>\r\n            <Card>\r\n                {giftRender()}\r\n            </Card>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default SearchGift;\r\n","import { useEffect } from \"react\";\r\nimport { useLocation } from \"react-router-dom\";\r\n\r\n/**\r\n * Used to scroll every webpage to the top when a user goes to a different page\r\n * @returns {null}\r\n * @constructor\r\n */\r\nexport default function ScrollToTop() {\r\n    const { pathname } = useLocation();\r\n\r\n    useEffect(() => {\r\n        window.scrollTo(0, 0);\r\n    }, [pathname]);\r\n\r\n    return null;\r\n}","import React from 'react'\r\nimport './Loading.css'\r\n\r\n/**\r\n * Used to show a loading circle when the client requests Amazon Item information from Server\r\n * @returns {*}\r\n * @constructor\r\n */\r\nexport default function Loading() {\r\n    return(\r\n        <div className=\"loading\"/>\r\n    )\r\n}","import React, {useState, useContext} from 'react';\r\nimport {Button, Col, Form, FormControl, InputGroup, Tab, Tabs, Image} from \"react-bootstrap\";\r\nimport axios from \"axios\";\r\nimport {UserContext} from \"../../utils/UserContext\";\r\nimport Header from \"../../components/header/Header\";\r\nimport Loading from \"../../components/loading/Loading\"\r\nimport \"./AddGift.css\";\r\nimport \"./Gifts.css\";\r\nimport {app, giftsService, usersService} from '../../utils/ServerConnection'\r\nimport {add} from \"react-modal/lib/helpers/classList\";\r\nimport {ToastContainer, toast} from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\n\r\n\r\nfunction AddGift() {\r\n\r\n    const {user} = useContext(UserContext);\r\n\r\n    const [addGift, setAddGift] = useState({\r\n        name: '',\r\n        price: 0,\r\n        thumbnail: '',\r\n        description: '',\r\n        link: '',\r\n        priv: 0,\r\n        deadline: '',\r\n        amazonUrl: '',\r\n        email: '',\r\n        userId: user.id,\r\n    });\r\n\r\n    const [errors, setErrors] = useState({\r\n        nameError: '',\r\n        descriptionError: '',\r\n        priceError: '',\r\n        linkError: '',\r\n        thumbnailError: '',\r\n        emailError: ''\r\n    });\r\n\r\n    const [hasAmazonProductData, setHasAmazonProductData] = useState(false);\r\n    const [isLoading, setLoading] = useState(false);\r\n\r\n    // Error handlers for form\r\n    const hasNameError = () => {\r\n        return errors.nameError !== '';\r\n    };\r\n\r\n    const hasDescriptionError = () => {\r\n        return errors.descriptionError !== '';\r\n    };\r\n\r\n    const hasPriceError = () => {\r\n        return errors.priceError !== '';\r\n    };\r\n\r\n    const hasEmailError = () => {\r\n        return errors.emailError !== '';\r\n    };\r\n\r\n    const hasLinkError = () => {\r\n        return errors.linkError !== '';\r\n    };\r\n\r\n    const hasThumbnailError = () => {\r\n        return errors.thumbnailError !== '';\r\n    };\r\n\r\n    const handlePrivateChecked = () => {\r\n        setAddGift(prevState => ({...prevState, priv: addGift.priv ? 0 : 1}));\r\n    };\r\n\r\n    const addGiftAlert = () => toast(\"Your gift has been added!\");\r\n\r\n    const handleAddGift = async (e) => {\r\n        e.preventDefault();\r\n\r\n        const expression = /^(\\d+)(\\.\\d{1,2})?$/;\r\n        let validAmount = expression.test(addGift.price);\r\n\r\n        //The following check if the user left an input box empty\r\n        if (addGift.name === '') {\r\n            setErrors(prevState => ({...prevState, nameError: 'Value cannot be empty'}))\r\n        } else if (addGift.description === '') {\r\n            setErrors(prevState => ({...prevState, descriptionError: 'Value cannot be empty'}))\r\n        } else if (!validAmount) {\r\n            setErrors(prevState => ({...prevState, priceError: 'Must enter a valid price'}))\r\n        } else if (addGift.price === 0) {\r\n            setErrors(prevState => ({...prevState, priceError: 'Value cannot be empty'}))\r\n        } else if (addGift.receiver === '') {\r\n            setErrors(prevState => ({...prevState, emailError: 'Value cannot be empty'}))\r\n        } else if (addGift.link === '') {\r\n            setErrors(prevState => ({...prevState, linkError: 'Value cannot be empty'}))\r\n        } else if (addGift.thumbnail === '') {\r\n            setErrors(prevState => ({...prevState, thumbnailError: 'Value cannot be empty'}))\r\n            //form is validated\r\n        } else {\r\n            try {\r\n                const receiverData = await usersService.find({query: {email: addGift.email}})\r\n                    .then()\r\n                    .catch({/*TODO: Send error saying no email found*/});\r\n\r\n                const giftData = await giftsService.create({\r\n                    ...addGift, receiverId: receiverData.data[0].id,\r\n                    receiverName: receiverData.data[0].name\r\n                });\r\n                console.log(\"Gift for\", receiverData.data[0].name, \"created!\")\r\n                addGiftAlert();\r\n                //window.location.href = `/account/${user.id}`;\r\n                //window.location.href = `/gifts/${giftData.id}`;\r\n                //TODO: Gotta edit the GiftLG to properly populate the gift page with the gift ID\r\n            } catch (err) {\r\n                //TODO show user the error\r\n                console.log(err);\r\n            }\r\n            // axios.post(process.env.REACT_APP_HOSTNAME + \"/addGift\", addGift, {headers: {authorization: \"BEARER \" + authTokens}})\r\n            //     .then(function(response){\r\n            //         console.log(response);\r\n            //         window.location.href = `/gifts/${response.data.giftID}`;\r\n            //     })\r\n        }\r\n    };\r\n\r\n    // Get Amazon Product info\r\n    const getAmazonProductData = async () => {\r\n        setLoading(true);\r\n        try {\r\n            //TODO for some reason /amazon breaks auth so I have this reAuth in here\r\n            // Break meaning you are signed in (JWT in localStorage), but it doesn't acknowledge it\r\n            //await app.reAuthenticate();\r\n            const productData = await app.service('amazon').get(\"\", {query: {url: addGift.amazonUrl}});\r\n            setAddGift(prevState => ({\r\n                ...prevState,\r\n                name: productData.productTitle,\r\n                thumbnail: productData.image,\r\n                price: productData.price,\r\n                description: productData.productDescription,\r\n                link: addGift.amazonUrl\r\n            }));\r\n            setLoading(false);\r\n            setHasAmazonProductData(true);\r\n        } catch (error) {\r\n            console.log(error);\r\n        }\r\n\r\n        // axios.post(process.env.REACT_APP_HOSTNAME + \"/getAmazonProductInfo\", {url: addGift.amazonUrl} , {headers: {authorization: \"BEARER \" + authTokens}})\r\n        //     .then(function(response){\r\n        //         console.log(response);\r\n        //         setAddGift(prevState => ({\r\n        //             ...prevState,\r\n        //             name: response.data.productTitle,\r\n        //             thumbnail: response.data.image,\r\n        //             price: response.data.price,\r\n        //             description: response.data.description\r\n        //         }));\r\n        //         setLoading(false);\r\n        //         setHasAmazonProductData(true);\r\n        //     })\r\n    };\r\n\r\n    // Form handler\r\n    const handleChange = (e) => {\r\n        const {name, value} = e.target;\r\n        setAddGift(prevState => ({\r\n            ...prevState,\r\n            [name]: value\r\n        }));\r\n        setErrors(prevState => ({\r\n            ...prevState,\r\n            [name + 'Error']: ''\r\n        }));\r\n    };\r\n\r\n    // Will update when amazon product data is updated\r\n    const renderAmazonProductInfo = () => {\r\n        if (hasAmazonProductData) {\r\n            return (\r\n                <div>\r\n                    <Form.Group className={'form-group'}>\r\n                        <Form.Label>Name </Form.Label>\r\n                        <Form.Control className={hasNameError() ? 'is-invalid' : ''}\r\n                                      placeholder=\"Enter a name for your gift\"\r\n                                      value={addGift.name}\r\n                                      onChange={handleChange}\r\n                                      name={'name'}/>\r\n                        <div className={hasNameError() ? 'form-error-message' : 'hidden'}>{errors.nameError}</div>\r\n                    </Form.Group>\r\n\r\n                    <Form.Group className={'form-group'}>\r\n                        <Form.Label>Description </Form.Label>\r\n                        <Form.Control className={hasDescriptionError() ? 'is-invalid' : ''}\r\n                                      placeholder={'Enter a description for your gift'}\r\n                                      value={addGift.description}\r\n                                      as=\"textarea\" rows={3}\r\n                                      name={'description'}\r\n                                      onChange={handleChange}/>\r\n                        <div\r\n                            className={hasDescriptionError() ? 'form-error-message' : 'hidden'}>{errors.descriptionError}</div>\r\n                    </Form.Group>\r\n\r\n                    <Form.Group className={'form-group'}>\r\n                        <Form.Label>Price</Form.Label>\r\n                        <InputGroup className={'price-input'}>\r\n                            <InputGroup.Prepend>\r\n                                <InputGroup.Text>$</InputGroup.Text>\r\n                            </InputGroup.Prepend>\r\n                            <FormControl className={hasPriceError() ? 'is-invalid' : ''}\r\n                                         onChange={handlePriceChange}\r\n                                         name={'price'}\r\n                                         value={addGift.price}\r\n                                         placeholder={\"Enter the price of your gift\"}/>\r\n                        </InputGroup>\r\n                        <div className={hasPriceError() ? 'form-error-message' : 'hidden'}>{errors.priceError}</div>\r\n                    </Form.Group>\r\n\r\n                    <Form.Group className={'form-group'}>\r\n                        <Form.Label>Image</Form.Label>\r\n                        <div className={'amazon-image-container'}>\r\n                            <Image src={addGift.thumbnail} alt={addGift.name} fluid/>\r\n                        </div>\r\n                    </Form.Group>\r\n\r\n                    <Form.Group className={'form-group'}>\r\n                        <Form.Label>Receiver</Form.Label>\r\n                        <Form.Control className={hasEmailError() ? 'is-invalid' : ''}\r\n                                      placeholder=\"Enter the email of the user receiving the gift\"\r\n                                      name={'email'}\r\n                                      value={addGift.email}\r\n                                      onChange={handleChange}/>\r\n                        <div className={hasEmailError() ? 'form-error-message' : 'hidden'}>{errors.emailError}</div>\r\n                    </Form.Group>\r\n\r\n                    <Form.Group className={'form-group'}>\r\n                        <Form.Label>Deadline</Form.Label>\r\n                        <Form.Control placeholder=\"Enter a deadline for your gift\"\r\n                                      name={'deadline'}\r\n                                      type={'date'}\r\n                                      onChange={handleChange}/>\r\n                    </Form.Group>\r\n\r\n                    <Form.Group controlId=\"formBasicCheckbox\">\r\n                        <Form.Check onClick={handlePrivateChecked}\r\n                                    type={'checkbox'}\r\n                                    label={'Private'}/>\r\n                    </Form.Group>\r\n                    <Button onClick={handleAddGift}>Add Gift</Button>\r\n                    <ToastContainer\r\n                        position=\"bottom-left\"\r\n                        autoClose={5000}\r\n                        hideProgressBar={false}\r\n                        newestOnTop={false}\r\n                        closeOnClick\r\n                        rtl={false}\r\n                        pauseOnFocusLoss\r\n                        draggable\r\n                        pauseOnHover={false}\r\n                    />\r\n                </div>\r\n            )\r\n        }\r\n    };\r\n\r\n\r\n    const handlePriceChange = (e) => {\r\n        setAddGift(prevState => ({...prevState, price: Math.round(e.target.value)}));\r\n        setErrors(prevState => ({...prevState, priceError: ''}));\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            <Header/>\r\n            <div className={'content-container padding-container'}>\r\n                <h1>Add a Gift</h1>\r\n                <Tabs fill className={'tabs'} defaultActiveKey=\"manual\">\r\n                    <Tab eventKey=\"manual\" title=\"Manual\">\r\n                        <div className={'add-gift-form-container grey-background'}>\r\n                            <Form className={'gift-form'}>\r\n                                <Form.Group className={'form-group'}>\r\n                                    <Form.Label>Name</Form.Label>\r\n                                    <Form.Control className={hasNameError() ? 'is-invalid' : ''}\r\n                                                  placeholder=\"Enter a name for your gift\"\r\n                                                  onChange={handleChange}\r\n                                                  name={'name'}/>\r\n                                    <div\r\n                                        className={hasNameError() ? 'form-error-message' : 'hidden'}>{errors.nameError}</div>\r\n                                </Form.Group>\r\n\r\n                                <Form.Group className={'form-group'}>\r\n                                    <Form.Label>Description</Form.Label>\r\n                                    <Form.Control className={hasDescriptionError() ? 'is-invalid' : ''}\r\n                                                  placeholder={'Enter a description for your gift'}\r\n                                                  as=\"textarea\" rows={3}\r\n                                                  name={'description'}\r\n                                                  onChange={handleChange}/>\r\n                                    <div\r\n                                        className={hasDescriptionError() ? 'form-error-message' : 'hidden'}>{errors.descriptionError}</div>\r\n\r\n                                </Form.Group>\r\n\r\n                                <Form.Row>\r\n                                    <Form.Group as={Col} className={'form-group'}>\r\n                                        <Form.Label>Price</Form.Label>\r\n                                        <InputGroup className={'price-input'}>\r\n                                            <InputGroup.Text>$</InputGroup.Text>\r\n                                            <FormControl className={hasPriceError() ? 'is-invalid' : ''}\r\n                                                         onChange={handlePriceChange}\r\n                                                         name={'price'}\r\n                                                         placeholder={\"Enter the price of your gift\"}/>\r\n                                        </InputGroup>\r\n                                        <div\r\n                                            className={hasPriceError() ? 'form-error-message' : 'hidden'}>{errors.priceError}</div>\r\n                                    </Form.Group>\r\n\r\n                                    <Form.Group as={Col} className={'form-group'}>\r\n                                        <Form.Label>Deadline</Form.Label>\r\n                                        <Form.Control placeholder=\"Enter a deadline for your gift\"\r\n                                                      name={'deadline'}\r\n                                                      type={'date'}\r\n                                                      onChange={handleChange}/>\r\n                                    </Form.Group>\r\n                                </Form.Row>\r\n\r\n                                <Form.Group className={'form-group'}>\r\n                                    <Form.Label>Receiver</Form.Label>\r\n                                    <Form.Control className={hasEmailError() ? 'is-invalid' : ''}\r\n                                                  placeholder=\"Enter the email of the user receiving the gift\"\r\n                                                  name={'email'}\r\n                                                  onChange={handleChange}/>\r\n                                    <div\r\n                                        className={hasEmailError() ? 'form-error-message' : 'hidden'}>{errors.emailError}</div>\r\n                                </Form.Group>\r\n\r\n                                <Form.Group className={'form-group'}>\r\n                                    <Form.Label>Url</Form.Label>\r\n                                    <Form.Control className={hasLinkError() ? 'is-invalid' : ''}\r\n                                                  placeholder=\"Enter the Url for your gift\"\r\n                                                  name={'link'}\r\n                                                  onChange={handleChange}/>\r\n                                    <div\r\n                                        className={hasLinkError() ? 'form-error-message' : 'hidden'}>{errors.linkError}</div>\r\n                                </Form.Group>\r\n\r\n                                <Form.Group className={'form-group'}>\r\n                                    <Form.Label>Image</Form.Label>\r\n                                    <Form.Control className={hasThumbnailError() ? 'is-invalid' : ''}\r\n                                                  placeholder=\"Enter the Url to an image of your gift\"\r\n                                                  name={'thumbnail'}\r\n                                                  onChange={handleChange}/>\r\n                                    <div\r\n                                        className={hasThumbnailError() ? 'form-error-message' : 'hidden'}>{errors.thumbnailError}</div>\r\n                                </Form.Group>\r\n\r\n                                <Form.Group controlId=\"formBasicCheckbox\">\r\n                                    <Form.Check onClick={handlePrivateChecked}\r\n                                                type={'checkbox'}\r\n                                                label={'Private'}/>\r\n                                </Form.Group>\r\n\r\n                                <Button onClick={handleAddGift}>Add Gift</Button>\r\n                                <ToastContainer\r\n                                    position=\"bottom-left\"\r\n                                    autoClose={5000}\r\n                                    hideProgressBar={false}\r\n                                    newestOnTop={false}\r\n                                    closeOnClick\r\n                                    rtl={false}\r\n                                    pauseOnFocusLoss\r\n                                    draggable\r\n                                    pauseOnHover={false}\r\n                                />\r\n                            </Form>\r\n                        </div>\r\n                    </Tab>\r\n                    <Tab eventKey=\"profile\" title=\"Automatic\">\r\n                        <div className={'add-gift-form-container grey-background'}>\r\n                            <Form className={'gift-form'}>\r\n                                <Form.Group className={'form-group'}>\r\n                                    <Form.Label>Amazon Gift Url</Form.Label>\r\n                                    <Form.Control placeholder=\"Enter an Amazon Url for the gift you want to add\"\r\n                                                  onChange={handleChange}\r\n                                                  name={'amazonUrl'}/>\r\n                                </Form.Group>\r\n                                {!hasAmazonProductData && <Button onClick={getAmazonProductData}>Go</Button>}\r\n                                <div className={'d-flex justify-content-center'}>\r\n                                    {isLoading && <Loading/>}\r\n                                </div>\r\n                                {renderAmazonProductInfo()}\r\n                            </Form>\r\n                        </div>\r\n                    </Tab>\r\n                </Tabs>\r\n            </div>\r\n        </div>\r\n    )\r\n\r\n}\r\n\r\nexport default AddGift;\r\n","import Header from \"../../components/header/Header\";\r\nimport {Row, Card, Container, InputGroup, FormControl, Button} from \"react-bootstrap\";\r\nimport React, {useEffect, useState, useContext} from 'react'\r\nimport { InPlaceEditorComponent } from '@syncfusion/ej2-react-inplace-editor';\r\nimport '../../../node_modules/@syncfusion/ej2-react-inplace-editor/styles/material.css';\r\nimport '../../../node_modules/@syncfusion/ej2-buttons/styles/material.css';\r\nimport '../../../node_modules/@syncfusion/ej2-inputs/styles/material.css';\r\nimport '../../../node_modules/@syncfusion/ej2-base/styles/material.css';\r\nimport '../../../node_modules/@syncfusion/ej2-richtexteditor/styles/material.css';\r\nimport './Settings.css'\r\nimport {UserContext} from \"../../utils/UserContext\";\r\nimport {app, usersService} from '../../utils/ServerConnection'\r\n\r\n\r\nfunction Settings() {\r\n    const {user, setUser} = useContext(UserContext);\r\n\r\n\r\n    const [state, setState] = useState({\r\n        name: user.name,\r\n        priv: user.priv,\r\n        password: \"\",\r\n        confirmPassword: \"\",\r\n        email: \"\"\r\n    });\r\n\r\n    const [checked, setCheck] = useState(false);\r\n\r\n    /*\r\n    Retrieves profile information about the user\r\n     */\r\n    useEffect(() => {\r\n        // app.authenticate()\r\n        //     .then((userData) => {\r\n        //         console.log(userData);\r\n        //         console.log(\"Hi\");\r\n        //         setProfileInfo(userData.user);\r\n        //     })\r\n        //     .catch((err) => {\r\n        //         // TODO Show user the message\r\n        //         console.log(\"Not Signed in, returning to homepage in 5 seconds\");\r\n        //         window.setTimeout( () => {window.location.href = './'}, 5000)\r\n        //     });\r\n    }, []);\r\n\r\n    const handleChange = (e) => {\r\n        const {name, value} = e.target\r\n        setState(prevState => ({\r\n            ...prevState,\r\n            [name]: value\r\n        }));\r\n    }\r\n\r\n\r\n\r\n    /*\r\n    Used for rendering images\r\n     */\r\n    function arrayBufferToBase64(buffer) {\r\n        let binary = '';\r\n        let bytes = [].slice.call(new Uint8Array(buffer));\r\n        bytes.forEach((b) => binary += String.fromCharCode(b));\r\n        return window.btoa(binary);\r\n    }\r\n\r\n    /*\r\n    Handles changing name\r\n     */\r\n    const handleName = async () => {\r\n        await usersService.patch(user.id, {name: state.name})\r\n            .then((userInfo) => {\r\n                //TODO: Tell the user their name was successfully changed\r\n                setUser(userInfo);\r\n            }).catch(()=>{\r\n                console.log(\"Error changing name\")\r\n            });\r\n    }\r\n\r\n    const passwordMatch = () => {\r\n        return (state.password === state.confirmPassword ? true : console.log('Passwords do not match'));\r\n    }\r\n\r\n    /*\r\n    Handles changing passwords\r\n    TODO does not work please finish! Thanks Miriam and Chloe\r\n     */\r\n    const handlePassword = async () => {\r\n        if (passwordMatch()) {\r\n            await usersService.patch(user.id, {password: state.password})\r\n                .then((userInfo) => {\r\n                    setUser(userInfo);\r\n                    //TODO: Tell the user their password was successfully changed\r\n                }).catch(()=>{\r\n                    console.log(\"Error changing password\")\r\n                });\r\n        } else{\r\n            console.log(\"Passwords do not match\")\r\n            //TODO: Display passwords do not match message\r\n        }\r\n    }\r\n\r\n    /*\r\n    Changes the status of an account\r\n     */\r\n    const handlePrivate = async () => {\r\n        await usersService.patch(user.id, {private: state.priv})\r\n            .then((userInfo) => {\r\n                //TODO: Tell the user their private was successfully changed\r\n                setUser(userInfo);\r\n            }).catch(()=>{\r\n                console.log(\"Error changing private\")\r\n            });\r\n    }\r\n\r\n    return (\r\n        <div className={'textFont'}>\r\n            <Header/>\r\n            <Container className={'mt-3 w-75'}>\r\n                <Card>\r\n                    <Card.Header className={'text-center cardHeader'}><h3>Settings</h3></Card.Header>\r\n                    <Card.Body>\r\n                        {/* <Row className={'mb-5'}>\r\n                            <Col sm={12}>\r\n                                <InputGroup className=\"w-100\">\r\n                                    <InputGroup.Prepend>\r\n                                        <InputGroup.Text>Full name</InputGroup.Text>\r\n                                    </InputGroup.Prepend>\r\n                                    <FormControl\r\n                                        name='name'\r\n                                        placeholder={state.name}\r\n                                        aria-label={state.name}\r\n                                        aria-describedby=\"basic-addon2\"\r\n                                        value={state.value}\r\n                                        onChange={handleChange}\r\n                                    />\r\n                                    <InputGroup.Append>\r\n                                        <Button onClick={handleName}>Save Changes</Button>\r\n                                    </InputGroup.Append>\r\n                                </InputGroup>\r\n                            </Col>\r\n                        </Row>\r\n                        <Row className={'mb-5'}>\r\n                            <Col sm={5}>\r\n                                <InputGroup className=\"w-100\">\r\n                                    <InputGroup.Prepend>\r\n                                        <InputGroup.Text>Password</InputGroup.Text>\r\n                                    </InputGroup.Prepend>\r\n                                    <FormControl id='pass' type={'password'} name={'password'}\r\n                                                 placeholder=''\r\n                                                 aria-label=''\r\n                                                 aria-describedby=\"basic-addon2\"\r\n                                                 value={state.value}\r\n                                                 onChange={handleChange}\r\n                                    />\r\n                                </InputGroup>\r\n                            </Col>\r\n                            <Col sm={7}>\r\n                                <InputGroup className=\"w-100\">\r\n                                    <InputGroup.Prepend>\r\n                                        <InputGroup.Text>Confirm Password</InputGroup.Text>\r\n                                    </InputGroup.Prepend>\r\n                                    <FormControl id={'confirm-pass'} type={'password'}\r\n                                                 name={'confirmPassword'}\r\n                                                 placeholder=''\r\n                                                 aria-label=''\r\n                                                 aria-describedby=\"basic-addon2\"\r\n                                                 value={state.value}\r\n                                                 onChange={handleChange}\r\n                                    />\r\n                                    <InputGroup.Append>\r\n                                        <Button onClick={handlePassword}>Save Changes</Button>\r\n                                    </InputGroup.Append>\r\n                                </InputGroup>\r\n                            </Col>\r\n                        </Row> */}\r\n                        <Row className={'p-4'}>\r\n                            <InputGroup.Text>Full Name: </InputGroup.Text>\r\n                            <td className=\"sample-td\">\r\n                            <InPlaceEditorComponent\r\n                                id='name'\r\n                                model={{placeholder: 'Enter full name'}}\r\n                                mode='Inline'\r\n                                type='Text'\r\n                                value={state.name}\r\n                                saveButton={{ content: 'Save', cssClass: 'e-outline'}}\r\n                                cancelButton={{ content: 'Cancel', cssClass: 'e-outline' }}\r\n                                onChange={handleChange}\r\n                                />\r\n                            </td>\r\n                        </Row>\r\n                        <Row className={'p-4'}>\r\n                            <InputGroup.Text>Email Address: </InputGroup.Text>\r\n                            <td className=\"sample-td\">\r\n                            <InPlaceEditorComponent\r\n                                id='email'\r\n                                model={{placeholder: 'Enter email address'}}\r\n                                mode='Inline'\r\n                                type='Text'\r\n                                value={state.email}\r\n                                saveButton={{ content: 'Save', cssClass: 'e-outline'}}\r\n                                cancelButton={{ content: 'Cancel', cssClass: 'e-outline' }}\r\n                                onChange={handleChange}\r\n                                />\r\n                            </td>\r\n                        </Row>\r\n                        <Row className={'p-4'}>\r\n                            <InputGroup.Text>Password: </InputGroup.Text>\r\n                            <td className=\"sample-td\">\r\n                            <InPlaceEditorComponent\r\n                                id='pass'\r\n                                model={{placeholder: 'Enter password'}}\r\n                                mode='Inline'\r\n                                type='Text'\r\n                                value= {state.password}\r\n                                saveButton={{ content: 'Save', cssClass: 'e-outline' }}\r\n                                cancelButton={{ content: 'Cancel', cssClass: 'e-outline' }}\r\n                                onChange={handleChange}\r\n                                />\r\n\r\n                            </td>\r\n                        </Row>\r\n                        <Row className={'p-4'}>\r\n                            <InputGroup className=\"d-flex flex-row w-50\">\r\n\r\n                            <InputGroup.Text>Private Account</InputGroup.Text>\r\n\r\n                            <FormControl\r\n                                id='check' type={'checkbox'}\r\n                                placeholder={state.priv}\r\n                                name={'priv'}\r\n                                value={state.value} checked={checked}\r\n                                onChange={() => {\r\n                                    if (checked) {\r\n                                        setCheck(false);\r\n                                        state.priv = 0\r\n                                        handlePrivate()\r\n                                    } else {\r\n                                        setCheck(true)\r\n                                        state.priv = 1\r\n                                        handlePrivate()\r\n                                    }\r\n                                 }}/>\r\n\r\n                            </InputGroup>\r\n                        </Row>\r\n                    </Card.Body>\r\n                </Card>\r\n            </Container>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Settings","import React from 'react';\r\n\r\nfunction TermsAndConditions(){\r\n  return(<label>Insert Terms and Conditions</label>);\r\n}\r\n\r\nexport default TermsAndConditions","import React, {useEffect, useState} from 'react';\r\nimport './About.css';\r\nimport Header from \"../../components/header/Header\";\r\nimport 'react-multi-carousel/lib/styles.css';\r\nrequire('dotenv').config();\r\n\r\nfunction About(props) {\r\n    // const { authTokens } = useAuth();\r\n    // const [state, setState] = useState({\r\n    //     isLoggedIn: false,\r\n    //     isLoading: true,\r\n    //     // giftData: [],\r\n    //     // gifts: [],\r\n    //     // giftID: null,\r\n    //     // modalIsOpen : false,\r\n    //     // amount: 0,\r\n    // });\r\n    // /**\r\n    //  * On page load\r\n    //  */\r\n    // useEffect(() => {\r\n    //     if (authTokens) {\r\n    //         setState(prevState => ({...prevState, isLoggedIn: true}))\r\n    //     }\r\n    // }, [authTokens]);\r\n\r\n    /**\r\n     * page content\r\n     */\r\n    return (\r\n        <div>\r\n            <Header/>\r\n            <div className={'content-container'}>\r\n                <div className={'about-page-container'}>\r\n                    <div className={'about-info-container'}>\r\n                        <div>\r\n                            <p className={'about-section-title'}>About wishwell</p>\r\n                            <div class={'about-grey-background'}>\r\n                                <p className={'section-description'}>Wishwell is gift giving platform that combines the elements of a gift registry and a social media sharing platform. Use Wishwell to see and keep track of what gifts you and your friends want, see what upcoming events your friends are planning and create your own events, and donate to the gifts of your choosing!</p>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    {/*<div className={'home-image'}>*/}\r\n                    {/*    <img className={'home-image'} src={GiftHome} alt={\"WishWell\"}/>*/}\r\n                    {/*</div>*/}\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nexport default About;","import React, {useContext, useState} from 'react';\r\nimport {Button, Col, Form, FormControl, InputGroup, Tab, Tabs, Image} from \"react-bootstrap\";\r\nimport axios from \"axios\";\r\nimport {UserContext} from \"../../utils/UserContext\";\r\nimport Header from \"../../components/header/Header\";\r\nimport Loading from \"../../components/loading/Loading\"\r\nimport \"../gift/AddGift.css\";\r\nimport \"../gift/Gifts.css\";\r\nimport {app, eventsService, giftsService, usersService} from '../../utils/ServerConnection'\r\nimport {ToastContainer, toast} from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\n\r\nfunction AddEvent() {\r\n    const {user} = useContext(UserContext);\r\n    const [addEvent, setAddEvent] = useState({\r\n        name: '',\r\n        description: '',\r\n        privacy: 0,\r\n        end_date: '',\r\n        userId: user.id\r\n    });\r\n\r\n    const [errors, setErrors] = useState({\r\n        nameError: '',\r\n        descriptionError: '',\r\n        priceError: '',\r\n        linkError: '',\r\n        thumbnailError: '',\r\n        emailError: ''\r\n    });\r\n\r\n    // Error handlers for form\r\n    const hasNameError = () => {\r\n        return errors.nameError !== '';\r\n    };\r\n\r\n    const hasDescriptionError = () => {\r\n        return errors.descriptionError !== '';\r\n    };\r\n\r\n    const handlePrivateChecked = () => {\r\n        setAddEvent(prevState => ({...prevState, privacy: addEvent.privacy ? 0 : 1}));\r\n    };\r\n\r\n    const addEventAlert = () => toast(\"Your event has been added!\");\r\n\r\n    const handleAddEvent = async (e) => {\r\n        e.preventDefault();\r\n\r\n        //The following check if the user left an input box empty\r\n        if (addEvent.name === ''){\r\n            setErrors(prevState => ({...prevState, nameError: 'Value cannot be empty'}))\r\n        } else if (addEvent.description === ''){\r\n            setErrors(prevState => ({...prevState, descriptionError: 'Value cannot be empty'}))\r\n        // } else if (addEvent.end_date === 'mm/dd/yy'){\r\n        //     setErrors(prevState => ({...prevState, nameError: 'Value cannot be empty'}))\r\n        } else {\r\n            try {\r\n                const createdEvent = await eventsService.create(addEvent);\r\n                console.log(\"event has been created!\")\r\n                addEventAlert();\r\n                // const createdEvent = await eventsService.create({\r\n                //     ...addEvent, name: });\r\n                //TODO: Gotta add an event page and the gifts listed with calls to server\r\n                // const giftData = await giftsService.create({\r\n                //     ...addGift, receiverId: receiverData.data[0].id,\r\n                //     receiverName: receiverData.data[0].name\r\n                // });\r\n            } catch (err) {\r\n                console.log(err);\r\n            }\r\n        }\r\n    };\r\n\r\n    // Form handler\r\n    const handleChange = (e) => {\r\n        const {name, value} = e.target;\r\n        setAddEvent(prevState => ({\r\n            ...prevState,\r\n            [name]: value\r\n        }));\r\n        setErrors(prevState => ({\r\n            ...prevState,\r\n            [name + 'Error']: ''\r\n        }));\r\n    };\r\n\r\n    return(\r\n        <div>\r\n            <Header/>\r\n            <div className={'content-container padding-container'}>\r\n                <h1>Add an Event</h1>\r\n                <Tabs fill className={'tabs'} defaultActiveKey=\"manual\">\r\n                    <Tab eventKey=\"manual\" title=\"Manual\">\r\n                        <div className={'add-gift-form-container grey-background'}>\r\n                            <Form className={'gift-form'}>\r\n                                <Form.Group className={'form-group'}>\r\n                                    <Form.Label>Name</Form.Label>\r\n                                    <Form.Control className={hasNameError() ? 'is-invalid' : ''}\r\n                                                  placeholder=\"Enter a name for your event\"\r\n                                                  onChange={handleChange}\r\n                                                  name={'name'}/>\r\n                                    <div className={hasNameError() ? 'form-error-message' : 'hidden'}>{errors.nameError}</div>\r\n                                </Form.Group>\r\n\r\n                                <Form.Group className={'form-group'}>\r\n                                    <Form.Label>Description</Form.Label>\r\n                                    <Form.Control className={hasDescriptionError() ? 'is-invalid' : ''}\r\n                                                  placeholder={'Enter a description for your event'}\r\n                                                  as=\"textarea\" rows={3}\r\n                                                  name={'description'}\r\n                                                  onChange={handleChange}/>\r\n                                    <div className={hasDescriptionError() ? 'form-error-message' : 'hidden'}>{errors.descriptionError}</div>\r\n\r\n                                </Form.Group>\r\n\r\n                                <Form.Row>\r\n                                    <Form.Group as={Col} className={'form-group'}>\r\n                                        <Form.Label>Date</Form.Label>\r\n                                        <Form.Control placeholder=\"Enter the date of your event\"\r\n                                                      name={'end_date'}\r\n                                                      type={'date'}\r\n                                                      onChange={handleChange}/>\r\n                                    </Form.Group>\r\n                                </Form.Row>\r\n\r\n                                <Form.Group controlId=\"formBasicCheckbox\">\r\n                                    <Form.Check onClick={handlePrivateChecked}\r\n                                                type={'checkbox'}\r\n                                                label={'Private'} />\r\n                                </Form.Group>\r\n\r\n                                <Button onClick={handleAddEvent}>Add Event</Button>\r\n                                <ToastContainer\r\n                                    position=\"bottom-left\"\r\n                                    autoClose={5000}\r\n                                    hideProgressBar={false}\r\n                                    newestOnTop={false}\r\n                                    closeOnClick\r\n                                    rtl={false}\r\n                                    pauseOnFocusLoss\r\n                                    draggable\r\n                                    pauseOnHover={false}\r\n                                />\r\n                            </Form>\r\n                        </div>\r\n                    </Tab>\r\n                </Tabs>\r\n            </div>\r\n        </div>\r\n    )\r\n\r\n}\r\n\r\nexport default AddEvent;\r\n","import React, {useState, useContext, useEffect} from 'react';\r\nimport \"../../App.css\";\r\n\r\nimport {Button, Card, Col, Container, Row} from 'react-bootstrap';\r\nimport FriendSnippet from \"../FriendSnippet\";\r\nimport GiftPro from \"../gifts/GiftPro\";\r\nimport {withRouter} from \"react-router\";\r\nimport Header from \"../header/Header\";\r\nimport GiftButton from \"../buttons/GiftButton\";\r\nimport {UserContext} from \"../../utils/UserContext\";\r\nimport {useParams} from 'react-router-dom';\r\nimport * as emailjs from \"emailjs-com\";\r\nimport {app, giftsService, usersService, userRelationshipsService} from '../../utils/ServerConnection';\r\nimport \"../../pages/searchResults/searchPage.css\"\r\n\r\n\r\n\r\nfunction UserCard(props) {\r\n\r\n    const userId = props.userID;\r\n    const name = props.name;\r\n    const [state, setState] = useState({\r\n        name: '',\r\n        pic: '',\r\n        bio: '',\r\n        friend: false,\r\n        requested: false,\r\n        priv: false\r\n    });\r\n\r\n    useEffect(() => {\r\n        usersService.get(userId).then((resp)=>{\r\n            setState(prevState => (\r\n                {\r\n                    ...prevState,\r\n                    name: resp.name,\r\n                    bio: resp.bio,\r\n                    dob: resp.bio,\r\n                    pic: resp.pic\r\n                }))\r\n        }) \r\n\r\n    }, [])\r\n\r\n    return (\r\n        <div className={'d-flex w-75 justify-content-center m-2 p-2 align-items-center'} id=\"userCard\">\r\n            <Container className={'d-flex justify-content-center align-items-center h-100 w-100'}>\r\n            <Row className={\"d-flex justify-content-center align-items-center w-100 h-100\"}>\r\n                    <Col className={'d-flex'}>\r\n                        <img src={state.pic} alt=\"Profile Picture\" id={'profilePicture'}/>\r\n                    </Col>\r\n                    <Col className={'d-flex flex-column align-items-center'} xs={5} id={\"bio\"}>\r\n                        <h3>{state.name}</h3>\r\n                        <p>{state.bio}</p>\r\n                    </Col>\r\n                    <Col className={'d-flex justify-content-end'}>\r\n                        <Button>\r\n                            Add Friend\r\n                        </Button>\r\n                    </Col>\r\n            </Row>\r\n            </Container>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default UserCard;","import {UserContext} from \"../../utils/UserContext\";\r\nimport React, {useState, useContext, useEffect} from 'react';\r\nimport \"../../App.css\";\r\nimport Header from \"../../components/header/Header\";\r\nimport {useParams} from 'react-router-dom';\r\nimport {usersService} from '../../utils/ServerConnection';\r\nimport UserCard from \"../../components/userCard/UserCard\";\r\nimport \"./searchPage.css\";\r\nimport {faFilter, faSortAlphaDown, faSortAlphaUp} from \"@fortawesome/free-solid-svg-icons\";\r\nimport {FontAwesomeIcon} from \"@fortawesome/react-fontawesome\";\r\n\r\n// Component that displays search results\r\nfunction SearchResults() {\r\n\r\n    const[results, setResults] = useState([]);\r\n    const [isLoading, setLoading] = useState(true);\r\n    const search = useParams();\r\n    const {user} = useContext(UserContext)\r\n\r\n\r\n    // Currently using a useEffect to load in search results\r\n    // TODO (possible): pass in data list as props from typing into the search bar?\r\n    //                  - would make all search functionality be in the header file\r\n    useEffect(() => {\r\n        setLoading(true);\r\n        var searchInput = search.id.trim();\r\n        usersService.find({\r\n            query: {\r\n                $select: ['name', 'id'],\r\n                $sort: {\r\n                     name: 1\r\n                },\r\n                id: {$ne: user.id},\r\n                name: {$like: searchInput + '%'}\r\n            }\r\n        }).then((users) => {\r\n            setLoading(false);\r\n            if (users.data.length == 0) {\r\n                setResults([]);\r\n            } else {\r\n                setResults(users.data);\r\n            }\r\n        });\r\n    }, [search.id])\r\n\r\n// #region SORTING\r\n\r\n    const [sort, setSort] = useState('');\r\n    const [searchIcon, setIcon] = useState(faFilter);\r\n\r\n    const requestSort = () =>{\r\n        if (sort === \"ASC\") {\r\n            setSort(\"DESC\");\r\n            setIcon(faSortAlphaUp)\r\n        } else if (sort === \"DESC\") {\r\n            setSort(\"\");\r\n            setIcon(faFilter);\r\n        } else {\r\n            setSort(\"ASC\")\r\n            setIcon(faSortAlphaDown)\r\n        }\r\n    }\r\n\r\n\r\n    const sortedResults = React.useMemo(() => {\r\n        let sortableResults = [...results];\r\n        if (sort !== null) {\r\n          sortableResults.sort((a, b) => {\r\n            if (a.name < b.name) {\r\n              return sort === 'ASC' ? -1 : 1;\r\n            }\r\n            if (a.name > b.name) {\r\n              return sort === 'ASC' ? 1 : -1;\r\n            }\r\n            return 0;\r\n          });\r\n        }\r\n        return sortableResults;\r\n      }, [results, sort]);\r\n\r\n// #endregion\r\n\r\n\r\n    //TODO: create our own loading gif... or import a library?\r\n    if(isLoading) {\r\n        return (\r\n            <div>\r\n                <Header/>\r\n                <div className={\"d-flex justify-content-center pt-5\"}>\r\n                    <div className={\"flex-column\"}>\r\n                        <img src=\"https://digitalsynopsis.com/wp-content/uploads/2016/06/loading-animations-preloader-gifs-ui-ux-effects-18.gif\"/>\r\n                        <h2 className={\"text-center\"}>Loading...</h2>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n    \r\n    //no search results found\r\n    if (results.length === 0) {\r\n        return (\r\n            <div>\r\n                <Header/>\r\n                <div className=\"d-flex p-2 pb-0 mt-3 justify-content-center flex-column\" id=\"results\">\r\n                    <h3 id=\"searchResultsHeader\">No results were found for {search.id}.</h3>\r\n                    <h4 className={'align-self-center'}>Please try another search</h4>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n    else {\r\n        return (\r\n            <div>\r\n                <Header/>\r\n                {/* GENERAL SEARCH LIST */}\r\n                <div className=\"d-flex p-2 justify-content-around pb-0 mt-3\" id=\"results\">\r\n                    <div className=\"align-self-end\">\r\n                        <div id=\"numberOfResults\">\r\n                            {results.length} result(s)\r\n                        </div>\r\n                    </div>\r\n                    <div>\r\n                        <h2 id=\"searchResultsHeader\">Search Results for: {search.id}</h2>\r\n                    </div>\r\n                    <div className=\"align-self-end p-2\">\r\n                        <button\r\n                            onClick={requestSort}\r\n                        > <FontAwesomeIcon icon={searchIcon}/></button>\r\n                    </div>\r\n                </div>\r\n\r\n                {/* LOAD USERS FROM SEARCH */}\r\n                <div className={\"d-flex justify-content-center align-items-center\"}>\r\n                    {sortedResults.map((user) =>\r\n                        <UserCard userID={user.id}/>\r\n                    )}\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default SearchResults;","import React, {useState, useMemo} from 'react';\r\nimport {\r\n    BrowserRouter as Router,\r\n    Switch,\r\n    Route\r\n}\r\nfrom \"react-router-dom\";\r\nimport './App.css';\r\nimport SignUpForm from \"./pages/signup/SignUpForm\";\r\nimport Home from \"./pages/home/Home\";\r\nimport TestClient from \"./pages/testClient\";\r\nimport LogIn from \"./pages/login/LogIn\";\r\nimport {UserContext} from \"./utils/UserContext\";\r\nimport PrivateRoute from \"./utils/PrivateRoute\";\r\nimport Account from \"./pages/account/Account\";\r\nimport Gift from \"./pages/gift/Gift\";\r\nimport SearchGift from \"./pages/gift/SearchGift\";\r\nimport ScrollToTop from \"./components/ScrollToTop\";\r\nimport AddGift from \"./pages/gift/AddGift\";\r\nimport Settings from \"./pages/settings/Settings\";\r\nimport TermsAndConditions from \"./pages/signup/TermsAndConditions\";\r\nimport About from \"./pages/about/About\";\r\nimport AddEvent from \"./pages/event/AddEvent\";\r\nimport SearchResults from './pages/searchResults/SearchResults';\r\nimport { createBrowserHistory } from 'history';\r\n\r\n\r\nfunction App(props) {\r\n\r\n    const [user, setUser] = useState(null);\r\n    const value = useMemo(() => ({user, setUser}), [user, setUser]);\r\n\r\n\r\n  return (\r\n      <UserContext.Provider value={value}>\r\n          <Router history={createBrowserHistory()}>\r\n              <ScrollToTop/>\r\n              <div className=\"App\" style={{width: \"100%\", height:\"100%\"}}>\r\n                  <Switch>\r\n                      <Route path={\"/signup\"} exact component={SignUpForm}/>\r\n                      <Route path={\"/\"} exact component={Home}/>\r\n                      <Route path={\"/about\"} exact component={About}/>\r\n                      <Route path={\"/login\"} exact component={LogIn}/>\r\n                      <Route path={\"/terms\"} exact component={TermsAndConditions}/>\r\n                      <Route path={\"/debug\"} exact component={TestClient}/>\r\n                      <Route path={\"/search-gift\"} exact component={SearchGift}/>\r\n                      <PrivateRoute path={\"/account/:id\"} exact component={Account}/>\r\n                      <PrivateRoute path ={\"/gifts/:id\"} exact component={Gift}/>\r\n                      <PrivateRoute path={\"/addGift\"} exact component={AddGift}/>\r\n                      <PrivateRoute path={\"/addEvent\"} exact component={AddEvent}/>\r\n                      <PrivateRoute path={\"/settings\"} exact component={Settings}/>\r\n                      <PrivateRoute path={\"/search=:id\"} exact component={SearchResults}/>\r\n                  </Switch>\r\n              </div>\r\n          </Router>\r\n      </UserContext.Provider>\r\n\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './utils/ReportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}